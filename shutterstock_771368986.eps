%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: idea.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Novokhatskyi Artem
%%CreationDate: 12/9/2017
%%BoundingBox: 0 0 250 251
%%HiResBoundingBox: 0 0 250 250.0005
%%CropBox: 0 0 250 250.0005
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-12-09T11:58:08+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-12-09T11:58:10+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-12-09T11:58:10+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVkU0Myl4ZFkUMyFkIYckJVlqO6sCDiq/FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUv0rzBourSXcem3kV&#xA;29hKYLwRHl6co6o3uMVWL5m0JvML+XVu1OtJD9Zaz4tyEWw58qce474qwLzf+WHm7WfzO0nzPZa2&#xA;ttpFkYGmtWeUSIIW5OkSKvpsJe/Jh1PXFWfXt5w1vTrP67FCLmO4Y2LxlpJ/TCbxycgE9PlVhQ1r&#xA;2pirGtJsrfyVq+n+WfL+gXMukarLcXV7qgkeSO2lbcB+SvsQvEfEO3UmuKpN5Q/LDzdo35nat5nv&#xA;dbW50i9M5itVeUyuJmDIkqMvBRF24seg6dMVZ63mbQl8wp5da7Ua08P1lbPi3Ixbjnypx7Hviq/V&#xA;fMGi6TJaR6leRWj38ogsxKePqSnoi+5xVMMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVS7zFr+neX9EvNZ1FmWysYzLLwHJjvQKo23ZiAMVYP5K856L5g8r6/rPkDRki1&#xA;z1WkuLC4EcJnunq6vI6vxPPk25Yb4qzDSbZPqltrut6da2XmD6oq6jcIqM0QA5SRif4mMatX9ojF&#xA;Xhf5keSfPfnXz5b+ZPKF2upaJL6SabqVvcosdo0ICSivIMKSKz1QGtaddsKvbb7WfMNr5l0jS4dI&#xA;a90y6jc6hrKuFEDopKgx8f22Uftd8CpXe6laab5O13S/JEwvNY0G3lC2gka5ninfm45iQuzNXkVU&#xA;9aUHhirzL8jvzC84m91i486ahKPLsEIZr/UBwSK7eVFSNZGC05qzfD0FB0wq9o1a2T6pc67omnWt&#xA;75g+qMunXDqitKCOUcZn+FhGzU/aAwK8x/Mz8z4PLmn+W/8AE/lu3v8AzUyi/wDqpkAhs5EcUdJB&#xA;61W5LtxPbr4lXoX5d+ebPzr5Yh1u2ga1ZnaG4tnPL05UpyUPReQoQQaYFZLirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirG778wvK9l5wtPKNxcMus3qc4YwjFBUEqrP0DMFNP7&#xA;RiqveXml61qWpeUr/TriW3+qJJcyyxMLSWOYleCTDq60/p0NFV3lvyd5e8raZLYeXLJLCKVmkI5P&#xA;IWkIoGd5Gd2p7nFXnv5dj8wvLFr5h1T80dS4aMFBja5nSf4qkM0QiL8VYEAIKEnouFUv0j87NF0+&#xA;zNr5M8kalc+X7VmrcW0RSIVPxNxRZRuf5mB8cVZ75C/NTyp51SSPTZXt9RgFbjTbkBJ1A2LAAsHW&#xA;u1VO3emBXkyfmj5x03zt5qTy/wCWNKlSHUZra+niV4J5hbzyLG8rNNR3ILbhOpzC1faODTkDLLh4&#xA;uWx/QHK0+iy5gTAXXu/SmVz+eujahZnS/wAwPKFxb2MrDm60uIGYGqtxcRUof5WY5bg1mHN/dzjL&#xA;3Fhl02TH9cSEd541bzh5zXRrv8ptaSawtqi+gt7hLaWN6jg08U3BzGFH2SD/AKpzJaGbefvyq8ue&#xA;erez/TTTQ3tmKR3loyo9GpzQ81dSpIqNqj78Cq/lix0HydNp3knSbG89F4JrsXxjMkPJWAb159l9&#xA;RyegHgNvhxVEWP5heV73zhd+Ube4ZtZsk5zRlGCGgBZVfoWUMK/2HFWSYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXmvm/WrfU/KWq+cPKGki580aS0tha3k9n/pUXpSiOdohIvJ&#xA;giO5H0givJcVQ/5Na9+Y3mLybqba87W9+rtFpOpXNuFYlo/tNEBGHWN6b033HbFXpGkw6hBplrDq&#xA;Vwt3fxxIt1dInprJIFAZwlTxqcVeSfmlaN5q/Nvyp5JvHI0RbdtUvIQSBKVMo4mntBx9gxwqzHzj&#xA;5wk8kNpSw6I0nlcVTUr62UhLCMFVQ+kin4fi/DArA/zqh0zQL/y1+Z+guiXLXsUV1NbkcLuCWNpQ&#xA;zcdm5RxsvLuG9hQqxTRP+U389f8Abauf+oibOH9r/qx+6X6HqPZ76Z+8MgZVdSrgMrCjKRUEZxoJ&#xA;BsPREWxq/wDJaQ3i6t5auX0TWYTyiltyUjJ8Cq/ZB6Gm3iDnS9ne0ubCRHL+8h/sh8evx+bptZ2L&#xA;jybw9Evs/HuZ75F/N3WNbiufKOuyR6L50aJ49N1F4wbeeQqQjhKhedd6D4W7fy532n1OPNATxnii&#xA;Xk82CeKXDMUUx/OXXvzG8u+TdMbQXa4v2dYtW1K2twzArH9pYiJAiyPXem2w75c1IjyhrVvpnlLS&#xA;vOHm/SRbeaNWaKwuryCz/wBKl9WUxwNKI15KHREJ+gAV4rir0rFXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FWGebPOkflDW47/zDq1ra+Wbq39G0slhlkvHvFeruOAb92qHc/IdeqqT6&#xA;l+Ztt5a8oW2qearpdYttcuZV06fR4mjX6lIOUfIyPGVZU60PLtuQWxVPru88u/lx+XzXEIkOlaXD&#xA;W2ikdnlkeRvgTk+9Xd/o8KDFXneg+SPzC/Me2j8x+bPMN1o2nXg9XTtG04mICJt0c1PEVG45BmI7&#xA;jCrD/wAzvI3mH8sdU0jzZo2t3V+Ud7eG4u1EkkBKsQjMSyskiu+3Ed/HFXtP5WeatQ84fl9HqfmG&#xA;1RHm9aC4+DjFPCvwmTga/Cwqrdqg4FeJ+dJUf/nH/S0gkaXT4PMc8Wmu1STaqLv0+tT9+FUTon/K&#xA;b+ev+21c/wDURNnD+1/1Y/dL9D1Hs99M/eGRZxj0TsVSTzV5ag1uxAU+jf2/x2V0NmRxuBUb8T/b&#xA;m27J7UnpMl84H6h+n3hwdfoY6iFfxDkfx0Z3+Xnme0/MjyNqPlrzV6i6tp4Fvq6Ru0UsiIapOOG9&#xA;SyUcCoqOlGAz1KGSM4iUTcTyeFnAxJB2IR2nfmbbeZPJ9xq3la6XR7XQ7qJNRn1iNpB9TjAZ+Ppv&#xA;IzM6dKnkTtsSGyTFOPKfnSPzfrcl/wCXtWtbryza2/o3dk0Msd4l4z1RzzC/u2QbH5jr0VZnirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYT+Zn5VaP5+gsVvrmazn09pDBNCFNVlC81ZW&#xA;6/YWnhiqe6J5R0PSfL2n6DHbrc2OnKotxcqsrc1Jb1DUU58iTUD5YqwP/nJeGWT8sndGAWG9t3kB&#xA;YAlTySgH7R5MDT6e2EKzqw81eWD5ZsNa+vW1lo91DGbaaeVIo1DLtHycgclpxI8RgV59rP51fpnU&#xA;J9E8k+W5fNhiPG5umHGzBB23KsGWo2Zio8K4VUJfzN/NDy5bCbzZ5EWPREAE0umyJIIYqUqyI860&#xA;H+UVHviqQfnfqvlHU/yc0e68qLbx6QdXj4wW0awLFIbe4Z0aJQvB6mp298QqTaJ/ym/nr/ttXP8A&#xA;1ETZw/tf9WP3S/Q9R7PfTP3hPbm5t7WB7i4kWKCIcpJGNAAM5DFilkkIxFyPR6CcxEEyNAJDZfmB&#xA;5VvLoW0d5wdjRGlRo0Y+zMAB9NM22b2f1eOHEY2PI2fx7nAx9raecuES+ezI80rsWPwai3lH8zNE&#xA;8yRnhY6k40/Vh0UrJRQzfLZ/9hnfeymt48csJ5w3HuP6j97yvb2m4ZDIP4tj7/7PufQGt+UdD1by&#xA;9qGgyW621jqKsLgWyrE3NiG9QUFOfIA1I+edY8+kX5Z/lVo/kGC+WxuZryfUGjM80wUUWINwVVXp&#xA;9tq+OKs2xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVCatq+maPp8uo6ncpaWMHH1riU8&#xA;UXmwRan3ZgMVSO68wWFl5htLy980WdvpGpWax6do8ohjMszOGF0k7N6j8kYJxA4/Tiqb6S3mAy34&#xA;1ZbVYhcsNNNqZCWtaAoZufSTqG47Yq8b0rRB+bP5h6zqWvO8nlPy3O1lpunKxVJZVYhmbjQ7hOT9&#xA;DuorQYVTn84PyZu/Muj6NZ+VfqunxaQ0wXTmBhgKz8SXX01b4wyb1G9TvXqqzP8ALPyc/lDyXp+h&#xA;zPHLdwB3u54VoryyyNIdyAW4hggJ7AdOmBWUMoYFWFVOxB6EYq+X/wDnITyC3lh1v9GrB5a1m5WS&#xA;609Noob+JJOLIvRQ8bvQDpQ9qAEKq6J/ym/nr/ttXP8A1ETZw/tf9WP3S/Q9R7PfTP3hIvzEubnU&#xA;tW03yxatx+sMstwe25IWtP5QrMR8sh7O4o4cOTVTH07D9Pz2DPtecsmSGCP8W5/HluUfrn5f+WP0&#xA;KwRFspLWMlb0mn2R1l7NU9e/hmJofaDV+OL9Ykfp/wCJ7vxbfqeycHhbenhH1fr71n5XateX2iSw&#xA;XJLizkEcMrbkoVqFr/k/qph9qNJDFnEo7cYsjz7/AIo7E1EsmIiX8JofjyRn5j2guPKV2aVeAxzJ&#xA;7EOAf+FY5jezmbg1kf6Vj7P1hu7Yx8Wnl5UXvGi6r5i1Tyx5W1LTBauL6K0m1drovyWCSENL6Pp9&#xA;ZeWw5bZ6a8Q3a+YLC98w3d5ZeaLO40jTbNo9R0eIQyGKZXLG6edW9ROKKU4kcfpxVPNJ1fTNY0+L&#xA;UdMuUu7Gfl6NxEeSNwYo1D7MpGKovFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqhdT0vTdV&#xA;sZbDUraO8spuPq20yh424sGWqnbZlBxV4/56/K7RPzMFt5j8taoRBp9u+npZrEypL9Ud6RwtKYxH&#xA;8RKcuJXv8yr17RXvZNIs3vrX6jeGFPrFn6gm9J+I5J6i7Px8RgV475A1u28gfmF5j8oeYHFlaavd&#xA;nUNFvpjxikEpNFLnarLxFenJSOtMKvVNS86+U9M1K20zUNWtra/uwpt7eSQBmDnih9gx6V64Fa85&#xA;+bNP8qeXrrWr1WkSABYbeP7csrnjHGnuzH6BvirHvImlfmPNq8vmTzXqSwRX1uqReWoF/dW3xck5&#xA;M1f3iqfipuSdzQAYqxj/AJyn/wDJfaf/ANtaH/qGuMIV5HqX+Mx5884v5d4sg1i8FwjelufrEvE/&#xA;vae/Q5oe2fyNxGp5719Xx+l2vZv5qpeD8eX6WPWb+c9T81XN5aIp1m2qkzfugsXEeiaCQlPbauOY&#xA;aHBpIwmf3EuX1b/xdN04zqsuoMoj97Hny26ddmQr5E83axIreYNVpb1qYUYufoUBY1+e+ac9u6PT&#xA;D/Bsfq76r7fqdj/JeozH99Pbu/GzOdH0ex0ixSysk4QpUkk1ZmPVmPcnOU1msyajIcmQ2T+KDvdP&#xA;p4YYCMRsgPOzKvlTUyTQeiR9JIAzL7EF6zH/AFmjtI/4PP3PYfI5v4fyi0ZrO0+uXo0eFrezMgh9&#xA;VjCCieo2ycq/aOeqvBMJ8i/ldon5Zi58x+ZdUJg1C3TT3s2iZki+tulY5miMgk+IBOXEL3+RV7Bp&#xA;ml6bpVjFYabbR2dlDy9K2hUJGvJizUUbbsxOBUVirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVQ+o3hstPurwQS3RtoZJhbW685pfTUt6cSVHJ2pRR3OKvPdW/NTy3pfnDR11PVLzTv0jYxepoM1&#xA;sAIHuG5RSXTgkxSAHiyCtO+Kss8m+Wr3y9ps9nd6vda1JLcPcLc3jMzojqqiJeTPRF47AeOKpH+c&#xA;tl5NfyRfaj5nsReQ2CFrQKxjmE8hCRrHIvxLycry6im5Bpirx3yH/wA44X+vaVp2uaxqR0+C6ImG&#xA;nLEXl+rGhj/eF14F16fCaCnfbDavUvzta6EHlIxWVxfQQ+YbK4uobeP1eUcRb4CK9W5UUHY4FelY&#xA;q8c/5yn/APJfaf8A9taH/qGuMIVg+i/8pv56/wC2zc/9RE2cP7X/AFY/dL9D1Hs99M/eGPflUTcX&#xA;et37dZpI6E9fiZ3bx9u+PtX6IYcY6A/ZwhPYR4pZJ95H6XoecY9C7FWJ/mNLNJo0GlWy+pearcxW&#xA;8MQ+0x5Btv8AZBR9OdL7Lafj1XH0hE/M7frdN25m4cHD/OP7XvmteSbi+8r6XoWn6vc6MNMNuBc2&#xA;bMjSR28Ri9JuLJVGB3BPbPRXjmPaT+anlvVPOGsLpmqXmo/o6xl9PQYbYETvbtylktXJBlkIHFUN&#xA;K9sVehadeG90+1vDBLam5hjmNtcLwmi9RQ3pypU8XWtGHY4qiMVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVYT5t/Kfyb5h12HzHqVpPPqFoi/uYJAiz+ieSI6tQE9vtL7nFUSnnLTW8xaNZX&#xA;mqDStQv7Qu3lm4RDO0k3Foy8q8uDJwZQlfirirFP+cmobmT8tOcNfTiv7d7mgr+7Kugrv/Oy4Qr0&#xA;/S7qyu9NtLqxIaynhjktivQxOoKU/wBicConFXgX/OQ583z+c/LGmaDqMscl9GUtLC3maFxciWnr&#xA;OQVFGDKFJ6cWwhUw/wCck4r2L8q9EivpBNfR6hardSr0eUWc4dhsNi1T0xCsJtJfS80fmHLWnp6p&#xA;eNX5TTHON9p48WfCO8/pi9J2HKsWQ936il35RR00S8k/mueP/Axqf+Nswva6X7+A/ofpP6nJ9nx+&#xA;6kf6X6AzvOTd67FUv/LPST5z/M79MkF9C8rCsD9Ulu2J4cfkRzqP5V8c9O7A7POmweoeue5/QPx1&#xA;JeK7X1fjZaH0x2H6S9cfzlpq+YtZsrPVBquoWFoHXyzbognWSHk0hSVuPNn5qpSvw0zeOqQ3lL8p&#xA;/Jvl7XZvMem2k8GoXaN+5nkDrB6x5OiKtQD2+03scVZtirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVUb2GeeyuIIJ2tZ5Y3SK5VVZonZSFkCsCpKneh2xV5/qP5YeW59W0S61+yu/MGqpa&#xA;vaXmsA+nGRDE1JLiNHVuT8iqcKmvU98VVrU6R5kkvvLl3qUH6E1DS4I7PyvLH6OpWqhfiklDsZeV&#xA;OLDkNvhPuyrDNI1L8yvyn5aNqOkz+aPKUbH9H6hZgtNBGTXiygPxH+S1AD9lqbYVRS/85E6hq8s1&#xA;n5U8nX+o30dFIk2EbNUVlWJZOIqO7D5jGlTb8vPy78zyeZpPPnnyZJfMUkZjsLCOhjs42BFPhqvI&#xA;KxUBSepJLMdgqW/85USIPIOmxkjm2qxMq9yFtpwT/wAMMIV5zM/p6z+ZslK8L/UGp8nnOcl2+L1e&#xA;nH9L/fReg7JNafMfL9BW/lQgXyzKa/bupGP/AACD+Gaj2rN6oeUB98nYdgisB/rH9DNM5h3TFdSv&#xA;9V8zaynk7yoPWvbn4b69FfSt4q0kJYVpT9o/QPiOdl2B2ESRnzDYfTHv8z5d3f7ufPdrdqAA4sZ3&#xA;6nu8vf8Ad7+XVbDStF8kw2fli01WCbTbbT7qTWPL8cYl1O/llUVnjWNvV6A0A6KO4FV7h5ZEad+W&#xA;HluDVtbutAsrvy/qr2qWlnrBPqRgTRLWS3jd2bknEK/Ohr0PfFXoFlDPBZW8E87XU8UaJLcsqq0r&#xA;qoDSFVAUFjvQbYqrYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqo31u9zZT20c72&#xA;zzRvGtzFT1IyykB05BhyXqKjFWJWH5UeW7TzsnnP1rufW1iEbPLIhjd/R+rtMyqinmydd+Nf2cVZ&#xA;nirxnz3pvmHyD57l/MXQbNtQ0W/jEfmPT4qhl4gVm2BoPhDcqbGtdmwqnMH/ADkZ+VklgLl9Qnhn&#xA;41Nk9tMZa/y1RWir/s8FK8a/N/zN5m89WKeZhYS6f5OsJRbaX6/wvPNNu0lP2jxj/Zqq9K1rhVVu&#xA;/wDjqfmf/wAx2o/8TuM5Tt3/ABzTf1x/uou/7L/xbN/V/QV/5Vf8ou3/ADEyf8RXNJ7Vf40P6g/S&#xA;7LsL+4/zij7PSPNPnrzXf+WNMvItK07T0R7+7+JpWjkA2UDruelV9z2zc+z/AGNh8KOeQ4pnv5Df&#xA;udf2v2jkEzij6Yj5nZ7z5I8heXfJmlfo/RoCpehuruSjTTOOjSMAOldgNhnWPPJdf/lR5bu/Oz+c&#xA;/Wu4NbaIxq8UiCNH9H6usyqyMeap0341/ZxVltjbvbWUFtJO9y8MaRtcy09SQqoBd+IUcm6mgxVW&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVJ/Of/KH67/2z7v/AJMP&#xA;irA/yJ8teXLv8rtCvbrSrO4vG+tE3MtvE8p43koHxspbYKO+JVQ/5ycAH5bRACgGoQAAf8Y5MIV5&#xA;bd/8dT8z/wDmO1H/AIncZynbv+Oab+uP91F3/Zf+LZv6v6Cv/Kr/AJRdv+YmT/iK5pPar/Gh/UH6&#xA;XZdhf3H+cWbfkh/5M/zf/wAw1v8A8a513YP+J4/cfvLz/a3+Mz+H3B7pm3dc7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUFrennUtFv9OV/Sa9tprcSEVCmWMpy&#xA;ptWnLFXi9v8Alt5v8qWVvpEf5nwaRaxhmtrSREiAV3LMVEkoNC7HCqA17yFqev2IsdZ/NiwvrQOJ&#xA;RDKYSvNQQG2mHSpxVS1v8rtPvNZ12+svzE0y0t9buri5mteURHG4d24M3rb0D0rTMfLpceSUZTiD&#xA;KHLybseonCJjE0Jc0JpP5SNYwC1s/wAytMgVnqIYjEwLNQd5ganKtR2dgzS4skBKTZh1uXGOGEiA&#xA;9L/K78qNS8na1qeq3+srq02pRJGzCExEFDWpPNq7bZkYsUMcRCAqI6NGTJKcjKRsl6TljB2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV4Trq2uk/m/rMGteVR&#xA;5wutbghu9JVVjneC2jUxsphmBRAGjI5f1wqm3qaR/wCWbP8A0h6f/TFXeppH/lmz/wBIen/0xVj3&#xA;n3VfLdl5WvTdflV+jBOhghvmt7WBYpX2RjLAOaUPuK9O+KvY/Iel6hpXkzRdO1GUTXtraRRzuG5i&#xA;oX7Ib9oKPhrgVPsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVeP/AJ1w6jpPmby15j0TVTo2r3sn6GmvpiptFt2LSj1ldXXZmJ3H6q4VTj/Dv5lf+XOg/wC4&#xA;TZf9VMCu/wAO/mV/5c6D/uE2X/VTFWG+eNN85XGt+XvKet+dF13R/MF2sV7aWdtb2dyEjPLkRF6l&#xA;Y/Elu3Q4Ve8oioiogoqgBQOwGwwK3irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdiqC1jRNI1qxaw1azivrNyGME6B15Dowr0I7Eb4q+ZvzC8j6b5H87XVzfaQ&#xA;JvKGqcXsbhELpbSH7UR8KGu3daEdCM1naun1GTGPAnwzH2/jo5+gzYoT/ex4on7Eh1GTyhqaLpXl&#xA;XShqOs3x9K2WKF14FtuXxhdx9w6k5qOzNJ2icoOeZjAdLBv5fa7DW6nRiBGKIMj5VXzfRv5bflho&#xA;PlLR9PZrG3bzDHBxvdRChpDI9WkCud+I5cdqVAzqnQM3xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVZcW8FxC8FxGk0Mgo8UihlYeBU1BxVC6foei6&#xA;azNp2n21mzijtbwxxEjwPACuKo3FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYqlXmbzLpflvSJdU1Jn9BGWNIol5yyyyHikUa7cmZjQfjtiqWXPm7W7OSl55cuEj&#xA;NpNeCSOaGQL6AUtFIaqqSEN8PxEGhodsVQnl38zLPWr+xsRptzaT6rp51TTDKYWSaEEArWN3KNv+&#xA;0MVXeWfzEPmD6rJbaLdRWtzdz2L3DvCRFLbI7OZFR2bj+74hulSB3xVGXHn7RoPOEvlUpK2oR2LX&#xA;/NVrG3DcwLT4jLwIegHQ4qk7fmjdi5nsB5Zvm1S201dXlsQ8BcQsacQA9TIDtxAriq7VfzUGnN5i&#xA;EmhXky+WDD+k2he3b4LhPUSSMGQMy8KM21QPpoqmd154dJNNSz0qe/8A0lYPqSPBLAFjijVGbmXd&#xA;evqqFI2Y/I4q15W88t5hXTZ4tJubax1S2lu7a7laJlCxMi8XEbMVZvUFK4qr33nBrXzbb+Wk02ee&#xA;5urWS8iuFeIRenEQrV5MGB5EL074qkUH5vWR0OPzBd6LfWugmdra51AmBxbukpgLTRpIZAvqClVU&#xA;4qjtQ/MYW2tatpNvo91ez6RaLfzNC8FJIHBKmPk4LMafZ64qj/NnnjSfK8WmSaokg/SV1HaAIA3p&#xA;eoQGlkNaenGSAxHiKYqyLFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWKfmX5U1D&#xA;zL5cW20yaOHVLK6gv7BpqiIzW7cgrlQSAQT9OKrbm+87alp1zbPoKWXqWcySrJcxSmSd04IkLRtR&#xA;UqxZncdBQLU7KsQ8meRPOPlK90rVbazS9ZtNTTdasJrkPJG0BrHLZzSVCxv+1FVVr9FFV3kryT5n&#xA;8vhLptDifWFvrq4N0bwGP6tctyaMRggGQr8CmlAfi3FQVXXXkbzg82keZ4rWnmu31ma/vrZrpTbf&#xA;VZx6TxRtt/x7pFEDxqeO+Ksh0/RPMX/K1brzJPYCHSrnS009XM0bSLJHJ6vJkUn4T9nY4qv0Ly3q&#xA;h82+c7nVrBBo/mIW6w1lRy0dvbi1dZEG49QfEPbY4qgPy/8AJvmTy55a1GHUgL/U4kbTtIQSKK2E&#xA;DObYFz8KljMzN/k8RSoxVQ/LXyVrPlwaKkukRWt1b2slpq+ofWTMskR+NBDED8LGVUJYjZQRQ1BC&#xA;qcatpXmD/lZNjr9tp/1jTbTTp7KRhNGkjSTOsgKoxGw4cdyMVYtpvk3z1d+QbryXeadFpwv7ud7z&#xA;U3uI5kS3nuTcN6UUfJmkoeIDcR3riqrqXkDVJ/OmqanJoQvtLeyt7LTkN6sMnO0Pwu9K/C1O9fcd&#xA;sVRPmbyX5n83W+rpr1oIZBpa2eki0uFEL3JYSzSOjGqo88cJVWJoqbnlirOPKZ10eXrGPXohFq0M&#xA;SRXZV1kWR0UAyqy/znenbFU3xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:7B8B8A76C7DCE7119DB98C304F46DE1D</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:7B8B8A76C7DCE7119DB98C304F46DE1D</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:1F576C9878DAE711976BFA63CC9F1493</stRef:instanceID>
            <stRef:documentID>xmp.did:1F576C9878DAE711976BFA63CC9F1493</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1F576C9878DAE711976BFA63CC9F1493</stEvt:instanceID>
                  <stEvt:when>2017-12-06T13:28:34+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7B8B8A76C7DCE7119DB98C304F46DE1D</stEvt:instanceID>
                  <stEvt:when>2017-12-09T11:58:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>250.000000</stDim:w>
            <stDim:h>250.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=148 B=29 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>148</xmpG:green>
                           <xmpG:blue>29</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -250 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 250 li
250 250 li
250 0 li
cp
clp
0 0 mo
250 0 li
250 250 li
0 250 li
0 0 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
81.8389 192.802 mo
81.3711 192.549 80.7949 192.465 80.1826 192.465 cv
78.4121 192.465 77.3379 193.787 77.3379 196.211 cv
77.3379 198.264 78.3818 200.197 80.7412 200.197 cv
81.2451 200.197 81.7969 200.083 82.1699 199.752 cv
82.5234 199.464 82.8779 198.948 83.208 198.383 cv
83.3096 198.395 83.5381 198.528 83.5742 198.635 cv
83.4297 199.211 82.8477 200.305 82.5049 200.544 cv
82.0732 200.676 81.335 200.875 80.3984 200.875 cv
77.3203 200.875 75.5313 199.26 75.5313 196.337 cv
75.5313 194.819 76.2578 193.342 77.7705 192.562 cv
78.5264 192.178 79.4209 191.95 80.5791 191.95 cv
81.7129 191.95 82.709 192.161 83.3516 192.202 cv
83.2617 192.659 83.1299 193.739 83.1299 194.411 cv
83.0693 194.483 82.667 194.506 82.6621 194.447 cv
82.5234 193.487 82.3799 193.09 81.8389 192.802 cv
cp
.223529 .223529 .231373 rgb
f
87.2109 192.754 mo
87.1748 192.778 87.127 192.886 87.127 192.958 cv
87.0967 193.348 87.0967 194.842 87.0967 196.259 cv
87.0967 196.307 87.127 196.343 87.1631 196.343 cv
87.9307 196.374 88.5557 196.337 88.8076 196.211 cv
89.2217 196.019 89.582 195.587 89.582 194.699 cv
89.582 193.474 88.9336 192.7 87.6426 192.7 cv
87.5293 192.7 87.3428 192.718 87.2109 192.754 cv
cp
84.4268 192.161 mo
84.7559 192.161 85.71 192.202 86.1787 192.202 cv
87.2109 192.202 87.9551 192.161 88.6094 192.161 cv
90.2725 192.161 91.1719 193.09 91.1719 194.291 cv
91.1719 195.407 90.4395 196.079 89.5635 196.452 cv
89.5518 196.463 89.54 196.536 89.5518 196.547 cv
89.9355 197.208 91.1006 198.887 91.7783 199.561 cv
92.3125 200.083 92.4443 200.136 93.2188 200.233 cv
93.2549 200.281 93.2012 200.653 93.1406 200.676 cv
92.4268 200.724 91.1846 200.676 90.6436 200.424 cv
90.3799 200.292 90.1279 200.077 89.9717 199.848 cv
89.4434 199.211 88.6816 197.928 88.207 197.184 cv
88.0996 197.051 87.9795 196.967 87.8232 196.956 cv
87.6729 196.944 87.2715 196.956 87.1514 196.956 cv
87.127 196.956 87.0967 197.016 87.0967 197.028 cv
87.0967 197.832 87.0967 198.924 87.127 199.452 cv
87.1328 199.873 87.2344 200.028 87.5293 200.1 cv
87.7754 200.155 87.9551 200.184 88.291 200.233 cv
88.3516 200.262 88.3389 200.623 88.2676 200.665 cv
87.9795 200.665 87.3125 200.623 86.3105 200.623 cv
85.2969 200.623 84.6904 200.665 84.4268 200.665 cv
84.3662 200.617 84.3535 200.292 84.4268 200.233 cv
84.6846 200.197 84.9063 200.161 85.0859 200.124 cv
85.4043 200.052 85.5068 199.873 85.5303 199.404 cv
85.543 199.032 85.5547 197.166 85.5547 196.343 cv
85.5547 194.969 85.5547 193.834 85.543 193.342 cv
85.5303 192.946 85.4229 192.772 85.1162 192.7 cv
84.918 192.659 84.6543 192.622 84.3779 192.592 cv
84.3428 192.514 84.3535 192.19 84.4268 192.161 cv
cp
f
93.2666 192.154 mo
93.7051 192.154 94.4912 192.202 95.2168 192.202 cv
97.9658 192.202 li
98.5059 192.202 99.2383 192.19 99.6221 192.129 cv
99.6465 192.129 99.6768 192.178 99.6768 192.202 cv
99.5684 192.622 99.4912 193.51 99.46 194.182 cv
99.3887 194.243 99.0283 194.249 98.9746 194.213 cv
98.9209 193.75 98.8662 193.499 98.7705 193.282 cv
98.6504 192.97 98.4824 192.862 98.1465 192.838 cv
97.834 192.808 96.2979 192.808 96.1299 192.827 cv
96.0332 192.85 95.9619 193.024 95.9619 193.09 cv
95.9492 193.918 95.9492 195.131 95.9619 195.899 cv
95.9619 195.948 96.0039 196.007 96.04 196.007 cv
96.502 196.019 97.5156 196.019 97.9775 195.977 cv
98.2783 195.971 98.3857 195.827 98.4824 195.54 cv
98.5186 195.401 98.5605 195.203 98.5967 195.01 cv
98.6748 194.969 99.0469 194.975 99.1006 195.041 cv
99.0703 195.346 99.0225 195.899 99.0225 196.368 cv
99.0225 196.805 99.0283 197.316 99.0469 197.675 cv
98.9746 197.736 98.6143 197.749 98.542 197.7 cv
98.458 197.34 98.458 197.303 98.4219 197.129 cv
98.3506 196.932 98.2422 196.77 97.9482 196.727 cv
97.6064 196.698 96.5137 196.698 96.04 196.698 cv
96.0039 196.698 95.9619 196.799 95.9619 196.824 cv
95.9492 197.532 95.9619 198.756 95.9736 199.434 cv
95.9736 199.686 96.1113 199.873 96.2734 199.92 cv
96.5498 199.993 97.4863 200.016 98.1699 200.016 cv
98.7822 200.004 98.9561 199.92 99.2383 199.584 cv
99.4668 199.29 99.7549 198.786 99.9463 198.324 cv
100.03 198.317 100.343 198.426 100.396 198.499 cv
100.325 198.887 100.007 200.016 99.7842 200.448 cv
99.7188 200.592 99.6465 200.676 98.998 200.676 cv
97.8398 200.676 96.6934 200.623 95.248 200.623 cv
94.4014 200.623 93.5723 200.665 92.9004 200.665 cv
92.8711 200.586 92.8643 200.292 92.9004 200.233 cv
93.3564 200.184 93.7168 200.136 93.9453 200.077 cv
94.2334 200.004 94.3535 199.831 94.377 199.368 cv
94.4014 198.864 94.4014 197.616 94.4014 196.019 cv
94.4014 194.867 94.4014 193.727 94.377 193.348 cv
94.3408 192.911 94.2754 192.802 93.9688 192.7 cv
93.7705 192.646 93.5488 192.622 93.249 192.575 cv
93.1768 192.514 93.2012 192.202 93.2666 192.154 cv
cp
f
104.916 193.889 mo
104.652 194.615 104.208 195.995 103.962 196.679 cv
103.956 196.739 103.962 196.77 104.004 196.776 cv
104.147 196.799 104.52 196.799 104.964 196.799 cv
105.366 196.799 105.745 196.799 105.889 196.776 cv
105.912 196.776 105.942 196.727 105.942 196.679 cv
105.721 196.032 105.229 194.555 104.988 193.889 cv
104.977 193.889 104.935 193.882 104.916 193.889 cv
cp
102.336 199.032 mo
103.068 197.303 104.286 193.991 104.61 193.054 cv
104.718 192.772 104.832 192.376 104.862 192.178 cv
104.988 192.19 105.192 192.202 105.444 192.202 cv
105.721 192.202 105.889 192.19 106.015 192.178 cv
106.068 192.394 106.152 192.682 106.23 192.934 cv
106.608 193.966 107.929 197.784 108.421 198.965 cv
108.854 200.004 108.932 200.083 109.94 200.233 cv
109.981 200.281 109.958 200.617 109.903 200.665 cv
109.55 200.665 108.89 200.623 108.061 200.623 cv
107.161 200.623 106.513 200.665 106.116 200.665 cv
106.068 200.592 106.051 200.281 106.116 200.233 cv
106.381 200.184 106.663 200.136 106.813 200.077 cv
106.993 199.993 106.993 199.848 106.957 199.752 cv
106.825 199.224 106.446 198.156 106.225 197.591 cv
106.2 197.561 106.141 197.496 106.093 197.496 cv
105.889 197.483 105.402 197.496 104.904 197.496 cv
104.178 197.496 103.956 197.496 103.782 197.508 cv
103.728 197.508 103.668 197.58 103.638 197.639 cv
103.368 198.354 102.995 199.356 102.995 199.632 cv
102.995 199.848 103.02 200.016 103.392 200.113 cv
103.607 200.155 103.818 200.197 104.069 200.233 cv
104.124 200.281 104.101 200.617 104.034 200.665 cv
103.704 200.665 103.08 200.623 102.275 200.623 cv
101.627 200.623 101.123 200.665 100.775 200.665 cv
100.728 200.617 100.721 200.292 100.775 200.233 cv
101.747 200.1 101.939 199.993 102.336 199.032 cv
cp
f
115.174 200.665 mo
114.712 200.665 113.919 200.623 113.043 200.623 cv
111.903 200.623 111.206 200.665 110.798 200.665 cv
110.726 200.592 110.726 200.292 110.798 200.233 cv
111.183 200.197 111.53 200.155 111.717 200.1 cv
112.144 200.016 112.221 199.794 112.25 199.176 cv
112.287 197.94 112.287 195.179 112.287 192.946 cv
112.287 192.911 112.25 192.838 112.221 192.838 cv
111.969 192.808 111.068 192.808 110.642 192.838 cv
110.384 192.838 110.187 192.946 110.024 193.27 cv
109.85 193.571 109.663 194.014 109.501 194.506 cv
109.447 194.537 109.052 194.471 109.021 194.386 cv
109.124 193.811 109.262 192.682 109.304 192.058 cv
109.304 192.034 109.394 191.979 109.447 192.01 cv
109.771 192.129 110.204 192.202 110.636 192.202 cv
115.647 192.202 li
116.325 192.202 116.716 192.161 117.088 192.01 cv
117.124 192.01 117.195 192.083 117.195 192.106 cv
117.063 192.627 116.957 193.655 116.872 194.471 cv
116.836 194.531 116.44 194.531 116.397 194.483 cv
116.362 193.997 116.271 193.558 116.163 193.247 cv
116.038 192.958 115.888 192.862 115.624 192.838 cv
115.096 192.808 114.171 192.827 113.907 192.838 cv
113.871 192.85 113.841 192.886 113.841 192.946 cv
113.841 194.939 113.841 198.606 113.877 199.38 cv
113.907 199.764 113.985 199.993 114.292 200.083 cv
114.52 200.155 114.747 200.161 115.228 200.233 cv
115.281 200.292 115.252 200.623 115.174 200.665 cv
cp
f
118.006 192.161 mo
118.397 192.161 119.093 192.202 119.921 192.202 cv
120.941 192.202 121.506 192.161 121.824 192.161 cv
121.865 192.214 121.878 192.514 121.824 192.592 cv
121.535 192.622 121.284 192.659 121.109 192.7 cv
120.798 192.802 120.773 192.995 120.743 193.403 cv
120.714 193.918 120.714 194.999 120.714 196.188 cv
120.714 197.7 120.714 198.887 120.743 199.38 cv
120.761 199.722 120.798 199.993 121.205 200.083 cv
121.385 200.136 121.697 200.184 122.004 200.233 cv
122.039 200.292 122.004 200.623 121.962 200.665 cv
121.518 200.653 120.852 200.623 120.029 200.623 cv
119.044 200.623 118.475 200.665 117.989 200.665 cv
117.928 200.617 117.928 200.281 117.989 200.233 cv
118.276 200.197 118.492 200.161 118.654 200.124 cv
119.044 200.046 119.117 199.884 119.152 199.464 cv
119.189 199.02 119.189 197.508 119.189 196.032 cv
119.189 194.752 119.189 193.96 119.141 193.319 cv
119.122 193.006 119.057 192.808 118.793 192.731 cv
118.553 192.659 118.36 192.627 117.989 192.592 cv
117.934 192.52 117.952 192.202 118.006 192.161 cv
cp
f
122.07 192.161 mo
122.466 192.161 123.287 192.202 123.954 192.202 cv
124.818 192.202 125.646 192.161 125.887 192.161 cv
125.959 192.19 125.959 192.538 125.911 192.592 cv
125.574 192.646 125.335 192.718 125.19 192.772 cv
125.017 192.827 124.986 192.97 125.052 193.168 cv
125.412 194.182 126.89 198.024 127.171 198.696 cv
127.195 198.696 127.219 198.713 127.249 198.684 cv
127.592 197.916 128.899 194.609 129.224 193.535 cv
129.38 193.079 129.319 192.827 128.936 192.731 cv
128.726 192.682 128.468 192.627 128.113 192.592 cv
128.077 192.514 128.113 192.19 128.168 192.154 cv
128.396 192.154 128.924 192.202 129.842 192.202 cv
130.652 192.202 131.049 192.161 131.385 192.161 cv
131.427 192.19 131.433 192.514 131.385 192.592 cv
131.12 192.627 130.887 192.67 130.736 192.743 cv
130.328 192.911 130.195 193.198 129.884 193.907 cv
129.446 194.897 128.576 197.051 127.867 198.78 cv
127.52 199.657 127.285 200.317 127.171 200.731 cv
126.919 200.701 126.403 200.701 126.151 200.731 cv
125.989 200.184 125.778 199.561 125.503 198.84 cv
124.795 196.956 124.038 194.975 123.63 193.991 cv
123.258 193.09 123.103 192.838 122.657 192.718 cv
122.479 192.659 122.298 192.627 122.033 192.592 cv
121.985 192.514 122.021 192.178 122.07 192.161 cv
cp
f
131.486 192.154 mo
131.925 192.154 132.711 192.202 133.438 192.202 cv
136.187 192.202 li
136.727 192.202 137.458 192.19 137.843 192.129 cv
137.866 192.129 137.896 192.178 137.896 192.202 cv
137.789 192.622 137.711 193.51 137.681 194.182 cv
137.608 194.243 137.248 194.249 137.194 194.213 cv
137.141 193.75 137.086 193.499 136.99 193.282 cv
136.87 192.97 136.702 192.862 136.365 192.838 cv
136.054 192.808 134.517 192.808 134.35 192.827 cv
134.254 192.85 134.182 193.024 134.182 193.09 cv
134.17 193.918 134.17 195.131 134.182 195.899 cv
134.182 195.948 134.223 196.007 134.26 196.007 cv
134.722 196.019 135.735 196.019 136.197 195.977 cv
136.498 195.971 136.605 195.827 136.702 195.54 cv
136.738 195.401 136.779 195.203 136.816 195.01 cv
136.895 194.969 137.266 194.975 137.319 195.041 cv
137.29 195.346 137.241 195.899 137.241 196.368 cv
137.241 196.805 137.248 197.316 137.266 197.675 cv
137.194 197.736 136.835 197.749 136.762 197.7 cv
136.678 197.34 136.678 197.303 136.642 197.129 cv
136.57 196.932 136.462 196.77 136.168 196.727 cv
135.825 196.698 134.733 196.698 134.26 196.698 cv
134.223 196.698 134.182 196.799 134.182 196.824 cv
134.17 197.532 134.182 198.756 134.192 199.434 cv
134.192 199.686 134.331 199.873 134.493 199.92 cv
134.77 199.993 135.706 200.016 136.39 200.016 cv
137.002 200.004 137.176 199.92 137.458 199.584 cv
137.687 199.29 137.974 198.786 138.166 198.324 cv
138.251 198.317 138.563 198.426 138.616 198.499 cv
138.544 198.887 138.227 200.016 138.005 200.448 cv
137.938 200.592 137.866 200.676 137.219 200.676 cv
136.06 200.676 134.914 200.623 133.468 200.623 cv
132.621 200.623 131.792 200.665 131.12 200.665 cv
131.09 200.586 131.084 200.292 131.12 200.233 cv
131.576 200.184 131.937 200.136 132.165 200.077 cv
132.452 200.004 132.573 199.831 132.597 199.368 cv
132.621 198.864 132.621 197.616 132.621 196.019 cv
132.621 194.867 132.621 193.727 132.597 193.348 cv
132.561 192.911 132.495 192.802 132.188 192.7 cv
131.99 192.646 131.769 192.622 131.468 192.575 cv
131.396 192.514 131.42 192.202 131.486 192.154 cv
cp
f
143.021 192.161 mo
143.411 192.161 144.108 192.202 144.936 192.202 cv
145.957 192.202 146.521 192.161 146.839 192.161 cv
146.881 192.214 146.893 192.514 146.839 192.592 cv
146.551 192.622 146.299 192.659 146.125 192.7 cv
145.813 192.802 145.789 192.995 145.759 193.403 cv
145.729 193.918 145.729 194.999 145.729 196.188 cv
145.729 197.7 145.729 198.887 145.759 199.38 cv
145.776 199.722 145.813 199.993 146.221 200.083 cv
146.4 200.136 146.713 200.184 147.019 200.233 cv
147.055 200.292 147.019 200.623 146.977 200.665 cv
146.533 200.653 145.867 200.623 145.044 200.623 cv
144.06 200.623 143.489 200.665 143.004 200.665 cv
142.943 200.617 142.943 200.281 143.004 200.233 cv
143.292 200.197 143.508 200.161 143.67 200.124 cv
144.06 200.046 144.132 199.884 144.168 199.464 cv
144.205 199.02 144.205 197.508 144.205 196.032 cv
144.205 194.752 144.205 193.96 144.156 193.319 cv
144.138 193.006 144.072 192.808 143.809 192.731 cv
143.568 192.659 143.376 192.627 143.004 192.592 cv
142.949 192.52 142.968 192.202 143.021 192.161 cv
cp
f
150.759 199.825 mo
151.07 200.077 151.682 200.155 152.121 200.155 cv
152.732 200.155 153.339 199.974 153.903 199.399 cv
154.468 198.756 154.84 197.904 154.84 196.427 cv
154.84 195.094 154.347 193.882 153.352 193.198 cv
152.799 192.808 152.049 192.67 151.227 192.67 cv
150.986 192.67 150.734 192.7 150.638 192.743 cv
150.578 192.754 150.519 192.862 150.5 192.946 cv
150.494 193.378 150.494 195.149 150.494 196.343 cv
150.494 197.616 150.494 198.965 150.519 199.308 cv
150.53 199.464 150.608 199.692 150.759 199.825 cv
cp
147.733 192.161 mo
148.021 192.161 149.186 192.202 149.594 192.202 cv
150.53 192.19 151.04 192.154 152.246 192.154 cv
153.459 192.154 154.432 192.442 155.176 193.061 cv
156.076 193.817 156.532 194.951 156.532 196.211 cv
156.532 197.916 155.794 199.002 154.936 199.668 cv
153.987 200.424 152.822 200.724 151.37 200.724 cv
150.554 200.724 149.462 200.676 148.202 200.665 cv
147.583 200.665 li
147.529 200.586 147.529 200.262 147.583 200.233 cv
147.974 200.197 148.202 200.155 148.441 200.1 cv
148.717 200.028 148.85 199.873 148.897 199.434 cv
148.945 198.803 148.945 197.639 148.945 196.235 cv
148.945 195.106 148.945 193.93 148.897 193.366 cv
148.873 192.934 148.789 192.808 148.454 192.718 cv
148.273 192.659 147.974 192.622 147.709 192.592 cv
147.661 192.52 147.691 192.202 147.733 192.161 cv
cp
f
157.774 192.154 mo
158.213 192.154 158.999 192.202 159.725 192.202 cv
162.474 192.202 li
163.014 192.202 163.746 192.19 164.13 192.129 cv
164.154 192.129 164.184 192.178 164.184 192.202 cv
164.076 192.622 163.998 193.51 163.968 194.182 cv
163.896 194.243 163.535 194.249 163.481 194.213 cv
163.428 193.75 163.373 193.499 163.278 193.282 cv
163.157 192.97 162.989 192.862 162.653 192.838 cv
162.341 192.808 160.805 192.808 160.638 192.827 cv
160.541 192.85 160.47 193.024 160.47 193.09 cv
160.457 193.918 160.457 195.131 160.47 195.899 cv
160.47 195.948 160.511 196.007 160.547 196.007 cv
161.009 196.019 162.023 196.019 162.486 195.977 cv
162.786 195.971 162.894 195.827 162.989 195.54 cv
163.026 195.401 163.067 195.203 163.104 195.01 cv
163.182 194.969 163.554 194.975 163.608 195.041 cv
163.578 195.346 163.53 195.899 163.53 196.368 cv
163.53 196.805 163.535 197.316 163.554 197.675 cv
163.481 197.736 163.122 197.749 163.049 197.7 cv
162.966 197.34 162.966 197.303 162.93 197.129 cv
162.857 196.932 162.749 196.77 162.456 196.727 cv
162.113 196.698 161.021 196.698 160.547 196.698 cv
160.511 196.698 160.47 196.799 160.47 196.824 cv
160.457 197.532 160.47 198.756 160.481 199.434 cv
160.481 199.686 160.619 199.873 160.781 199.92 cv
161.057 199.993 161.994 200.016 162.678 200.016 cv
163.29 200.004 163.464 199.92 163.746 199.584 cv
163.974 199.29 164.262 198.786 164.454 198.324 cv
164.538 198.317 164.851 198.426 164.904 198.499 cv
164.832 198.887 164.514 200.016 164.292 200.448 cv
164.227 200.592 164.154 200.676 163.506 200.676 cv
162.348 200.676 161.202 200.623 159.755 200.623 cv
158.908 200.623 158.08 200.665 157.408 200.665 cv
157.378 200.586 157.372 200.292 157.408 200.233 cv
157.864 200.184 158.225 200.136 158.452 200.077 cv
158.74 200.004 158.86 199.831 158.884 199.368 cv
158.908 198.864 158.908 197.616 158.908 196.019 cv
158.908 194.867 158.908 193.727 158.884 193.348 cv
158.849 192.911 158.783 192.802 158.477 192.7 cv
158.278 192.646 158.057 192.622 157.757 192.575 cv
157.684 192.514 157.708 192.202 157.774 192.154 cv
cp
f
169.424 193.889 mo
169.159 194.615 168.716 195.995 168.47 196.679 cv
168.464 196.739 168.47 196.77 168.511 196.776 cv
168.656 196.799 169.027 196.799 169.472 196.799 cv
169.873 196.799 170.252 196.799 170.396 196.776 cv
170.421 196.776 170.45 196.727 170.45 196.679 cv
170.228 196.032 169.735 194.555 169.496 193.889 cv
169.483 193.889 169.442 193.882 169.424 193.889 cv
cp
166.843 199.032 mo
167.575 197.303 168.794 193.991 169.118 193.054 cv
169.226 192.772 169.34 192.376 169.37 192.178 cv
169.496 192.19 169.7 192.202 169.951 192.202 cv
170.228 192.202 170.396 192.19 170.521 192.178 cv
170.576 192.394 170.66 192.682 170.738 192.934 cv
171.116 193.966 172.437 197.784 172.929 198.965 cv
173.361 200.004 173.439 200.083 174.447 200.233 cv
174.489 200.281 174.465 200.617 174.411 200.665 cv
174.057 200.665 173.396 200.623 172.569 200.623 cv
171.668 200.623 171.021 200.665 170.624 200.665 cv
170.576 200.592 170.559 200.281 170.624 200.233 cv
170.889 200.184 171.17 200.136 171.32 200.077 cv
171.5 199.993 171.5 199.848 171.465 199.752 cv
171.332 199.224 170.954 198.156 170.732 197.591 cv
170.708 197.561 170.648 197.496 170.6 197.496 cv
170.396 197.483 169.91 197.496 169.411 197.496 cv
168.686 197.496 168.464 197.496 168.289 197.508 cv
168.235 197.508 168.176 197.58 168.146 197.639 cv
167.875 198.354 167.503 199.356 167.503 199.632 cv
167.503 199.848 167.527 200.016 167.899 200.113 cv
168.115 200.155 168.326 200.197 168.578 200.233 cv
168.632 200.281 168.607 200.617 168.541 200.665 cv
168.211 200.665 167.587 200.623 166.783 200.623 cv
166.135 200.623 165.63 200.665 165.283 200.665 cv
165.234 200.617 165.229 200.292 165.283 200.233 cv
166.255 200.1 166.446 199.993 166.843 199.032 cv
cp
f
133.367 164.612 mo
133.367 160.903 130.306 157.889 126.537 157.889 cv
122.768 157.889 119.706 160.903 119.706 164.612 cv
119.706 168.327 122.768 171.34 126.537 171.34 cv
130.306 171.34 133.367 168.327 133.367 164.612 cv
cp
.968627 .580392 .113725 rgb
f
126.537 159.12 mo
123.445 159.12 120.938 161.581 120.938 164.612 cv
120.938 167.643 123.445 170.11 126.537 170.11 cv
129.627 170.11 132.136 167.643 132.136 164.612 cv
132.136 161.581 129.627 159.12 126.537 159.12 cv
cp
126.537 172.571 mo
122.095 172.571 118.476 168.999 118.476 164.612 cv
118.476 160.225 122.095 156.66 126.537 156.66 cv
130.978 156.66 134.597 160.225 134.597 164.612 cv
134.597 168.999 130.978 172.571 126.537 172.571 cv
cp
.227451 .227451 .235294 rgb
f
141.24 151.444 mo
141.24 152.8 140.137 153.905 138.78 153.905 cv
114.292 153.905 li
112.936 153.905 111.832 152.8 111.832 151.444 cv
111.832 151.012 li
111.832 149.655 112.936 148.551 114.292 148.551 cv
138.78 148.551 li
140.137 148.551 141.24 149.655 141.24 151.012 cv
141.24 151.444 li
cp
1 1 1 rgb
f
114.292 149.319 mo
113.362 149.319 112.601 150.082 112.601 151.012 cv
112.601 151.444 li
112.601 152.375 113.362 153.137 114.292 153.137 cv
138.78 153.137 li
139.71 153.137 140.473 152.375 140.473 151.444 cv
140.473 151.012 li
140.473 150.082 139.71 149.319 138.78 149.319 cv
114.292 149.319 li
cp
138.78 154.672 mo
114.292 154.672 li
112.511 154.672 111.064 153.226 111.064 151.444 cv
111.064 151.012 li
111.064 149.229 112.511 147.783 114.292 147.783 cv
138.78 147.783 li
140.563 147.783 142.009 149.229 142.009 151.012 cv
142.009 151.444 li
142.009 153.226 140.563 154.672 138.78 154.672 cv
cp
.231373 .231373 .239216 rgb
f
139.986 156.797 mo
139.986 158.154 138.882 159.258 137.526 159.258 cv
115.547 159.258 li
114.191 159.258 113.087 158.154 113.087 156.797 cv
113.087 156.366 li
113.087 155.008 114.191 153.905 115.547 153.905 cv
137.526 153.905 li
138.882 153.905 139.986 155.008 139.986 156.366 cv
139.986 156.797 li
cp
1 1 1 rgb
f
115.547 154.672 mo
114.616 154.672 113.854 155.435 113.854 156.366 cv
113.854 156.797 li
113.854 157.727 114.616 158.49 115.547 158.49 cv
137.526 158.49 li
138.456 158.49 139.219 157.727 139.219 156.797 cv
139.219 156.366 li
139.219 155.435 138.456 154.672 137.526 154.672 cv
115.547 154.672 li
cp
137.526 160.026 mo
115.547 160.026 li
113.765 160.026 112.318 158.581 112.318 156.797 cv
112.318 156.366 li
112.318 154.583 113.765 153.137 115.547 153.137 cv
137.526 153.137 li
139.308 153.137 140.754 154.583 140.754 156.366 cv
140.754 156.797 li
140.754 158.581 139.308 160.026 137.526 160.026 cv
cp
.231373 .231373 .239216 rgb
f
138.45 162.151 mo
138.45 163.507 137.346 164.612 135.989 164.612 cv
117.084 164.612 li
115.728 164.612 114.622 163.507 114.622 162.151 cv
114.622 161.719 li
114.622 160.362 115.728 159.258 117.084 159.258 cv
135.989 159.258 li
137.346 159.258 138.45 160.362 138.45 161.719 cv
138.45 162.151 li
cp
1 1 1 rgb
f
117.084 160.026 mo
116.153 160.026 115.392 160.789 115.392 161.719 cv
115.392 162.151 li
115.392 163.082 116.153 163.843 117.084 163.843 cv
135.989 163.843 li
136.919 163.843 137.682 163.082 137.682 162.151 cv
137.682 161.719 li
137.682 160.789 136.919 160.026 135.989 160.026 cv
117.084 160.026 li
cp
135.989 165.379 mo
117.084 165.379 li
115.301 165.379 113.854 163.934 113.854 162.151 cv
113.854 161.719 li
113.854 159.936 115.301 158.49 117.084 158.49 cv
135.989 158.49 li
137.772 158.49 139.219 159.936 139.219 161.719 cv
139.219 162.151 li
139.219 163.934 137.772 165.379 135.989 165.379 cv
cp
.231373 .231373 .239216 rgb
f
123.56 124.582 mo
109.941 124.582 li
109.941 143.37 li
123.56 143.37 li
123.56 124.582 li
cp
1 1 1 rgb
f
111.171 142.117 mo
122.329 142.117 li
122.329 125.834 li
111.171 125.834 li
111.171 142.117 li
cp
124.79 144.623 mo
108.711 144.623 li
108.711 123.328 li
124.79 123.328 li
124.79 144.623 li
cp
.227451 .227451 .235294 rgb
f
114.659 60.2407 mo
109.737 60.2407 105.759 64.2261 105.759 69.1382 cv
105.759 71.167 106.551 72.9463 107.697 74.4409 cv
107.697 74.6719 li
106.07 73.0576 103.838 72.0581 101.365 72.0581 cv
96.3955 72.0581 92.3682 76.0884 92.3682 81.0518 cv
92.3682 82.8379 93.0225 84.4038 93.917 85.8081 cv
90.3701 87.0083 87.7588 90.2676 87.7588 94.2285 cv
87.7588 99.1924 91.7861 103.223 96.7559 103.223 cv
97.4639 103.223 98.0938 102.97 98.748 102.82 cv
94.9668 104.468 92.3086 108.222 92.3086 112.612 cv
92.3086 118.509 97.1035 123.301 103.004 123.301 cv
103.357 123.301 103.651 123.136 103.994 123.101 cv
104.348 128.213 108.502 132.292 113.705 132.292 cv
118.843 132.292 122.93 128.313 123.386 123.301 cv
123.56 123.301 li
123.56 69.1382 li
123.56 64.2261 119.581 60.2407 114.659 60.2407 cv
cp
1 1 1 rgb
f
105.158 121.723 mo
105.248 123.013 li
105.555 127.512 109.275 131.038 113.705 131.038 cv
118.11 131.038 121.724 127.665 122.138 123.19 cv
122.306 122.047 li
122.306 69.1382 li
122.306 64.9219 118.872 61.4951 114.659 61.4951 cv
110.445 61.4951 107.013 64.9219 107.013 69.1382 cv
107.013 70.6958 107.583 72.2202 108.699 73.6758 cv
108.951 74.0151 li
108.951 77.4507 li
106.815 75.5635 li
105.356 74.1108 103.411 73.3125 101.365 73.3125 cv
97.0918 73.3125 93.623 76.7842 93.623 81.0518 cv
93.623 82.3843 94.0547 83.6836 94.9736 85.1362 cv
95.8369 86.4834 li
94.3193 86.9937 li
91.1436 88.0708 89.0137 90.9727 89.0137 94.2285 cv
89.0137 98.4961 92.4824 101.968 96.7559 101.968 cv
97.0918 101.968 97.4521 101.869 97.8662 101.755 cv
98.4668 101.599 li
99.2461 103.973 li
95.7949 105.47 93.5625 108.867 93.5625 112.612 cv
93.5625 117.813 97.7998 122.047 103.004 122.047 cv
103.424 121.93 103.64 121.876 103.868 121.852 cv
105.158 121.723 li
cp
113.705 133.546 mo
108.423 133.546 103.922 129.693 102.926 124.559 cv
96.3652 124.514 91.0537 119.169 91.0537 112.612 cv
91.0537 109.416 92.3389 106.421 94.5049 104.228 cv
89.9375 103.201 86.5049 99.1055 86.5049 94.2285 cv
86.5049 90.3936 88.707 86.9248 92.1348 85.1987 cv
91.4443 83.8008 91.1143 82.438 91.1143 81.0518 cv
91.1143 75.4014 95.7119 70.8042 101.365 70.8042 cv
102.554 70.8042 103.699 71.0049 104.786 71.3857 cv
104.601 70.6509 104.504 69.8975 104.504 69.1382 cv
104.504 63.5386 109.06 58.9858 114.659 58.9858 cv
120.259 58.9858 124.813 63.5386 124.813 69.1382 cv
124.813 124.559 li
124.473 124.559 li
123.481 129.756 119.027 133.546 113.705 133.546 cv
cp
.227451 .227451 .235294 rgb
f
124.399 94.6973 mo
122.689 94.6973 li
122.689 93.0645 118.392 83.8906 111.16 83.8906 cv
104.15 83.8906 101.678 89.2324 101.659 89.2837 cv
99.4443 88.2959 li
99.5703 88.0166 102.59 81.4692 111.16 81.4692 cv
119.862 81.4692 124.399 91.957 124.399 94.6973 cv
cp
f
104.228 124.37 mo
104.15 121.861 li
104.54 121.846 113.729 121.441 113.729 112.606 cv
116.237 112.606 li
116.237 121.636 108.387 124.25 104.228 124.37 cv
cp
f
117.852 112.606 mo
117.852 111.133 116.657 109.935 115.176 109.935 cv
113.698 109.935 112.505 111.133 112.505 112.606 cv
112.505 114.083 113.698 115.28 115.176 115.28 cv
116.657 115.28 117.852 114.083 117.852 112.606 cv
cp
f
103.466 88.0801 mo
103.466 86.4746 102.157 85.166 100.543 85.166 cv
98.9346 85.166 97.6318 86.4746 97.6318 88.0801 cv
97.6318 89.6943 98.9346 91.0059 100.543 91.0059 cv
102.157 91.0059 103.466 89.6943 103.466 88.0801 cv
cp
f
101.461 102.82 mo
101.461 101.326 100.249 100.11 98.748 100.11 cv
97.248 100.11 96.0352 101.326 96.0352 102.82 cv
96.0352 104.315 97.248 105.53 98.748 105.53 cv
100.249 105.53 101.461 104.315 101.461 102.82 cv
cp
f
111.856 75.6411 mo
111.856 74.0151 110.529 72.6943 108.903 72.6943 cv
107.277 72.6943 105.95 74.0151 105.95 75.6411 cv
105.95 77.2676 107.277 78.5884 108.903 78.5884 cv
110.529 78.5884 111.856 77.2676 111.856 75.6411 cv
cp
f
112.864 94.6973 mo
111.94 94.6973 111.208 95.4473 111.189 96.3687 cv
109.023 97.5957 105.854 100.456 106.533 106.181 cv
106.131 106.497 105.837 106.925 105.837 107.475 cv
105.837 108.423 106.611 109.197 107.553 109.197 cv
108.513 109.197 109.275 108.423 109.275 107.475 cv
109.275 106.806 108.837 106.334 108.279 106.049 cv
107.661 101.086 110.434 98.7271 112.187 97.7905 cv
112.414 97.8989 112.611 98.0703 112.864 98.0703 cv
113.795 98.0703 114.563 97.3198 114.563 96.3892 cv
114.563 95.4531 113.795 94.6973 112.864 94.6973 cv
cp
f
119.346 78.999 mo
119.922 78.3896 119.893 77.4355 119.286 76.8477 cv
119.844 74.6509 119.94 70.7681 115.745 67.623 cv
115.793 67.1611 115.685 66.7017 115.325 66.3599 cv
114.694 65.7651 113.705 65.7896 113.11 66.4072 cv
112.511 67.041 112.54 68.0342 113.17 68.6284 cv
113.608 69.0454 114.197 69.0483 114.737 68.8623 cv
118.392 71.563 118.219 74.873 117.727 76.6108 cv
117.521 76.6919 117.287 76.7153 117.119 76.8867 cv
116.532 77.499 116.562 78.4741 117.168 79.0562 cv
117.786 79.6411 118.765 79.6177 119.346 78.999 cv
cp
f
163.996 96.416 mo
163.996 110.888 155.76 123.417 143.709 129.663 cv
143.709 143.346 li
127.418 143.346 li
127.418 58.9893 li
147.715 59.5313 163.996 76.0679 163.996 96.416 cv
cp
.968627 .580392 .113725 rgb
f
128.649 142.115 mo
142.478 142.115 li
142.478 128.914 li
143.143 128.569 li
155.245 122.296 162.765 109.976 162.765 96.416 cv
162.765 77.0713 147.88 61.4312 128.649 60.2754 cv
128.649 142.115 li
cp
144.941 144.578 mo
126.187 144.578 li
126.187 57.7246 li
127.451 57.7583 li
148.634 58.3237 165.228 75.3037 165.228 96.416 cv
165.228 110.649 157.474 123.603 144.941 130.403 cv
144.941 144.578 li
cp
.227451 .227451 .235294 rgb
f
147.247 85.002 mo
144.354 83.042 142.082 83.5288 140.733 84.2656 cv
137.964 85.8003 136.004 90.354 134.707 96.2559 cv
132.134 96.2559 129.552 95.9448 127.146 95.271 cv
127.146 98.7144 li
129.303 99.3262 131.637 99.5757 134.032 99.6377 cv
131.18 115.808 131.969 139.541 132.134 144.623 cv
135.495 144.623 li
134.956 131.305 135.287 111.95 137.415 99.5757 cv
143.803 99.1396 149.768 97.1172 151.428 93.5488 cv
152.351 91.6406 152.351 88.5698 147.247 85.002 cv
cp
148.354 92.1343 mo
147.494 94.0396 143.191 95.5762 138.09 96.0684 cv
139.135 91.459 140.545 88.2031 142.327 87.2188 cv
142.513 87.1587 142.759 86.9727 143.251 86.9727 cv
143.743 86.9727 144.422 87.1587 145.34 87.7705 cv
146.757 88.7554 149.091 90.6606 148.354 92.1343 cv
cp
f
175.781 78.8101 mo
175.781 77.3042 174.563 76.0796 173.062 76.0796 cv
171.55 76.0796 170.331 77.3042 170.331 78.8101 cv
170.331 80.3135 171.55 81.5352 173.062 81.5352 cv
174.563 81.5352 175.781 80.3135 175.781 78.8101 cv
cp
f
166.07 67.0913 mo
166.07 65.5884 164.852 64.3667 163.346 64.3667 cv
161.839 64.3667 160.621 65.5884 160.621 67.0913 cv
160.621 68.5981 161.839 69.8223 163.346 69.8223 cv
164.852 69.8223 166.07 68.5981 166.07 67.0913 cv
cp
f
167.48 76.9048 mo
167.48 75.9263 166.688 75.1313 165.71 75.1313 cv
164.731 75.1313 163.939 75.9263 163.939 76.9048 cv
163.939 77.8857 164.731 78.6812 165.71 78.6812 cv
166.688 78.6812 167.48 77.8857 167.48 76.9048 cv
cp
f
169.251 61.8345 mo
169.251 60.853 168.459 60.0576 167.48 60.0576 cv
166.502 60.0576 165.71 60.853 165.71 61.8345 cv
165.71 62.8125 166.502 63.6074 167.48 63.6074 cv
168.459 63.6074 169.251 62.8125 169.251 61.8345 cv
cp
f
177.186 73.8379 mo
177.186 73.1299 176.609 72.5503 175.896 72.5503 cv
175.187 72.5503 174.604 73.1299 174.604 73.8379 cv
174.604 74.5518 175.187 75.1284 175.896 75.1284 cv
176.609 75.1284 177.186 74.5518 177.186 73.8379 cv
cp
f
164.63 71.563 mo
164.63 70.8491 164.06 70.2725 163.346 70.2725 cv
162.637 70.2725 162.056 70.8491 162.056 71.563 cv
162.056 72.2744 162.637 72.853 163.346 72.853 cv
164.06 72.853 164.63 72.2744 164.63 71.563 cv
cp
f
171.621 73.8379 mo
171.621 73.1299 171.04 72.5503 170.331 72.5503 cv
169.623 72.5503 169.042 73.1299 169.042 73.8379 cv
169.042 74.5518 169.623 75.1284 170.331 75.1284 cv
171.04 75.1284 171.621 74.5518 171.621 73.8379 cv
cp
f
171.621 68.9824 mo
171.621 68.271 171.04 67.6948 170.331 67.6948 cv
169.623 67.6948 169.042 68.271 169.042 68.9824 cv
169.042 69.6963 169.623 70.2725 170.331 70.2725 cv
171.04 70.2725 171.621 69.6963 171.621 68.9824 cv
cp
f
161.91 60.7144 mo
161.91 60.0063 161.329 59.4277 160.621 59.4277 cv
159.907 59.4277 159.33 60.0063 159.33 60.7144 cv
159.33 61.4292 159.907 62.0049 160.621 62.0049 cv
161.329 62.0049 161.91 61.4292 161.91 60.7144 cv
cp
f
157.404 65.6543 mo
157.404 64.9463 156.827 64.3667 156.113 64.3667 cv
155.405 64.3667 154.829 64.9463 154.829 65.6543 cv
154.829 66.3682 155.405 66.9448 156.113 66.9448 cv
156.827 66.9448 157.404 66.3682 157.404 65.6543 cv
cp
f
158.046 51.9009 mo
156.821 50.3887 154.602 50.1519 153.094 51.376 cv
151.581 52.6006 151.348 54.8179 152.572 56.3306 cv
153.797 57.8398 156.018 58.0767 157.535 56.8467 cv
159.042 55.625 159.265 53.4077 158.046 51.9009 cv
cp
f
136.936 49.4004 mo
135.867 48.0767 133.925 47.8716 132.594 48.9453 cv
131.273 50.0156 131.068 51.9629 132.141 53.2861 cv
133.221 54.6099 135.161 54.8179 136.483 53.7466 cv
137.814 52.668 138.015 50.7236 136.936 49.4004 cv
cp
f
148.167 56.7388 mo
147.369 55.7544 145.929 55.6011 144.95 56.3965 cv
143.972 57.1914 143.815 58.6353 144.613 59.6167 cv
145.412 60.6035 146.853 60.7534 147.831 59.9585 cv
148.821 59.1631 148.965 57.7197 148.167 56.7388 cv
cp
f
137.694 40.1738 mo
136.901 39.186 135.455 39.0332 134.477 39.8281 cv
133.492 40.624 133.343 42.0698 134.135 43.0513 cv
134.933 44.0361 136.386 44.186 137.357 43.3906 cv
138.342 42.5981 138.492 41.1548 137.694 40.1738 cv
cp
f
155.418 45.77 mo
154.841 45.0562 153.791 44.9453 153.076 45.5273 cv
152.362 46.1035 152.254 47.1567 152.824 47.8647 cv
153.407 48.582 154.457 48.6963 155.165 48.1172 cv
155.886 47.5347 155.986 46.4844 155.418 45.77 cv
cp
f
140.965 53.6899 mo
140.383 52.9751 139.344 52.8643 138.624 53.4468 cv
137.91 54.0225 137.802 55.0669 138.384 55.7842 cv
138.954 56.5015 140.017 56.6128 140.725 56.0361 cv
141.439 55.4512 141.547 54.4072 140.965 53.6899 cv
cp
f
149.823 50.2954 mo
149.253 49.5845 148.197 49.4736 147.488 50.0522 cv
146.774 50.6255 146.673 51.6792 147.248 52.3931 cv
147.818 53.1045 148.869 53.2153 149.577 52.6362 cv
150.291 52.0601 150.411 51.0103 149.823 50.2954 cv
cp
f
145.88 45.4224 mo
145.305 44.7051 144.254 44.5996 143.54 45.1763 cv
142.837 45.7554 142.718 46.8022 143.3 47.5171 cv
143.875 48.2344 144.926 48.3452 145.64 47.7656 cv
146.354 47.187 146.456 46.1362 145.88 45.4224 cv
cp
f
131.083 43.3589 mo
130.501 42.645 129.457 42.5366 128.742 43.1099 cv
128.022 43.6924 127.914 44.7393 128.496 45.4478 cv
129.079 46.168 130.117 46.2788 130.837 45.6997 cv
131.552 45.1206 131.66 44.0732 131.083 43.3589 cv
cp
f
128.907 53.6416 mo
128.324 52.9277 127.28 52.8193 126.566 53.3955 cv
125.858 53.9722 125.751 55.0249 126.32 55.7334 cv
126.902 56.4536 127.946 56.5615 128.661 55.9829 cv
129.375 55.4033 129.489 54.356 128.907 53.6416 cv
cp
f
176.718 111.004 mo
177.582 109.89 177.378 108.285 176.262 107.42 cv
175.15 106.557 173.548 106.758 172.678 107.874 cv
171.813 108.987 172.018 110.593 173.129 111.457 cv
174.251 112.324 175.854 112.12 176.718 111.004 cv
cp
f
176.25 96.7554 mo
177.113 95.6392 176.915 94.0337 175.799 93.1694 cv
174.688 92.3052 173.08 92.5093 172.216 93.6226 cv
171.352 94.7363 171.556 96.3442 172.666 97.2085 cv
173.788 98.0728 175.391 97.8687 176.25 96.7554 cv
cp
f
171.664 104.828 mo
172.222 104.105 172.096 103.061 171.369 102.5 cv
170.65 101.938 169.6 102.067 169.042 102.793 cv
168.478 103.52 168.609 104.567 169.329 105.125 cv
170.056 105.686 171.1 105.554 171.664 104.828 cv
cp
f
181.633 94.688 mo
182.196 93.9619 182.064 92.9175 181.339 92.3564 cv
180.618 91.792 179.574 91.9272 179.01 92.6533 cv
178.445 93.3765 178.578 94.4204 179.305 94.9819 cv
180.024 95.543 181.069 95.4111 181.633 94.688 cv
cp
f
180.606 108.129 mo
181.015 107.604 180.918 106.844 180.396 106.437 cv
179.868 106.028 179.106 106.124 178.698 106.649 cv
178.29 107.178 178.386 107.937 178.914 108.345 cv
179.437 108.753 180.198 108.657 180.606 108.129 cv
cp
f
172.624 99.2373 mo
173.032 98.7095 172.937 97.9497 172.415 97.5444 cv
171.88 97.1338 171.124 97.2295 170.716 97.7578 cv
170.302 98.2861 170.404 99.0454 170.932 99.4536 cv
171.453 99.8618 172.216 99.7651 172.624 99.2373 cv
cp
f
176.483 104.936 mo
176.897 104.408 176.802 103.648 176.272 103.24 cv
175.745 102.833 174.988 102.928 174.58 103.454 cv
174.173 103.982 174.262 104.741 174.791 105.152 cv
175.318 105.561 176.081 105.464 176.483 104.936 cv
cp
f
179.274 101.338 mo
179.688 100.81 179.586 100.054 179.064 99.6455 cv
178.536 99.2373 177.78 99.3335 177.372 99.8584 cv
176.958 100.387 177.054 101.146 177.582 101.554 cv
178.109 101.965 178.872 101.866 179.274 101.338 cv
cp
f
176.837 89.6406 mo
177.239 89.1123 177.149 88.353 176.621 87.9448 cv
176.094 87.5366 175.337 87.6328 174.923 88.1611 cv
174.515 88.6895 174.61 89.4482 175.14 89.8564 cv
175.667 90.2646 176.423 90.1689 176.837 89.6406 cv
cp
f
170.661 90.7119 mo
171.069 90.1865 170.974 89.4243 170.451 89.0161 cv
169.918 88.6084 169.167 88.7041 168.753 89.2295 cv
168.345 89.7573 168.44 90.52 168.969 90.9282 cv
169.491 91.3364 170.253 91.2397 170.661 90.7119 cv
cp
f
160.645 127.809 mo
161.713 127.617 162.421 126.602 162.229 125.543 cv
162.043 124.48 161.029 123.775 159.961 123.964 cv
158.904 124.151 158.196 125.168 158.383 126.227 cv
158.574 127.292 159.588 128 160.645 127.809 cv
cp
f
167.685 119.484 mo
168.747 119.295 169.455 118.278 169.27 117.219 cv
169.083 116.156 168.069 115.451 167.013 115.637 cv
165.944 115.826 165.229 116.847 165.422 117.903 cv
165.607 118.965 166.629 119.673 167.685 119.484 cv
cp
f
160.95 121.714 mo
161.635 121.591 162.097 120.934 161.978 120.244 cv
161.856 119.554 161.191 119.091 160.5 119.217 cv
159.816 119.34 159.348 119.997 159.468 120.688 cv
159.6 121.375 160.261 121.837 160.95 121.714 cv
cp
f
171.802 121.072 mo
172.498 120.946 172.954 120.289 172.834 119.595 cv
172.708 118.908 172.048 118.446 171.358 118.572 cv
170.667 118.695 170.205 119.355 170.326 120.04 cv
170.445 120.729 171.112 121.192 171.802 121.072 cv
cp
f
164.335 128.174 mo
164.828 128.083 165.17 127.602 165.074 127.1 cv
164.983 126.6 164.51 126.263 164.005 126.354 cv
163.502 126.447 163.172 126.924 163.262 127.424 cv
163.346 127.922 163.826 128.262 164.335 128.174 cv
cp
f
164.359 119.034 mo
164.864 118.941 165.199 118.461 165.104 117.963 cv
165.021 117.459 164.534 117.125 164.035 117.216 cv
163.531 117.306 163.201 117.786 163.285 118.287 cv
163.375 118.789 163.85 119.124 164.359 119.034 cv
cp
f
163.634 124.244 mo
164.132 124.157 164.468 123.677 164.378 123.178 cv
164.281 122.678 163.808 122.341 163.304 122.431 cv
162.805 122.519 162.475 122.999 162.559 123.502 cv
162.643 124.003 163.129 124.34 163.634 124.244 cv
cp
f
167.054 123.638 mo
167.559 123.544 167.895 123.067 167.799 122.563 cv
167.715 122.062 167.234 121.732 166.736 121.819 cv
166.232 121.912 165.891 122.386 165.986 122.887 cv
166.076 123.392 166.551 123.728 167.054 123.638 cv
cp
f
171.664 115.748 mo
172.169 115.658 172.498 115.175 172.415 114.674 cv
172.324 114.17 171.845 113.836 171.34 113.93 cv
170.842 114.017 170.499 114.5 170.596 114.998 cv
170.686 115.502 171.166 115.835 171.664 115.748 cv
cp
f
167.612 113.191 mo
168.117 113.101 168.453 112.621 168.363 112.12 cv
168.272 111.616 167.793 111.286 167.288 111.373 cv
166.785 111.46 166.454 111.943 166.551 112.444 cv
166.635 112.945 167.108 113.282 167.612 113.191 cv
cp
f
74.2188 78.8101 mo
74.2188 77.3042 75.4375 76.0796 76.9375 76.0796 cv
78.4502 76.0796 79.6689 77.3042 79.6689 78.8101 cv
79.6689 80.3135 78.4502 81.5352 76.9375 81.5352 cv
75.4375 81.5352 74.2188 80.3135 74.2188 78.8101 cv
cp
f
83.9297 67.0913 mo
83.9297 65.5884 85.1484 64.3667 86.6543 64.3667 cv
88.1611 64.3667 89.3799 65.5884 89.3799 67.0913 cv
89.3799 68.5981 88.1611 69.8223 86.6543 69.8223 cv
85.1484 69.8223 83.9297 68.5981 83.9297 67.0913 cv
cp
f
82.5195 76.9048 mo
82.5195 75.9263 83.3115 75.1313 84.29 75.1313 cv
85.2686 75.1313 86.0605 75.9263 86.0605 76.9048 cv
86.0605 77.8857 85.2686 78.6812 84.29 78.6812 cv
83.3115 78.6812 82.5195 77.8857 82.5195 76.9048 cv
cp
f
80.749 61.8345 mo
80.749 60.853 81.541 60.0576 82.5195 60.0576 cv
83.498 60.0576 84.29 60.853 84.29 61.8345 cv
84.29 62.8125 83.498 63.6074 82.5195 63.6074 cv
81.541 63.6074 80.749 62.8125 80.749 61.8345 cv
cp
f
72.8145 73.8379 mo
72.8145 73.1299 73.3906 72.5503 74.1055 72.5503 cv
74.8135 72.5503 75.3955 73.1299 75.3955 73.8379 cv
75.3955 74.5518 74.8135 75.1284 74.1055 75.1284 cv
73.3906 75.1284 72.8145 74.5518 72.8145 73.8379 cv
cp
f
85.3701 71.563 mo
85.3701 70.8491 85.9404 70.2725 86.6543 70.2725 cv
87.3633 70.2725 87.9453 70.8491 87.9453 71.563 cv
87.9453 72.2744 87.3633 72.853 86.6543 72.853 cv
85.9404 72.853 85.3701 72.2744 85.3701 71.563 cv
cp
f
78.3779 73.8379 mo
78.3779 73.1299 78.96 72.5503 79.6689 72.5503 cv
80.377 72.5503 80.959 73.1299 80.959 73.8379 cv
80.959 74.5518 80.377 75.1284 79.6689 75.1284 cv
78.96 75.1284 78.3779 74.5518 78.3779 73.8379 cv
cp
f
78.3779 68.9824 mo
78.3779 68.271 78.96 67.6948 79.6689 67.6948 cv
80.377 67.6948 80.959 68.271 80.959 68.9824 cv
80.959 69.6963 80.377 70.2725 79.6689 70.2725 cv
78.96 70.2725 78.3779 69.6963 78.3779 68.9824 cv
cp
f
88.0889 60.7144 mo
88.0889 60.0063 88.6709 59.4277 89.3799 59.4277 cv
90.0938 59.4277 90.6699 60.0063 90.6699 60.7144 cv
90.6699 61.4292 90.0938 62.0049 89.3799 62.0049 cv
88.6709 62.0049 88.0889 61.4292 88.0889 60.7144 cv
cp
f
92.5967 65.6543 mo
92.5967 64.9463 93.1729 64.3667 93.8867 64.3667 cv
94.5947 64.3667 95.1709 64.9463 95.1709 65.6543 cv
95.1709 66.3682 94.5947 66.9448 93.8867 66.9448 cv
93.1729 66.9448 92.5967 66.3682 92.5967 65.6543 cv
cp
f
92.7588 52.5522 mo
93.623 51.4849 95.1904 51.3179 96.2539 52.1816 cv
97.3223 53.0464 97.4873 54.6113 96.623 55.6792 cv
95.7588 56.7446 94.1914 56.9121 93.1191 56.0435 cv
92.0557 55.1812 91.8984 53.6162 92.7588 52.5522 cv
cp
f
112.114 48.0361 mo
113.134 46.771 114.989 46.5752 116.262 47.6011 cv
117.523 48.624 117.72 50.4844 116.694 51.749 cv
115.663 53.0137 113.809 53.2124 112.545 52.189 cv
111.273 51.1582 111.082 49.3003 112.114 48.0361 cv
cp
f
101.833 56.7388 mo
102.632 55.7544 104.072 55.6011 105.051 56.3965 cv
106.028 57.1914 106.185 58.6353 105.386 59.6167 cv
104.588 60.6035 103.147 60.7534 102.169 59.9585 cv
101.179 59.1631 101.035 57.7197 101.833 56.7388 cv
cp
f
112.306 40.1738 mo
113.098 39.186 114.545 39.0332 115.523 39.8281 cv
116.508 40.624 116.657 42.0698 115.865 43.0513 cv
115.067 44.0361 113.614 44.186 112.643 43.3906 cv
111.657 42.5981 111.508 41.1548 112.306 40.1738 cv
cp
f
94.583 45.77 mo
95.1592 45.0562 96.21 44.9453 96.9238 45.5273 cv
97.6377 46.1035 97.7461 47.1567 97.1758 47.8647 cv
96.5938 48.582 95.5439 48.6963 94.835 48.1172 cv
94.1152 47.5347 94.0127 46.4844 94.583 45.77 cv
cp
f
109.035 53.6899 mo
109.617 52.9751 110.656 52.8643 111.376 53.4468 cv
112.09 54.0225 112.198 55.0669 111.616 55.7842 cv
111.046 56.5015 109.983 56.6128 109.275 56.0361 cv
108.562 55.4512 108.453 54.4072 109.035 53.6899 cv
cp
f
100.177 50.2954 mo
100.747 49.5845 101.804 49.4736 102.512 50.0522 cv
103.226 50.6255 103.328 51.6792 102.752 52.3931 cv
102.182 53.1045 101.131 53.2153 100.423 52.6362 cv
99.709 52.0601 99.5889 51.0103 100.177 50.2954 cv
cp
f
104.12 45.4224 mo
104.696 44.7051 105.746 44.5996 106.461 45.1763 cv
107.163 45.7554 107.283 46.8022 106.7 47.5171 cv
106.125 48.2344 105.074 48.3452 104.36 47.7656 cv
103.646 47.187 103.544 46.1362 104.12 45.4224 cv
cp
f
125.168 47.4995 mo
125.521 47.0659 126.155 47.0005 126.59 47.3486 cv
127.027 47.7021 127.092 48.3384 126.739 48.7686 cv
126.385 49.2061 125.755 49.2734 125.317 48.9214 cv
124.883 48.5698 124.817 47.9336 125.168 47.4995 cv
cp
f
120.588 50.8691 mo
121.17 50.1553 122.214 50.0469 122.928 50.623 cv
123.637 51.1997 123.744 52.2524 123.174 52.9609 cv
122.593 53.6812 121.549 53.7891 120.834 53.2104 cv
120.12 52.6309 120.006 51.5835 120.588 50.8691 cv
cp
f
73.2822 111.004 mo
72.4189 109.89 72.623 108.285 73.7393 107.42 cv
74.8496 106.557 76.4521 106.758 77.3223 107.874 cv
78.1865 108.987 77.9824 110.593 76.8721 111.457 cv
75.75 112.324 74.1475 112.12 73.2822 111.004 cv
cp
f
73.751 96.7554 mo
72.8867 95.6392 73.085 94.0337 74.2012 93.1694 cv
75.3115 92.3052 76.9199 92.5093 77.7842 93.6226 cv
78.6484 94.7363 78.4443 96.3442 77.334 97.2085 cv
76.2119 98.0728 74.6094 97.8687 73.751 96.7554 cv
cp
f
78.3359 104.828 mo
77.7783 104.105 77.9043 103.061 78.6309 102.5 cv
79.3506 101.938 80.4014 102.067 80.959 102.793 cv
81.5234 103.52 81.3916 104.567 80.6709 105.125 cv
79.9443 105.686 78.9004 105.554 78.3359 104.828 cv
cp
f
68.3672 94.688 mo
67.8027 93.9619 67.9355 92.9175 68.6611 92.3564 cv
69.3818 91.792 70.4258 91.9272 70.9902 92.6533 cv
71.5537 93.3765 71.4229 94.4204 70.6963 94.9819 cv
69.9756 95.543 68.9316 95.4111 68.3672 94.688 cv
cp
f
69.3936 108.129 mo
68.9854 107.604 69.0811 106.844 69.6035 106.437 cv
70.1318 106.028 70.8945 106.124 71.3027 106.649 cv
71.71 107.178 71.6143 107.937 71.0859 108.345 cv
70.5645 108.753 69.8018 108.657 69.3936 108.129 cv
cp
f
77.376 99.2373 mo
76.9678 98.7095 77.0645 97.9497 77.5859 97.5444 cv
78.1201 97.1338 78.877 97.2295 79.2842 97.7578 cv
79.6982 98.2861 79.5967 99.0454 79.0684 99.4536 cv
78.5469 99.8618 77.7842 99.7651 77.376 99.2373 cv
cp
f
73.5166 104.936 mo
73.1025 104.408 73.1982 103.648 73.7266 103.24 cv
74.2549 102.833 75.0117 102.928 75.4199 103.454 cv
75.8281 103.982 75.7373 104.741 75.209 105.152 cv
74.6807 105.561 73.9189 105.464 73.5166 104.936 cv
cp
f
70.7256 101.338 mo
70.3115 100.81 70.4141 100.054 70.9365 99.6455 cv
71.4648 99.2373 72.2207 99.3335 72.6279 99.8584 cv
73.043 100.387 72.9463 101.146 72.4189 101.554 cv
71.8906 101.965 71.1279 101.866 70.7256 101.338 cv
cp
f
73.1631 89.6406 mo
72.7607 89.1123 72.8506 88.353 73.3789 87.9448 cv
73.9072 87.5366 74.6631 87.6328 75.0771 88.1611 cv
75.4854 88.6895 75.3896 89.4482 74.8613 89.8564 cv
74.333 90.2646 73.5771 90.1689 73.1631 89.6406 cv
cp
f
79.3389 90.7119 mo
78.9307 90.1865 79.0264 89.4243 79.5488 89.0161 cv
80.083 88.6084 80.833 88.7041 81.2471 89.2295 cv
81.6553 89.7573 81.5596 90.52 81.0313 90.9282 cv
80.5088 91.3364 79.7471 91.2397 79.3389 90.7119 cv
cp
f
89.3555 127.809 mo
88.2871 127.617 87.5791 126.602 87.7715 125.543 cv
87.957 124.48 88.9717 123.775 90.04 123.964 cv
91.0967 124.151 91.8047 125.168 91.6182 126.227 cv
91.4268 127.292 90.4121 128 89.3555 127.809 cv
cp
f
82.3154 119.484 mo
81.2529 119.295 80.5449 118.278 80.7305 117.219 cv
80.917 116.156 81.9316 115.451 82.9873 115.637 cv
84.0557 115.826 84.7705 116.847 84.5781 117.903 cv
84.3916 118.965 83.3711 119.673 82.3154 119.484 cv
cp
f
89.0498 121.714 mo
88.3652 121.591 87.9033 120.934 88.0234 120.244 cv
88.1426 119.554 88.8096 119.091 89.5 119.217 cv
90.1836 119.34 90.6523 119.997 90.5322 120.688 cv
90.3994 121.375 89.7402 121.837 89.0498 121.714 cv
cp
f
78.1982 121.072 mo
77.502 120.946 77.0459 120.289 77.166 119.595 cv
77.292 118.908 77.9521 118.446 78.6426 118.572 cv
79.332 118.695 79.7949 119.355 79.6748 120.04 cv
79.5547 120.729 78.8887 121.192 78.1982 121.072 cv
cp
f
85.6641 128.174 mo
85.1729 128.083 84.8301 127.602 84.9268 127.1 cv
85.0156 126.6 85.4902 126.263 85.9941 126.354 cv
86.498 126.447 86.8291 126.924 86.7383 127.424 cv
86.6543 127.922 86.1748 128.262 85.6641 128.174 cv
cp
f
85.6406 119.034 mo
85.1357 118.941 84.8008 118.461 84.8965 117.963 cv
84.9805 117.459 85.4658 117.125 85.9648 117.216 cv
86.4688 117.306 86.7988 117.786 86.7148 118.287 cv
86.625 118.789 86.1504 119.124 85.6406 119.034 cv
cp
f
86.3672 124.244 mo
85.8682 124.157 85.5322 123.677 85.6221 123.178 cv
85.7188 122.678 86.1924 122.341 86.6973 122.431 cv
87.1953 122.519 87.5254 122.999 87.4414 123.502 cv
87.3574 124.003 86.8711 124.34 86.3672 124.244 cv
cp
f
82.9453 123.638 mo
82.4414 123.544 82.1055 123.067 82.2012 122.563 cv
82.2861 122.062 82.7656 121.732 83.2637 121.819 cv
83.7686 121.912 84.1104 122.386 84.0137 122.887 cv
83.9238 123.392 83.4492 123.728 82.9453 123.638 cv
cp
f
78.3359 115.748 mo
77.832 115.658 77.502 115.175 77.5859 114.674 cv
77.6758 114.17 78.1563 113.836 78.6602 113.93 cv
79.1592 114.017 79.501 114.5 79.4043 114.998 cv
79.3145 115.502 78.835 115.835 78.3359 115.748 cv
cp
f
82.3877 113.191 mo
81.8838 113.101 81.5469 112.621 81.6377 112.12 cv
81.7266 111.616 82.208 111.286 82.7119 111.373 cv
83.2158 111.46 83.5459 111.943 83.4492 112.444 cv
83.3662 112.945 82.8916 113.282 82.3877 113.191 cv
cp
f
127.956 40.0415 mo
127.956 39.2129 127.284 38.5415 126.456 38.5415 cv
125.627 38.5415 124.956 39.2129 124.956 40.0415 cv
124.956 40.8701 125.627 41.5415 126.456 41.5415 cv
127.284 41.5415 127.956 40.8701 127.956 40.0415 cv
cp
f
122.703 46.0703 mo
122.703 45.6143 122.334 45.2446 121.878 45.2446 cv
121.422 45.2446 121.053 45.6143 121.053 46.0703 cv
121.053 46.5264 121.422 46.896 121.878 46.896 cv
122.334 46.896 122.703 46.5264 122.703 46.0703 cv
cp
f
121.128 42.2915 mo
121.128 41.8774 121.464 41.5415 121.878 41.5415 cv
122.292 41.5415 122.628 41.8774 122.628 42.2915 cv
122.628 42.7056 122.292 43.0415 121.878 43.0415 cv
121.464 43.0415 121.128 42.7056 121.128 42.2915 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Novokhatskyi Artem) ()
%%Title: (idea.eps)
%%CreationDate: 12/9/2017 11:58 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H]MN(E[CLq!.BY!a$BCc1k"t<1UD:6TW2,Ej+1S$[`;\k"+d?%h40TuJYMMurU_&lS;=iP(9+`GOo]&9r^=#?;>6K>aEX47
%q.G2#p\((8T>,jH]=YQPcS'3cOg\m%/)qu,G*>i"oTMN:ZiBaqf<;pfUPIrDgU8sZqu#j)Dn^Vlk5F2NHi*Baf3dFMrSm4VYCCh=
%s+_D/DZ9LOn*DtdDZ9*+?[VD;heqkrGk(?SgGu`mffjb1rPbhX\*q%Ync!-M[S^-jj2q>j[@LkF^sA8>ci3K.'E.(DqtKeDG&85u
%B>=Grh>*?`jl^:Vr9IG!Hi<X7G;%gfIf&8WrZ$^MroL:Us5qj50D#XafIq0+I=>eC]QsMA[kGJkik=c*Eu\aU^An!<0(FGHr9[RI
%I*K!@]2@R#o8gV^YlsUm7DaPp@3>K%TCYdfWOgF5rS;PM,O9l.]<V(Tp.6?rG$O6DHq:X&hnT$YX"RelJ&P1+gG=#ArVuXI%^bq2
%cfTY&[cbo,Zf^n]VqH"2L;V2NcfXZ9+5Qk[?XLSE[pS"i[oY4HJ+_*6oCh#;hn8r<Xk.UJnCPXoroT,?n,D:jlhAtH]$ODHr:Sgj
%?[Z@dH(=m/`=$kVkq2^\5N;-=]_gNcpGOMYIdmmDiKlK5Mr4KX2dcR7Ma+kkW(VT'^]!HJS%jIM5PUndaP20-Ek*XFl<^Ua[X9l0
%NR"g7:8sjH0eSB"i!OJkNrJi9)i0"@me-$T^\QtEb-::cS1tkV^O#YNo4*aQHo(CZ^;dL!qE*`@5HVWrqtI;N`8dcng&59M7f2oG
%YCD1O5J6girp?'9KWjq=cGoZ!RfZs0rLNu^pqkqA-,02t?\X0YroU>RnG3SHr95SYUYh'WrpG\_m$GJ5p\()[rpn<PhgYFDcYbss
%q_,-jrl;(+n)(jcDZ0LqDu\pKfpA>gr/<H%k3q3@G\Pd6n*??R04'/$o7,qTp7C_Zh<;=k0#-,T^W!tFja<PpVD4)=8G_i<?XJ6O
%p8cYrQfQ,TcYrgQ`Oi=fbJjMLM\g;<]Y!,Uf!YPCotT4!?<EC3=$L6Ql*<3j^9U5f8Nc.W/cNflVdFkM>J5:]Hdf7'hL,=q]"5U>
%H$BY1b9_Z0LG/\hm2)t@rc2<6/6P2ea/=:alJ7rEIA=i1pW_=)^\Rc9Dne7M63m:hN_Y&t?K_6a\]Ho-@lLW!ro^uirJN>CGl>6u
%0>@;]l^&^*r^VFPDY,ODI]$'8P-+_g4'mEEDYE$,s-`9gKBV:cf;AJ[AQo,]@t+#f0AaJA]r@?JH2$=SlW=,3>X\>cp@TA/DJt!q
%c0P,-NrFA%j]A\7DLV3S(LKIe,9K]O*nP8$f`H/"!.OHr5JAtuS%CWB,C]=R`TOFAmJ5kgcgJOB``i"as1tjcr+rE=^:F.=dnfu=
%dnaeJlTGb_0fOJOF77A'c=Q.Fl]A6.JY-PG2<@UuWAf>#g"j9`'tAGXI/]qJDrTiI37i&-FaVq_"Y>t3II@R!IJl=trWDVk45W1c
%H7N1s>C,70Dnl)Fk4prC^IL4&?gL*:qVhJNoTM,\n@pd8nh31Nr2\/Ws'MD]rct`_pZn^^q`Nm<G/ZuNr+IFPrJgj?`4mb]O8`Ma
%;u%6%k+A2orVrL=_OnG(T76>II.$oo+3S8oQVpI,Hg,+-gN$B`bOb:,\!lZ8[5Ki*H6%.ZgNm5!f8'4TP22k>f(R\LBXdB3h)B]K
%p:)K^;;:hnluTqtn+Z#BA)DUtV:WHUhIjUjp\fAe*8AQ0N&LAa`pL8Tcc<rYX9m(OF.Zt!c?l$)&%C;1^9+m3G4<$U++=$Ks87^T
%9HSZQduRe>*1pp8LLqWD_1uJAC]=Y5qSW$24b'ibK73CThEH/W\[BbjceujtmCBXgo4FVPc_mBt\%[0[m=TDciH,$4T*P8O,5Q@n
%T3M1dq[E@DI]Rb]Xl&QK=76M]q;.^4@s#??mN1g<j10FLI\/$<YXc=?]=Y\gRs3nqhsGXTY25GUCnlBiICt!4a1f=%]=knK\)XpS
%macgZ[TH%sgMK,L)_1PZp[`8tlf`6Bh5o(BmTT@'j)I36bMM!8\/j$&8%0Yi7^^'q7iGT]ljqYYp\iBldd3h93d%&(Y[X@hoki<%
%DhkpAOI?%%noJFc]VAZsJY1!Md<ZFT0ZaYd2?d"=BBQ2a@l$7dAhQ(!\+XM6H>g,tg2,t20<38,o?liup%<aHZe<fE*`\\*WG^;]
%c`OTnD70nCFj9&U/h'$ILD\uLj7_nFRCp^jR#gsnaVqC&0'q/f_]&:#)Yr5.qr.7r?7B(p<9oFt\n"ppgfbNM>?<uC4ke(+lb6ia
%f](T1"4TLV%,pmTE4G6*A.&:S[Cq(N5>SF!PKq\-f!aBuI2gr+(Nm'lgB2$u`k;g>$o\X*c2i\DQ[Hk_IVHUB2;g4o*/C"t+rbD:
%C`71.C)CUp2M^]odgacND(hgdZY+O4T*PC8L-K^%52Pg>1Z`WI@h8'B2gX9H@tX$n#0p_`Nt$t:/-Ijj+)Fd.AafqNir6d*ot`[1
%YP9dmlldJ;E?80Lg(P6:h:c^:g+u+nG.n!!n?'CM4Z+rhKf6AJ9oWtAQ!1`Qe3e":2r>-M1i6D[EY9[fW6iu;->p:[VWmA-CZ4IJ
%@?%BRro`$*e@-o-]Agk#k&gfnb8@%3P?P4+bj5>qSnXKVZ6)#pfX]WF^!84a^UF!,PsFZXXFrT.0_3?8p]21nWO'k*IL/Zd`m`cg
%?GQr.9D%$)N)Rdrbgalsh>_hmmWU:k:HWP52@/Ho;g1$g[_^SSQ$J)7T&l3^p](4/iD\[%CopZ]-8&9P2M[lK5&3'+c_fNB48_l2
%jo45`RhoGGqY]K"0"OWYkrp:S)qi7s:)n)DCoD*YR+uZniUXh(,BM8b[7JXE]VfK<8CPfl2D_rPbqtet,L:b,mqheX;s].9PL^;[
%._4N]fUX['a1_(JZM*r"V@rhfr(52[neY*Z0n4/Oo=^1Y9YNWtj$(N<g)Wt-lt.^(2qDPS`s:nI4)2StmFS<2T^t),3pF1Zf5Ne\
%-Q#PsNMYepP&=tTR8lntW6uYX1kQi_!8YV0rr;tX=6D2]jRqfCSYVW=rq/6]$%DCAl5uX+rT=U/TA6>K3`"R$;WHXAeS6=F_l<ro
%QD<mYlT%JMXh-JT0hQ#cUbEA0kVU\/S]WsTBWL?#]%Zg\+2-CmHLZC'<D-S@Hh?XhMK:pd>M$JNT>pm%8"3)lHF_B?B\)M*HJb55
%)[Z6s+s(,G^`^%)@]l)X)0;Qhr(PfQB$T).Z30(uD2^TdZ#[SD8$D_?=8_Q6GMhA:ht;<Iolr!hEik]XGHPYLX^8`9R#qf"5>5-t
%]eql^jQ\7qNErloccbki^6YrtVp*)76&q$+qM3@Vr6`WKT<:B*O?_<gAX*0ck@d[o0:VQ"(T,QI6!0etMIp5rT`L)S%"@LGq_Zrr
%f$'?:JU8>#Qu#lnMA]<(W1$FA)(%VA!2F=>I%iAq+@F[A)*#;fZ=ohY8+Z<+c-BgQgJ9?!RJ4G0*A68qII#MX9rm"ZI$S^Lo6mcd
%dOchbkP"!*m-\E-c-FN$Og>L@>7S,IDE-JCJukI*H5Cioe<uBi)4nGR/iW^tNTc?$JG$*O<l"16r\:o;(t<dCWd(OrTG1S`b_Lhf
%aK5nRml!)D-I#Da-t(`Wm/0*pI/b_<-FX2f`<"B/3dT)6Ai;`^R3NSQk.GGYf/%l[<Z3&]9B59*bs?QtVN9KMB8a8_Z&.p&(*WgE
%ZA)cuhod(LjYM<XE:SRk.%;98n0CKs?%aRi1,G+un6o*Os5:FL=7,&4Dc^oA@D)p&`9,\9NQTAg`garZSSdc#jWCpMKP()deot:m
%D-]pS(B7fu8*K4]XE"-,BT9OIZDUZ;n'kR^F5=%(oA^0+*u;FSa.<1%T")]$LKa'3>OC,424M?DnG#E7S=fENUuuAR5OJ8lcVJA0
%l1EK.LK4]3TD\9HkGLO/5MtDiPgPrOkBuir:S'GtG!ru5_;nBVd1^jW`tO6j*%Pu54^`Y"p!`*4-i^u"qp5WFUD?a@]!BSKTIs0L
%fa@tL3rF<hY#uG-+Y/)k&Pi+7Rct&_k(i6?nkkZSSm#keUViRNWkY@C`mS4uVRIrLCRgP<)q$7/IaSR?W86%_kp_q]mD8/UD9lf[
%<Min[mAE#k>5j`<,O+]fW6sVna+)83c;2E%G#ik6J'M]k#=$3-))aU)Y4LHI5!%k``j&D6*KqM8lF:,@ImnJTM23eH[q>CIf8Z34
%U:Vq,FJP#b8Ks"58g?L#1t%LW>,e<R;dWe9RYQ0jZ=MDE^LfARYI\4=@<RXa[l-J9."0t\86)IojY$.=gM3-;D)@m8;jPp'Cnj5b
%`#kuh4s&8<5>'StWKD9X*uHp6QGDGaL=5jlV@ljfR7c'-k?Mo<A94S\dRhiF6daOOI.XLXAqm!6[pYtgR>!_7'qVV16M@J^EXLF"
%!qQc?q]`ANEXRa'8O8*I]GXmrZ`Oa$7X?oO><[Q/O'V::rV<m;`i$#dmN;%C:/@c`]mbE$@/#_9G)8?VQI)e(F6BfKrt3/[?H7sa
%q&1t0>Ft8c$^?^?rk\/i:?)OR4r1-VDLRP:@g$KS`@0G)R\B9l'gBO"q8u]KqPD^u<m=.%7Tk+nO1.^<p;;rN6G)75#G:d>FT"1E
%`QA\A_^@XEV!/>0-6*P9r7V%tISf5kIs^[UU%`I3^2k8V2,HKd*:osdC`Jh6\;l7<e5Z6/HQ7c4]''\I#<!nmVFSeO<%:[(?(5*l
%anDOng$@4Aql.?V4oSm9risf7EP(3ip%d#(f:Gd9BZLiP_ASAa&T;UdI&BVFDm.KhIpA9:-SaP.r$stUka%.pUB=8=7c6$c$m*?e
%(i,kcG&sDt,9#T&E?m&6@'^cK2DlAhQ!n,dG^-MK1jS7ma_W19CE,1\F+thQJco-=_0QtY-1d"1AD@cnA7c#X9$cZFd7N/q^ZY=[
%`O^2\XnZ9R\QDp/ZR[-Ac7ERK%^Wq<),j=iVsb/iefIQ#U[@gR'`$X"-0?:(P'4qnR6CKH/`Dc-IQm_k:U,Vg$h23jq`@)nT$4S)
%S7/lpATZoe.T&6@hgeNZc1IN.SQeVMljL"\*3o+*R%7I1FMR;1%!EH-mQ<OVk>(dm)eGQWSgkG8Goi#)(8'?;]JEhTD1$L2I"9R2
%&83;sml:u2kJYtEHJ(tOdU'D\PZ!M5e5'T6V_R_jR.tAhI&A]=EUhd;Q^hH[IG<\Rf<j)!0PPTpiOe^Q&`<R`4nDl5X5>(8pa8&a
%s7lKCmpH#peNC]#^O6('+ofY-s2cGaaW^]++ofY-s2cG!rqXYZs2cGaajC%/q>+f!r%oaL)A>=qjPSQ4rtF_Sa`8V$'p\3V&-(No
%s6D31melgVp1MVgeXh"LgWSAj;JXVR3]YGt2O'(?oiD+je%al!DtG?#HiE7?qYoC>kPo,AJ$Z33r:S<!s3L)po1sY_YAlh_.P?,?
%-*a":ms"A)(\)gU^H,`^j3m6>;!J#5TARA0s8;O_d-J>hpP55F$;UH\GAlAf!Lb9PQI!K_nCcWUQiGeYO$l=,rL3(,rtT2ETD7;i
%oDeB@Y4>i$rO2f)*Q^urN/VQ_6/Pg/AqO54o/Rqn<VWPCHGS'&Ha_U\]'0sFM.dPnc!@jDp?rK/.MIp(`rqcU'_"gGaQ;P1c`=s$
%fc-`4FHAP#IedEiF\WTP$_aqEm*Elp\[gm;Ha6/erFVj<f!'>j\j%\fa6M-V^)+CeJ(A\qDao#\eM6uF-FII3PYT#':!iCb-HO:=
%UL7&K04gd=dl'hC$;J)m.d0Q6%4At?I7d?,nTJLLlftn3@BDae$%,/<ZN_&<nna[jHo&)do'gj=qm4sJJoJ"!=otYsB(flj4=GV:
%c"BBn5;Uh)mrfJu4mBm_V^.88@M1JcLEraPO&I"#Cf3/%"FWpGa-e)'8^k(Aji2TAR<;\".H>5(B]j`d@9p:I026NI\(8LJce5A,
%M03)*]2d\7_juRZXk53*r7S3Q$V8ROrE2'l,0nt\87cSUD*0W)NPSMbV:k7cA0\Qc)e!.@"8.ue!,Uu[QSDh=)A'6mp>h3DP24[j
%Qf&bgoodAe69HNb>:htA!SM<.rRj[$&FO:]-:tXkmAK)Zh)lX6;tg2[/+Pd%,^5_1C^ci$At7N@%U7N%<E;,')_`/B=k4iV6O+p$
%0<h9cUS\kk2C%SAeAK6FiL;ZmrI.7hgPj,#%VtOE%CRLn>;q7\TGQ"g\a2G_D;O->S-/@jc][Y\ED=YpU:B_I;_(9qBP82QbRU;A
%(&PgC*7+21N^VLb%ecJW'on<gRJo`%UFrHRq![ntnX=W5[<Z@oX)hmtqTP8P%`,rJcZXl(0`#V.e_M;^;U0?IDR4O.QFdU"C!FcZ
%*saP-9jfkK5+PdAf-]n9@_@#lWAgN9#/>(7r:RbCqb>O^`L>YZB#e#3:@$PH:M3I=Ma-(DhIBXqn/'K/eg>,Xg^Qm"N/M<P'@$BZ
%bfp9)QSR4>m7HPSWl(VP,S4e%X9i]hi&k5>bZCZL:F4;%C,AJ`/b$I.AU,;TI1"?F\D:%%3E>CqS[uCK"cYN9g"KA*lT;%:CLp^;
%"s+]j_-bKP+i]Nk75K?1cf.fFR=.a7:`4+7F>S#q]0U26#UsC,"9gr!.tg&aV#ZAchtPYJ-;8\Y8rK=M!FL)A2GAJNj2Qd[7NZRq
%l-MKb;X!*\FW@j.j::QoS_22MJq.%[?SCYmh:-Sl(b.EL^i\25Ao23->H;od7&CDQ\_$ck*J;j@6d]=EdS.HAPYZr?6#]#)l]i:@
%pbGRe1(Ge/;h0B8Y?TW%A^aSSig!#*kUE!O(uP%q>K++ZB<1fF#?id7?F%,/n`8M0%*O9_#:tL>qWo4paaV(<RXK6TB9:iTClN%Z
%j#c]>_$7#XR[p=>$/d`^qS%.mj,aa!O'RqYVdV>oSZlO<JdLZ)d^i[BmGH_>$.G-.N!1/-B$"#d>_[icAi(MPNIlU;Eu`(qWepmj
%BD8hE*Gi4.k\aT+];[etXh,)b>:-Rtfoh_"<k,bZ:";]^(]i"_R'CNHR'`f1MqR7fT$<F,2ti@^fW_74#cP">:s@m.!_SFR/5!Eu
%lU-8WR;)qb[G#W4D42ZSou;ra_TNJ]NA(\8VT5;'KtYKDp7B$h26;Oh8^X[&,h_u3((En[X?90Z1Br%SbqGD<LmR>P"+s*`Q0YS+
%5-Q2Ug2CPm5$q>WVLeXRDOOdt-FG9[+[ltj^1U+Sqhfn!*U=$WW\Y_4#CJ<uW@o[P'""?:<"O#+-0]20YH_!@`f'L)Q[,YeGTlrC
%B3>:RIS0)b*!*1SEL8U9RkH^7j4):F1m@I,f__RKdQ!)fQ:sFML)(5oN0OZaikFZ4N#,+6g*Yne1hi=))g(`:]8cTVB;N$._Lfe=
%Qc"J36,@*UGj6F[.G)l2f$\"[Ru,0#W8JDZ]It1k2Dc>E3kc-ti%f%;b3c(C'$[XKmFToZ2oXY)-8052C+_['`.lr#gkq+Nl.05j
%R:+)*&/7l<S$/;=.aBhEGap]ORl6B%Y4H6_'k7;[<M"tP.TL8\^RdTSXisTj)gVdABtE`PrcP'$V+!)S@E]`aLD(>u&uIepk2JZ\
%J8g9O?p^;im`Qc)'MiZ=csJ/9&VQh)Lpe(g77V0L`SNJl9IEF!fP;3@j#0:eF;cMdX?q:%*Fn1p%"5R-F8s?e1RkC&`o3"Wa]7P,
%e"5*eOEl@r*oQkF\F_2,e4]sQX3Hci0h9B*blC,>8,!`9'G,j;"Q)qGkbs6(@"Q<cFd(:\:>8SoM<1_%Fs@$0Yuuc/*8l*EEVcQa
%F#B:@'t@(BgJp1#Re\<5?D.fm2A9]`/5+7@:h[1M%>B,6e,1Z8"u"B$5\i8-6D1sDr8oK=%PpJH@MtqE)D\NW<nc5m6mSGZ+M"a0
%if&G[^rg#RYE'!*LCIR:r3?_K8:*6p=M:aYT[a5ILLu/+[mi2?KorjiS![;)<>S$,RhfT$?kp_9qNLt\\=_r-Re8fc(Ne,N?>9s`
%gC-<qXohr=4f-.TPB/\EN](Nu"eWD:[<J7rX<U.6Y`9f/e"jVsUn"*'BEa#r@#`;7$1oUG4bW$>]/kiJrMWCUc56\oNib8TN7FAo
%<2o:>OPu_(O*A*q2T0>"*!.'"qc\Q;FLWQ0QfgbjZO8p"2E0C_h$:<V=6h!=3At^u*cMCj:!aMV/>S)>d#ftQ(U%chYp@<02!s&&
%rd37b;$(7RUg1[n?6YL>ofJALciZoY)?l\k,BLqg1TB'`Ep2_j5QGkV6[X"@$T?m'YB70+g]i5:eWQI)>F5KeTWee7-'j]&@5A/2
%`i_(<U1RU3gq.%B#W!&i)))BQ8"XkN(DuKW@6*'Jc#1p=L,$]`@*Z>(k$9n,JS5Nm*!?[25sY#V^;AZI41t8JDhA7K1o'dffPO$E
%TZjFg*kS\!?#[J`+(e2NVc!'G3D5,NdQ@l#&Yu_q[)%!3!pFcP!'P/0V!sMS7R_-g_T&sj`W"tO\JE(\JsS*`b+Ut8mE?X3_C2LQ
%3G.EtH6/R<Csg`N*1KC1!ZLWek/D$gW&(NjD'#V&18FAn0o#S"d;f@`0^(7"18>_\U1G\4,2JAre$E-ib`%7e,.,^1#Af/r$#,,a
%M=:`#.C<@NY%&F0C$fKTMJ8HB"3RE^Vk'Ah:8dMP'EWAFQZKT1e+/=Z$-T@rNF*?4<Q=U>A#OSh>CIX[3J:YuP9h19<#,cmKNn+2
%/^GsiEilL5Q1ccB%E?fRiDi;-BR".-Mq7Xa*l/XS%Y@>^X3i^=Fg(82[Ab;I,SqZ[8i+H?P7.6ZZ1c]:5"tQab9J6)WG'q4.4Gl=
%0L=.4n5=-X_DU$t(>VZ$!YrnuEdnHp3<LtYiVr$*+W.//6.<2d*$LAA";0W6lNd(_g'\NL*[L!h"sYBY?:hHAlU.3$?sZUQYq!/0
%kYr#qXs@eOn/`!Y>#Xg-'JkJ!@RsT<\`@=kl+MGJT<!TN[GYXZd/B5eU1DKUN-/RHR2stKX9ZYNFAlii=E/Wr)^:C)<*_iEg2^Bm
%(kqT\I@6lJ&U6o-`UKlE"dHeud\=:EDG%YICF$8NNg&/:k=rIP]h*cDKaBa$HJWbL9l*8&8S"BMM$"cX'/Gdo$qkZ`Cri_t$P`a#
%.r/g1>M?%+nJI4SjR0(#l1lRHRUJrb.\KM0Ie++FULD`?:"F89(o3Sc-QPU)g<IOD&4<-XU51C-"=>9<Gc[(horg/c+[XuB=S#^<
%OUE'1M\5B6(^MEGYiB`(]DNs*Z%3lkGJaTXoo*U:`=B"5?sKmKS)tG$)oa!4-::`e2%:U[enCJJ>tLBL&TEqoKQuC"=JL_jn6kRF
%n6$>F`#N#pf!.fjO;\YR#_"KPR!$`GCV34u032=Mh/(f^<e\K4jjkcIJN<O8KLrufGkeB;e?Hj$$Ut1n,(]q'I1M@7R9Tcc"h'[<
%5Rb'3']oZ(MNoDaaG"peKg!!=cT[CGh-`/r:#bDl(>!k#Hn"%1@FWW2SfoV:+<WHbG[\T.ql\]\It]:eSIBR<3JRf,$UA]8$Sng!
%%cmhQkVD.>%-Uk60WoRen'#1;1a>ncW-Kb<aQ266NQsO$??d?-ak77K2n_L?NN4bS%(--7@"O&*aE3-p_erC,FuGa')>8GXOp@0U
%':KC\qZhk.hC`FmFa+eDS1q,10i,_X2RLZ)-"(>qH0^2*TeK"N=!D0gCcY@9g*f3WecZHJloK&TS--ki\<=K9X>(BQ]bUqlFf-@Q
%k1+.%k@K<nn:DW3drU,f9lr:u'2+1,%Ak_Ibdi"h2fG.FA!<'G]@^E$cT\!"9s1$YToeaa#Yoh=l3r8AD+[-FWOYcfX'*pdk1M.H
%d?-6&(rHsJCI2tII[dV\fICP[\bXUGGdu^0(FX)P2m^StpV*tbLta(<$HFi!c#n_:9@J4;FK^rRJI)"#'\7XA3ucL*q3C2-r'$Ir
%=YrAdD0tAQN+eYfh$QHSDY@IEX"hI\:]ZMR@hcecinu<Y#r;E7BXCoQ($d\E6`R_@^aFecC<QehRo7UpT@q@Xa'!MeAlSnqQ\"g;
%!h+,A)o>O9L%=j)CE'K9DDKE;4<t#RbT%=#4NoBbV"KP/RH%lgAA`_&h*YQ\:*D]5\>@\ke1ce<Q!a7>+e7Ae(0X'dL5:N!,T2eF
%3.M*X.\M6\L?XL>/lrWiI<Z6^$P=XG6]t,a*Uf=W[r5`KQMEjtbYT$k\0W+i;ma\t7J75"T<a$ef:Q)cD^\[6%SSJ,!o2n\0s[Z\
%mQ#k2GW&5j`5f6PD2N70'$4H,$.l0!2k-1S?s\e+%-T[Z&FR^!-R?`<gZI')>rk[Ql3;rVF:F'45L,sQV-ADn;qd`<4#jM=gtbJt
%^"GQU$1iWtI?!$nU-U\c&BMX0'BO)28g!6PI5"it1DW<5gRo:IQ*SPkRPIa3AW+p&L\1gB?Xk5Z$'6ni7nN9l@+srL2rNa?5bZg!
%P\iP+6\&Tq@:J8CgUa\I"TbslL7Q";([N1$Nd^0`,V'A@4K8:T=b=<5mcST+g3qJQo>'leC%>g>i*Tes%dN1:ZMikEi&j%<M"b:7
%6=,`UW`GNrbQ&jQ!dfB'\QTO5<`_7`;..k[Z8Xb.6Qhk,AF)W[Nl-0CKBsO_3ons2phNEPYG`kFk)_jNZ%k`3%2oH70ZK3=JVN6!
%h2dc0@^OC4KI1(dcAuF0%pB':4eN0'aTs[^^sUAN101f_3&i-b".kbA#64,2:ltbl#>JkW7ZHT>+5c#gY/U`M&eHHc?_ks0TJZi<
%!(VAA]FBe#QK,3N&@$?f1L!LK&R(brdn>Kc+6pi%@iObtUaM7bVdEfoO^j(Vn/068-ggZag(HuhcGmZ*@S;3Ak;WsI8:+)B)rWQ&
%UgU1=\:VMNJHSISHW394+D$RO!3"E^5UF4D,8c#WJ1!c"70$e3>$'6no-c;pL"H^\>TJl<`Wr_1=LPlCa[=o-*V>do^j*5#+GTGc
%p\0>KfisOnpRC!2ku1/:Y#\,T3>$ALC"qnRj:\rE9[Kq59OlPhfjpIoCs(8C^;B6NNr`B</BemaFh:@f-b*#YXcNmo7>J"N&/Z*.
%$G"UU1utc4OE\FoVXPB)o5kleG(eEa\c<EFBE0%&oG)p#>kXC9ggPP'7,ScT6@+$P8ZQl+Cg+2#]""ld+2C$AbF"E$Pf^TiQpC:J
%n2tsLC,Yuld4IPH%6((abH=MtD'V3e0hkTg-B.YpX!u#.Ala`#4pYQ-<Y!?"^/3k,kP+QV+qfiRNq#/(12Ve1fE._PaY@\Z1_ir!
%k1*Pq0pQ>\JZFAP=)f6mc4qA0!D!\U/23=H;AJK$HDhk(E/I=SI^f!d)GuWrl'Vs__(-ls!V&Mr(HI]._0lL7&$3gUM6S0;H4*Bd
%+dCeD)]^.i^9a6QcjmFK6@c^D?Tq["VrJ][5LBW.R*eUA?F^^Aj^hA.)tlG+#Ynhf-PD2[cFO?DKO?*bdcK"5"f@A#^(OSb!%,"a
%86uU*G"S65AJV!lbaK5jcE;;?K#0Cf7e0[EAOWO0Mc"<-MuuJs9(j)>!D_3^"Y'&oNjfsu3ERT90i=s2@b1YU,^Za$CZB;,;Bd,Z
%XH*q6<HDf2J18!o3$L#.'gYPRE*;4VLJ^JadR%2=G(:j$kNGT(Dj-_q2JMS!8M7@<3(,s7I.!=uoO%TKs1][qOb]l&1h6l446"i%
%>#1+,ZgUH$$[PJ&fF*;!d6Q?=82.o2pi8rop=pZb`=QJ;@1#4Dn-APC"Nt#FIKtfFYrHnW0<_@l?H)E4>Vm[9",!Yq>+p#F][`=u
%k:ho6%]u(*X@]t<<Q#j7T,1;TeeOgY$Co[?Gd8gq@mUB:G]c7X+CMo,;Yh)d;hU8M2I)gJZ%Qp,<[*3I@@JLP"[fOg5lg@`:=(tQ
%@=a3nO;)ql.g\\#,$a`mTe+MfX=O4/+@"d)$B8pAd_pLnFIYhM;YGnW"S?UTJ-f!P1^TnHn?ZIk1d\^2jB"d#%\_*E'J)R0d1ru:
%R20`BnM^94EDa67^kh!Cg_J&jRY#U2XrJTdJBhh"(UrVe[R!V1)QX7NaTWj+VOh6gSVFacfUOgXI(</5!K7M+b#oga&J=3QcK&tL
%Zlladm`&tN.@fg%3Jg3pMt.V@EFF-h!/<Q*CH?)k+^h4-K>ZJ?(brA=\&cfW6U\-QbZ"J>j_j(+#<S-k1B:R?XNnG>Pd'F"ThFJ]
%ab/+8+/Kng9Ron+PmO2,']HhQiG_XfDk5KPcK]r(UJT"Jmo6b-Pfb%V;m4Y.o<?lZ%(68*3R(#FaaMM:'<r-.6iDGJc@]J&E\%`l
%2K_S$M=)EG`8'/%#qh%kEl,]kmiIh64QhmZh(jZ_+3TUp'TE-XfHrh<=leRG#6KYG.9QDMhJ#J(A]u:l5a9V2#Ldg#;rBE==!os1
%S8`d5TY.Kqi*nOlgSV@Y8U'7oOc<id*>gm%$/H(hfH^IN1$*t^*Pu*8F]P&gR?%GXo<$II:On\lDM.K2L&5CQ%K`$R`-j7*[WS:J
%=qS-$=>s>B#Tkb%!@Q=c&tJIjH:)Bh3&pOW!Z9Ro6>$NM_<2&ZrIcZDMB)'+!S.fU$&$D$=pB9aK!C%I&WM'$b(*Y>1(eK[ds9GI
%]^gX-gnb(riG<abq$Fj!7)Z!I/^;Q5fR:7C]O.^W?NFDh0I64P9Qfbt%Q_DMD>D/4G2f/06.p\2!lCAV'T@<DB:Q<bGYBO3>p02q
%Vh;53Se-#&ZBtMTo:9Q3Cc7.*C`ftJ(s&K$K:&965]&"'iO5Ur13O1;69R-e!gkSQaoiM*$sJ?<E@'23A"[+p^Y>4F%jcnF!s'Y)
%&?I#G#&pM8:C%i=g,u[%lS)_meNe>2$+eV;F-H['0gQA-"[oT3WLa6P1qgW(bakVF"]hHJ+2J'er'uFV\B830[<YB1_aN#DM(nfR
%06I;eZPTI2$a;h0N-#39in^ja0F'KYB-<;X=I:,HpOthbOPV:Z>bOj,\0M7gip@FZ?$HN1f!T[djP]G@&We"OYq"qWd."2$8g<];
%YAkaBRL/)t@?KXjF>\)#isob[+nYjb0425r23.lf?mZp<]8os]rTk=c(FSPFTATSBDr/6UrT8;_5J+P>IJNH'07Wror<jVC[*6a6
%]/1l@_an*8nR[L[;LhlX<gRGk#r+-'"0!-0?.^>ji<\Cm(j^q"h=!WH/L?lfr@l'2j<+aW5c0OgIGU5\<-X_X@u,7,6K0?4/hkLh
%guQgPP&$E=j_:r)KjXRoRTrV;:!l=Zj2HDZ9jNKT)!t:n+OD9W3Gcf':h[^?p6pLO&1!SJ*<,$C:!5$)"Sts38tI)H+A(ZDOAK:9
%G>Im96fS[&:SS+#;*og23tV#10?YR%)MBXSrJT`-+!fp9pEei6.,%h,1Sf,<B,C%K!X?gk8D^bml/4[kk3G,Vj(DH-NrmnWg%teW
%8O;N`Y/UB`E!EEFLZd;F&WNY;H3C^N\e*Q6;Kgtk2Qt4*KU:4BRp4TK!\sEu^]dQm[DFZ*2t?C!C5dN$!&2)Ch)?WhE55ZQkjr9&
%BT?Zm8i!+fJp3"<84oXsV7U(e0U`Jk(++HN<cuI`iY`u,H!))<F-A,ecD.^'4Jb?QLp:qH0/GjtcoCoGNi<g"9CJ?#bMq27*6,-l
%rhC%u8<\MuC=M?IpfK:E4EdKFJ05l9KB7RVA_^)9]YU*7/cfDH^bN]VL%UF+6I6<FR(qEQr0=>SPTEdpHn+-JX3[URGcmkngV469
%JrB<LN!\U/@C0F<TS-_k4.6%c2?j6Z81&N6'Zc_`fkj.i9NK`HQYTn`3b!-HUuN`dSem0o%7b&Q%E*B1%7J.P\NW=[#C(?mA3>q7
%<kFlWQ+`ss30KStgnoIh^,^eKRK+/X46'pf9B?#,bdM`MMfNp`j22a""=PMiM<Y>u$Y?m3[J9-hYg3lZ#cpYO:]Q+fB#F]MWh),'
%_aCpH&"=9;%s_`dSZ;14T@^%-9LG4,e(DQoNPkU*f#YUqogl.?:NE-6%e2%@Is[>uS;AL-[ehJJ!K`4OgH)Dmjk[MCJe,\^fC%h4
%F>T!'baa>lT&9XnK,BrrIa#B$Z[d?(k`Hi3[]:>D#3I+fg#-[3kKkAWRKs58,4eR9)YlV-4=4IcN_)@c<-0,CkrefN\/LFeCd=%l
%9a\[-cu"R3_L.,]N<F1D0Em<BL]tS+5mL0)cL7O;Bk?6OGde-7$J%8<=ZLa]\!g4_X$*,+n_-O[o.<X'@g(gRc!co6A_u]#1=,Tg
%Pc\RB(#QP3<S;C,&/J+(@]WY+kCJdoN'AQlR344'5S,e<l<1LqHb(40.L/gZbpVucFrZK@CScVn)`/NNA-BbX::U:lbiI%-1E<&D
%V8Z<.K@VV\G`/s(3/f-$VHDOTYsr?TSKr'`.LEA58<bbtO&olV/IX@B&VgPu-%+%u`B'6RY^X_;Do3f)n:_.'p,XjYqXFJhn/&U1
%"<,GA,6Yt"YImn#(9aJ[@WLGV+kG:<9%HhS6q?g0+3u2N$"<@E^e?j[8[K?>*dW>Uog5=Kh4t3'3<eKTir+_r";fW]jaeCsP37o/
%*oWA)CT/%`*t^TK('&R^#m/8Z.fcHXFVc%V250pGYg$#ZM;Z3rQGAWMj&FXpinZ,/0a*]gr#1G7=Qhu`1Vg9s<_j/^N2lVM&o%Ut
%0gQDe8MfYmFr=VI)@&FPQ_PB$BZ+b\&$q%9#[Cedc7\]RCI!QF14n6oq3t*'('NYO_@(Dl&e+PQieT#'H&Rb(kIFe3Q^<5jU;Lg.
%m9%:L'h$\%;i]>I.%hYU2IsefoQGc0j0r;cHt5DP8KF/u"J.Y:Xa#.`2e1t-`$9,X*jMLR@A(KjXr9rFWscV@<Dh0g'pdnlT_<t?
%YcRIY^,(_&Q"QV*LWF`#nf]n%fTsQV%Y65dKD/1SG[jn]5a)c6?c@L+[=]mp.3&Z2K)/V;6/_!-'#9K7-9!EJbaJP:">bZOlSK,T
%K"@\]8i$h^\&"0GD/7Q.-Lo#O]2p$JJ]\+@Da=&,2e`E_U&orLRVC`5^Aq`ECeP=O^B:tChKE=.Ws?0nUtq':5=FNC<;ORgoI08U
%:sh"h:d`A%aq]`HCGB*k:5X-H,Bk]hFEhuYlN;.55idbjqZs/iBFRCf7(Kmc7ff1o3J3nuk@sk',FqQ$+GG8RC^c-d?"<j>Xg(rS
%n9JQ`Miu\,iD$\:.:hb,b,USrZ^V#8e+!&20e0'7M2!>>F!P[?!X_<;>WqQh"iDS.D'YhU0]@C.Kn'k6O.93:76tESa5Qm)&=j8A
%;EU7HAR$J.YJq*rF*]9Io26=Teb@I:$K2H7SC*X2jIPfhVVL.PP^IM>RGu7*""@*u6in'7EOnbA>`G)O5f=7S"N7KSeQ&arp_%#m
%medouaDpgc9*tli?!cShWa,1@.M-0CPbt23Y.>KLJqF9d=LdWbiD?hY5_k[L7r[:D9jaVMIs7Be\6HuuOO+!aZd4(]%h!-??BDjI
%[0d$>>+h<%dH9G&Yp5&7H`BaEiAEP[MJ!o3.$$AtqMgjqmlXBV;@OnViGdp:YPJLl&XgZ$Kr[D\GPQ`*GU03T_Q:*f=>p@RCc8JK
%?)Pd`*Dq6lPIdG:-c`Dm/t91_pfUnQ.a;DK/4LiW,N+[6#qSo+MqRN(QW7s,<HQ-RY\Z%?$[#W8g=uHacB"b2>T,^=2-k2=!X,Uk
%JcNn5#Zb=Bd]0'QSeefO+c+lMRC+["j3(ONl"ekDA1Ykk1r';%=br6Z9,4A%ctT`;]J,E4=%Zf_:f]j0E>c__;!U4r[S]:\!L<r>
%km2cB(o>.Ee*X_K'M8KL)>=k<9lW\][Q0q7n>1$]'ZKkK-U7hC/4M5J,t`N.K#n%:>#?.UH&.h4UWXR%/-Hscfe[1NE-s%$2![7.
%)Glf']eG+8"-^Ia4(/0/9*!e`8K*ZZ8n<o>LFHftA'1f(M\Or%hafcF3i&Hi9r`+I'30h_D?T0qQQH35"?Gu\'Ej@P-!tdCkc-9u
%=*Z9]\EYrK"urp6FEBE24(SqYXLB.kq!)j5^X:mKHjslAX#)/X^>!S<L,nOca\m^[)g"j1Ck]FBm"qHfh?VN9Mo4#(WVC5YR@QN4
%Qfctq63q_t.C\PP9qq?M!qoI+Pd%%D3fV2bP\'7-_Z\i6RhSh*:JLQ_!3ZAp3lqh$/D8/;CoCc=NT(H]oOki@4kSm6g*S9S?NN.!
%#ss;uIj;l;l[#a@pU5FJ-TSX3M$]+s#Z><U?mlmoD]rLXYFXGn>b,1F'&O,SK/*RD$,kP2iZ_`dS.,f:(,gohc<Z*EHtfB(1UQBf
%KiA>r!e)!gchmfo=6jkYm+s9CVF>6]_$F"`["u1<@e^1Bn[RN8-k'k/rf@cunfLeJ,R'Lb=^6*)=(3rRaAAKN7KG=TY-S*DaPamW
%l0`>al%%1L.H\Q6jQoOt[`P3(Z];ou85g*pLbTp%;(niX'Mo0tGW]94X=*9afGqtZg''h$G+O][%]Z`mCr3&I[R(8s-.ks8ZR$X(
%03&:j!Y[_kib^[JaN3NY0n)h@+Xc]N!/T6h`Ge.07PsOJ`tkot%0p/b:5R!.<;24Gom@&C4<#0:9S=*N5*imu&cgd>X;:jl,"bPr
%WGr6Y-^&EP--pZM,+&u,S$=AW16QoJE@Ae:6sieq9t>H'#8Y&&6SuW.bgu$d!o:1r5\/jpnXUC?dqdl\SV*c]%2S#m(b>fV)a,:]
%gUJk2T=t`R/6j>fVSEDW%!maMF$LS`>Vcq^g_FpDi77:`V#?%Oq`GC($,Lr#('Lu]LKB_Do@VQS@NfA9*?KtMH<K.qU8+>/pCQOs
%#qU>L<*i^=5@OdCklfaB5nA`8p^9,M)oQcWAiOFb+:P0R5h83h-bQo0%:."naABaF+>$3qFKor8"!mKZ_teOO9^tQN9U+Y10%6)f
%p:cRj0$ofo7[>1$N$.7M9n^;h0mPlMFmbc\gTJt'R6-d[Ua$;).uNaia>sl8)sT/t*f!,3SUoau/g>t>EDDUAckGlQXKF&55*!5>
%'4?2-[FOh5T]J)p+-F+`]jd/F*/L8jYe%DuhR-H"ZWEF4pN3R,#[(d3L4F8H%K8Q0?_[mcF[hb'C/cJ*\.3BDi/h<eM*=I)($$3f
%TD!8V+*mO+p#!ZR&m]*L<gT=Ee-V)=eomS+r`_?nOIiBfaa%WG#ZVq]*URf8*SQ'8Z&5UVWEqjO.p$M<]MpV4/f%!0$:#'9qig'<
%>#aE87&cVT^U4%qA4I7eaA=0C,d\1BpZkB#:n.fF+>l@s+bqY?g)m.QU&sOBPFJa.bi^W`*,([EGn;G#aLb/:)EfsImXK>r9F0`%
%lY>='Z&at`s5hk)rUl*#Da(d_qpccPHi%$1)ZT*YgMagsMgkSg?bcI&eVj1*56&iEo(;AAk%?onq58_\Nup,!Io"5IVnCC_oZk-T
%)3?S"'1-jPR"shJ6$J9T'rVn`O*.<a0!KT?^=\KNngcft0l1%O<mKL@nB4<>Mu"9nXke7W+2\=n%e!)=$kP03&"WG3hsn'>H]7DM
%29rSL4@pk#_e-E!&!#[&]^pM;GmnMcgIU#6f&UcaiGet:%+FshG7=+fWb'QuULJ<Y8;*?E<ff@Rn\KBrQBK:t_JXoW$*N;lS7D:[
%F^0QU3N.rg%.md7VW1iZ<Hk9#Xq%saVIRP_)]hmNa3@]>$e$j"TOJXVU15P0CH@93&I+Cf3:e+7&s>mOBT>r_b7m6QMhhnbisEg^
%huKa9KB'Iu-Zh'_oDAN?hjD8@%sh_jL9qo9DN)38]fmSuDFh97rJTDI\BP*T/\$f!fSOb19PkcBf#;I<3s#+#2C:\m4J=WeY>?3?
%`T=LOTk8r,)!eQ\%j1K[Qh,VHN5g:;(o/nFU9a/YBH1#Uc=`(;3U6701[[PGG%!1]8ZWo5P8X,R5$r7HpZaX#B.Ds0_2htZ2CF6Q
%RNOAW?EAA00h,I5&5J,A,l>m^<j3G$HQ#rqA":I%Dc%?I0,/@0@ous>f.R9H@ol8Zpkpl-iOfAC0qKDW`eD)C?ns\[6!hc%@46pS
%0BOHMT"GFKo]DHUO;Du/F;A>K(GFFqKtNeO2c:66dHRO9IcWocS_2,*+TpK\iWaT]RNE^+i%?p[K.67FFn'RH9/%/tAqL`IR>\V5
%,B.g7/s^V175,,NNJDooQ>NYC]20;bg`XPobf)DZp2N*NdEN&=nao(]n.pZCK#f6.d@r=godabH<"4(K(5MVuN5a7U<#<D\#VilA
%Y8@9I`70FB(sgU"ic^mAA`>aR1$/L!eq!/iha^6*M5kg;Rr3't'lsr>.!D=o/>k1b00I4HM1ml(1rX<hdPkisRo>tb=GiS8(5&G#
%*"SF45uJ,K#Ai(4i@&Rb<ssmp'L(PP5uEU0S*36Nc9gS]"oue@:eUk;)2k+(Fp0Gq1HdI<]$a^I`4Idh_+fk*43#U#S!\?<HOae"
%^o)Q$B]\iSNsd[^or=i2-3f61=1JBp)<;[ja-Dr-.>'+-A#^r=,ODNb;IY%B,.p,!3Pef7Pf1eJ!:qR-i`]>*H6FOdXuM&p(kHVT
%>rs&]Cp%@Wk/'S][q_3O,L4"S"W-]-A+#/"3i!Y:prN>tM&=2R!$I,R(d&a2*2\GT(U3!p6QE0G_*Z@&Tc!.Kr&?.kpI@epF+A%&
%&E?M2rHE#8L15T_9kON:<eS\LVO3XnA7ecj,gtjp5gJ`6.*77"*9>!cD-(Kb#DiRc#/p&U4P\`jG+rD-b<\K(1UW*8pg>*Hb;<\!
%5rstn4'C2M9>Gb;X.CbqOo>SeCbQ??etVY&9S2TrR;WoGK35@0DV0=inpUbsE'pEtKr51/0XC,N&qXm99ZF[mK2p7E`8P]E)M[&M
%F#/W,TjsHNELpV:*h@;E)/eGZ#a/VllsRC0a)FB\<Gklq@0h9eURo>H./tD,L/t9TG%'$:,\V=@@DE1(5D!)Vr%oN,\kibZ",[>,
%AmrJ*B?H-7\GFbj(LCMo/[i6(Kn4Ph*`8pbci?FY?V#me@Yo-Wi"W'SJ>[N^@??"[Eh=5'JX\/I01KAJI^ZZjL%-0f:L*[Jo+Y22
%cj==g)1tU"kEL.d&hZU_gR3_W`\s*fLkJDuX'Bn&OhJp^BBLDo74b\,JTnHHm<09Y@:VTC=Y]tIkT0q^nA^SejqA)1)nk;P&VDd'
%6?SRJ"h#W,qLh%We*\984W(?>edq?0:&39hG;)STH9\?\2_eJ=EUZHjGG,Jcg4cb4YQb3EM1oKF#$8AD(X?DBs'jedPeiiH(DgTN
%'O0%O0Gms*XY7Cre,e)g(7ZC:GZf9R<CNei="k.7q4J(dJs0N/K"H-S+ppe>+.Tgu$'+HjRc"_]9CPo&_"iIG^^?_4bRod8;ilRK
%+`JKe?RMF\I6SAJLG8LS;<3Dr/p^nIEYioWa\6k`jM7E-J3ak(^`+;/c/&PL\ZeoH%1F3`X2T]1GU(G7N%6h@k,ZS)SK.D@\?4t1
%SK2rb&TK:%G$n:f''Kth^p(^K?eiF*9t,;B"pUtNpmIWifZ"ACj!"])7p_eV!o%P1N!R!Md#Tm$&[]@#)@W`QBS"R,1gHcp?m@hD
%0EF"-2hjMfYQB`d/01P%S!3OL-SWCrAR$[8&Z#[X8h^;Ke\`kB&HY<=@AgRB+#"HM^mfoc(eb>hQAQk0"JSN!Oo]4Q`lkoC=nPL8
%"5s7L*L?#F#rm:_/Vnq>mM7sL6Vs8h7V<WI(iH:s%2rV2[1M.$UB<!&nBQ^j3/#*K$lmG-BlO-Z<QJKe_SQBjKjbW'^q_Eb3<fL<
%ISVT%1BDIb(gHM0(9_ciqHk?FLnQjEiK:/[q%+qR"c:#?qhX=k'W/QfVZ)9t!Y#jf^X.4uN"/bCL/7qH4u<5efIr#ARI:g\Dg];R
%s":!$s#)DKFY;\2Ve5@*#9tG[lt9tj?gVqj(@Q1A?;.e`IfYq(!m@*iIoGmunfn(PEQf4%nLo&adnUo"ia7QL0G!k`8<fAGinqZU
%aZVj3rWPoHST111qtpiY?V:)Q(Z+%KJqZ:2Imr/Xe7m(P&F';?eV3aa<:Br,M>%g!.ROi]^SJ1&_.A#0n/rJMXRlGNLZ/%Tg+rSW
%=fr/"YLn;>3G<p<K#B>Hm4WsSS1aVF$Hp?1#_Vi;=g5$QKD(WP6q)EqrC*_Y3AIH179_3l'"#Cl!_gG$Bn)PF,G`jmJ&sOj+Ha#0
%Er,h@8M@0[\:_$<_>9'[;Q;?OIsFlqHS;b@.0m7gd/FZT7C(X?rM>0WrkeQU;[$BHhHrk\5n)UW86EQFjo$K6Y)`V3rZWu;ZEH^p
%bP38;L1f@MB'M4VSG8H0,:2AtB$TPSg'dF(Qn!ug^u/@JL6@YGT`)k'AD/U'bkaD*'\kb60+[C9i;CQJ=A*XGr'``(*?9aI%""t6
%`&W>;.SAH$3.L,`7M!Z!R2j<[N5%nV,U_;1#_*GG,X$A`rXO_?/A>HsaA%/Xq]4A+Ges(]JN+O<lo/r4=0>npZ+#09rA$Q<I,@=&
%j?&Ipb4NmO-HJ-EIbBFm@sZj"Xsj-l@JZOrc#fC]7)BdCF.-H`LXgcaq1Yo+S<jg?>_'(]kP-@ll.3!O^M.c/[\3D,E1Z)>1=fPJ
%`FF2Upn_:A?$:2bZK2t3G)fof(4L>`pgk;WQUUGfmk>W3ig0_E#!OGaPlb]K;>_n61\7@9AJPNP%2Xn/4>guJT_N)l&Jjr1pr/_Y
%47u;;b7,p4QO&UYBRJ)FkP/W#Y\rr(nk1EtGUN;u&NSk,61PBaZPOF@?V#egGh3)b>-*>:QNHSHG:*,3H4pRT+Sk+'0240;i?,jE
%J@4CRngci#h(MlZGo-oVS`Md62:7-A(K0BQK'5.$TAoZ@Ud5o#RU6>WOpmdd$F$f@bqB7UoB4?h$XG@dA*<[<:(21SSmQ$YWP^>N
%^Q?lX#bGB/8BMQ-^D*p#rQOmaWAR*urUN:V^iZG\#[$V;@J](<(3kaFqGh)417ct'^@-5a@J\MtC3s)W^Y"C!Mg@)U!nCSHSG-Ff
%-.Z:RhnjV;Vd=P@?[h2-4qmlmW^N&\G)7%has5!]W58C]iV=3V4=f;T/.)&nJfPCb^C1!giVB;NW-RYr^M#$V,WO1).L#I^L$0=^
%@D7?W(D:)hSEQ:P`Wn+a^M.OMiB4lf(9&X5k81Z.3P>^di;(?Mar1YZ?`qu&(HWi_9H[pS01<QCB*$a"4MNjQQ$pL?MoH;A`.d@j
%0R`+;G+N%L0``8Hk;P9U8+asqb;,bf97g1hA17eEoDI$]-frR?kEf*#HGT2'M*H`R^(8HeP=km5]*Sss&H.Jk,.C#5$b]1a[1iLR
%(sMqNoLgVA[ikOdeHsS4U0e29CgDjGRDL'*/eElbk*5I'oIE52=/''WNu@@.qW07?R4$63X;t(2Fo^rll9e!4d/5XpRa^9cKn:4i
%\MF+M\Tsp56BDTVkiP"B4*8eLXu*m)DU-9aF:9rf,5DE/(fodej-SL5.ZDSJhX90+ILNs9Sur42giHU)"nF]tVs&9c?>M7L%^o`4
%5L-_!1-cjgjor;6Hp<hl/t%q#%UYcZZkl-=XAV)Xqf]0>?3c=*3d?)Ol^?9^7*b%4%o:u6F8CoVs-ssTLR6g%U[Qht;rVbHi=%OZ
%52Y>Ld)"n'lQU`nFM;860YXdeG2M.)aF(U0J:l#]*"8Vm4B)'=f<pp`jNI"k/g=X*]:g?"4MDA9cj,O`^15(aM_?:6V"m0;p`^oR
%7Ff=u+(F0LL'<>cA)]LS.=??K-A'&Mo+-Mn_;O'XkD(jE05.oi=VcK?[PU<#0BdcW/82kf]pCME*&Ek>F+D=AmU!+H2=54hOI4rH
%.skLE]h#<'?CeSBS7=^k.rR'aO!s16g0US5[E5+5:RG?7rCYeeSSqY]/'_JN%h*E04(U(:,@`+V1Li'[#+T:#fXncA(js#m?ipVu
%9\7Hs2lJ*:lX`X-`gN%`*Z$hVorbu$SZ4Vl']7KkG+r<iHSGHZq`/VpErOl,S"Q9SH@\L`dAS-Dj`CYrY>^<a(j\dP!<tb;Cj^s4
%)?d`>+EHH(*DQeYr4E%(Z]rYtGsOCu/Uh-kSVe^HEaH8Ygpt=\VrRZBRWllDR2:62,bmL6nI3L2BmHV?m0"pmr&Np^E,I-l]<srW
%_9*.b5gp'r&V\XC<aIg:::GT(bS6RG/E[9X"F.1&G$hM\is7tdc`Fc]kbsr&Po%GR&WJ#n.Ym3M0:]]E\<&6M:0p-5VPAO6YH/Y<
%$R[Up$bUFto#e<NT<SL7I#m4o-h">nJs-uPVSIeIQNEJ"T/h12U@I35PF"*?gc3S>Gs<u\m[*nC+3DXJ80-4"Kp.j$VZ!'L=7NoN
%(BlIeEb+H"F7M*K!g=ukH-)MkbDVR.3`X%NOr(;s^HX,lQZ!b,X9c#W2nVuXC0+)33?CW]!lDNXLV!tMH3kTQo1)XJ7dr#IH!0is
%Vn4YR144fG)2u4e0#2<37UAPSQq]e$nh.8s)0n4b0unm.pXo6"bfG-s.X^?_Kj`sf7n2fG6=*"FX"qlXmN<s!mYd2$huPhOne1YP
%'g2hJ7E3ou,320gdV$-&ntJAQIVCM,U;i'YE[q'Zg,\7]`sYk31P/R$_4JnDiqUa=^.$G;N0h?p(7dE(YFr8V>rrALQDpE-A@rP<
%.TlI6?:V)1;5]h143fW$YG-S!L%4H-/[fF.*A><43F2H*&a4f?&p1e(oinZjZ>q5:.iGOsEB+\N+2JC3rR=iSG2_D6XJfZn\@h6`
%[DB`7I9KlHGQG#n_iu>Wh$Hc-K"&eWC1db-mMkm'!H7F5Yj6oF+WOD*TBUR)(C0SLYj_!60XnFAGKC=UpFH%l#bK+7ioI^ZJ?#_'
%mThS7odfY%*d_XXG^!d_-WkS::GQ6IG6p_N'/-]hfV0XllsIA,26lOR.!N4G2=bn8\B=sH1`#%fFd1L3DjORVfb`Hs[Z:Qe,hR9+
%,MM]%[Ttke8?W3M/j+`6bf-uJmm*p\W-/2liQ_VP[*/E1dTAoL+GR""Q<dIF,*s2n]+)`UMd[DU*2).A"M56=[P*)8^iruJM^B80
%*]Q"nG2:/OdTkkE:&BpAcERTr=(Yafd1`;CllWUki>jt_/kTl7f07[KK!Bs?]/Zj/o8S<R<#=X]+HjHXl9^;'>&`cDY"jRn#;^l_
%Eb<f)g)]*X-e*!>bSVHk&1SB2TQ@?pi-jdiMbY)f&]S[ll(Xshl&6"<mWAIW\9+WebnO-gJ1HgimnBPc,V7sJ_5%Hd2&uH8dKTUg
%@D4OYD?.(s7X'1F4BQ^q4`7W/FI<]U$O2N,7.,[qG;tEY_P)nI7Ja:7Tf\f>0dq.A#EUSI]#[>P,IU)RgC)g>L:aCj/e#=U@c@WF
%DBcK&Sr5n$61h5ZE)>b=Rrj<$K0gBt4sPMBTpoNCM)0kRENq[,q-59OLFt(m&9PU)k`URL0c0$"ATF*+YWIWCElGFm3HSu.EF4cU
%e,XM`Br>fH08A9p&,VJlFJjm7XsCS7[Yo>:>m,M4a#Rjq@,4URWI"VaVA$p#rnKMDO"[EW`Hf\e>hF+#[TO=V,^JhMg>/F?<E.8'
%bC_iW71h,D%`H@m9^W+1mZCm<ZffbgG=+c`JoI'd+(buE]jS%S0]4]o(g-h+Ohai4Lq?!+@QjVH7.%5ne@DReRd"F(k>FW-TF5rr
%cbLe4mTdIbbXq!C?/I<j\Vqbsn%cJT<Q[Gdim)*fXbt?r6j0m-<uTl)&-,2-\8u@7M\GhaHjM#*L14!B,5BKd5m(5J",`Il&*dC`
%<2kd92oW3:_48]#"fU&]F"X;ZlDm--=#J9n9/VLXF^`RlD()"20!jFEeKE.kJ5:AtcD>02B6WWGU+bFs#'DOu`lM6D>WSlu\7!V$
%!9`njbdkl>Q?d&e,s_dI5F?MWIEuVIk9;e!7_Nd(OsPf^%F1LP!F<M!c;dK1m8r^\@P&.G$LV.+MR[]9lC!HOA^3_>:CZ/))aEG(
%"`l;VBO6RG0]rM&_2r+[k;)^cLC?d[^imkW8_9.B6^dOg'W_`2Q/KTkaLuPc>_mGEANEVa3`q_^Ig:$IdR9$V?'o]TqZ`ZMQuaEY
%/2NZ7.=f*P@Ep/4;H:eAGR%+k_,,+5>b8uNT/1P++tgKn`LMj,i9CN%Fq*@fn;(\JQueN]gWF!Nj`<@`%GEnC37$<43>YTLcC&`P
%BjQGQbdeG'_n.Vc6;!nV0^&!\[Xp<uo#f)M?k4.uJF48aFojIA0laD5S\#"@o%ZUtm('Vg@iI^lRu!XgjiX0Q>V:Y@l`fa4:U'"'
%JhqcAOp68N$Au2uc],2T+jWl*?bEqNZA'/0]Xc7bBd\N8.S/N_25^b?F;ir&TZq%CX=/[G<-E6-=*6c,!B4J3:7KGa_SEhRk)rUN
%dk>reR3'k\X5UL"Y:;X(k)u<Uj!m@O>RW2-1kIZQ;p,j/kNtVdN<^iV`E,qC#&u6u[#$ER\W@FB)pGi,p]e0Y:dMlbqjBI2bmad%
%R<+ehNVKA%J[5/BgDB!WFLC+._44.6KWYbp"_Pn`W-Dar-'f^4a^.n.3tq+XcGf;5k$M3T>_lUc*^TuF:\?=)>Y:A+^JO+aMBnu+
%l<GP4Qllq)>Y#!-4.()'OYS<Mbdk)`aUAj,\\uIL"lR=h]7c)&QRgVY4`/`3BJ7fK?'o[Vf'%/:>R6]p?-KiA7's%.k$3es;o+tS
%lF#SU\g"N&;M/'9>bV4d#7g$(5ZL48'f!$/77pYL>XjG#oYI*Ank_ZNS.q;GJF@sLcDARF%cIiEM-sguJdZSd+a#C^DGK1qk_d7P
%WD3@6@/[D_MrYm+g0@Y=Vo>)4,G/:GOQI`lN,\NF1Nun/@o;CV!g#(TgnFTE.q,Re]BF5l<WM\u>/ofI7r2+LB$5le\=_+3/@5ba
%>fX$SWH(i^M5gi:>@7gR;7uZV;H`h@$W/Naje+#@U0NB%:gG%L[%IC'@c]q?$R,$)_30]ni&2?@/kQCG/9IT,"U)MXpII%"iqqfF
%OCH;MGEeD!#]`KoCi^irE<3?Mg1!2cYf$)h:1S69_[pdg9b;NPT_CK+:]sN+F.^NnJJc8Dj3k@>!=fgu3AYR+\^UDC()Ni;L7dG+
%\D2s[.uP)X%"i[A:H3>e&R]$EiWAW[_Lkhm!Wh:Z=%6FcOc'W7>[.MYp-jdAMRK1ko&1@#5`is>Mps<#^gb5)$#Z'mPmb'A(<f4$
%b7NDZM[:3F5?SH@7(A%se:RrAKf3,-PnjAUqaR<G'+5t:T^<!p>b!Xmb2OS&:"u7G(iW?[ae!PT>]M.+YAsPG!&H=IcLeSraCK0'
%UgeVB2@p-%nllrpgdD(b)2<)\;f#3WM`TKZHeZ7-n\TU1gq71i8\269"Q_5\+go@YneSa*XP-KNBk!:O]a*LJ?t<E!YQs&;?BO<[
%:3VUCi%4F9-pj.iRh6]:0&h1dY@NB<.J,Y:eLa_sUKs:*+bXD?7(6#e*B^gTpg_X\1X.M\Z7'k#gocN:-b1g8`dK#@"nF@*r_i4j
%Ct@*N:u!8K$^H'I\0WLmRZ$*iH[#Mjj3AIT[kY&X[Lf0B3S817d=D@g+Lf=\P*=]SWuOuPTEKl#(+**(AMMr6"KXfG[3[.$GRC@V
%"n`16OgEc9'n?\*OP3$WA4(=iJeSm7qOk2!&U<d/8nf4a28Nsan)/G17U(6D<oQGZM^F"W)LSu)GAMs([%N_:b59CpMkVR7^o<Cu
%a5iO&QS")p0G,s;[OcVfR(gW'0*:>BOY&>bHb\"],+f2?*]1>#%O.3HZ,Lodf3Cj_F&fL=iioOKJ4*i#W.(<lfHRNY2.TItSnN$I
%Ik:jW;%RC:=qf<rN&!>nSBR<\GqC480^14N[G$a'*Se&f[AX=Q/X4p*:RGpepk0E&D=SFlH##,_C:_jE%dq-((2N<qBKet&Z"EQl
%c^_BcRipV%;q<-P)$IA&++!Z\l\VcF:nP^-gDusIA@:(uU98%72TW\gZ++Nh#J6pL8Smm\WKqmLeq9o%lcPs$[BG6V>\Ijal(08g
%>)Z\R#iR&:`;#QE*483n:/KGP?b:raQGq1P?3t?Irn.+BVhOTe[,\FDBi,,CV5N[e@NQ&"g;`ME;fL2p9k8t=Kq!5f.1s[DS=>fa
%>M?Min<T'A^bS+bE`tm"7J8lrY<QmpX.01S"2joS\%SJ60qg8]Zp6-L#R*/(:fRZV/Q-8WeLNF-*.&N)5tm1LE>Z$u9A@)ZnNokV
%"Z6GpFn14-N1nkHi-X(Z&)X-nnM17o/b5-VJHd>NM-9Ou-)>Bad2>5aE)JtH#1"iF<'3fsYgJIV%[I[ConM#T>dRo=EOaXe7117S
%NM*#:^4V"nd=Sh@MXs/&Mo[oKLu=sq*>%7CBl/L@T]Ur^Fpo+*"Uj^:?SgnW]4W'9*4-"0:"=)W\3h_(@&KZWmhZ2^&-`/PGH0.8
%QL2s+F.o30C6X8a(QKd$--0`NpG;P[#_RH3He9g8B=frs>_m$DS#p.p<IhR#:'oY-mSMdKlYQ=ON.Z5\4!Z1%Ahhen:-,,n?u>$)
%U<Y_[S=D_JB*$NjDUh09Ms+Hop/)6<n@LZVZkH=P9'a>Q4.OD?k[oTg\.j%k_m^2lYg![PPauW6"H:g?Ag8sUVO@sWUgTW3_tO3>
%U=nMHO"8QCn-!IPbg)qLT4"&jX)1mbqB23&0UKa5bEGD%'XK49_%aF6bg']K3<gVJhqRn`QXu^\DHD-e0JXfq'^W-SbP)d_/6gR^
%\2h'1LN@#2ZRiC)WqgaG=Zd)dF2%.d#(c9<Q,PPa<\dcg;1$21`=&^t6BEH6cYP8"AH\ptEK)cNm"gn'1Wg3(H%J4<B)I?X(+;r*
%eV[+F6p;ke@XE5I\-n]Upf,<j(fDW+k.r<9J97DZLh+=QZL-o7OX8OK)[D@=GJqRV7CN(?iep2?C'oKO`?B!uEUd<_A9UG/HTEQc
%iO+id0K<U0i(P>A#fS""49*PL1$pu_@:p'Q,&DLkq[t<\fopKuP@/']mcDS7$ZLOK@t-(4o$dC?SNmrC9_OS/OhsMD.2BT7Y<IOJ
%dA]_\?u>Oi4Vh:k_"K>M=Cg#S([g(`4U@!"gp'C`EXt(+Nhp+5FVK^H8P`JW1UeJK.$,q8!lVIr/G.I:NeQ)ZJD?PO[N`5Ko$QG.
%PcQLq'SW4I$@a[FKq/en57>nAEcTC03+JRa1\X,F^%;tNm%;98bPeu=qh*<SFmQ?jie/8-]S!h:HpWo^16jE7$EZAcbL9Z]S;Hni
%P8nk+>7A&[TM&=fq/cV34#p'b"A8(<Zji"Fr`o2jcJVK1Vh$3Bn<>\=Uc.]V-%HZX3M7c<c3+Yro5pic]dkpF(;!?S$BIW=g2=]Y
%MsF)?qoDul_^G[;:?$fE@Kf_4p<CXoN>1f[D^LUg$B$5SoCLo&i[T7k*mVSCaTo?I,gH`:V<4&@OH<1el!Wq5"A)1_;]E1bcE?Y5
%Vk]5Ei::@=CteOp!V!A&@;*Ap3VNu;=,k8(;qiL_NNmqsUM;%4]RU(A;PKA4lkClS=P]e_O$-YQ^Qog)mmfY[2m\:1L:sYr2<aJH
%CtS0E*3n:]M;Bc(PEt[6SXVn5QC[N31tA7rK*4Q%hpKkt@qk!b:S]]62d-!-/+%it!sdUj'.E:i#g"-1ES<j_ka#\l5c:@p.6ri]
%5#q$"k/u.AnI,)KY=2Yj1_JL/2H<T*Mm=0`5/Q\3.(uk*"C[\a._'WRA4"[>XATmLfRQ8*3"dWVV;)>K+>;"O&in?A;fc$c=IO$;
%2A>7O]Zqd!1.MNQ'#mpr$RWP0@>H[)&"GSji7LHLq`T+f%q0S,56,Oa(JnoOH,@&;OhuQ/gt`mt/8C]cZh<C6h7dS?V@SMt'\EI&
%M6Q-eaVH>i>mGs:N.OMQq5u9sEG"1uG?GY@#SAINUbQf%=/mOH>^gur/AsmOObT07<%kW!40^W%Lna*54p1?3S!Q'QY>/p_!Bm!]
%oso$IrS51&Zb-IOEf:tJ+m'9nLi\&9ctSTn*li(/kMU7D7*Kk/]Qg)mEPO`IZQ1JQW\/e"'^cRY]^U_",qY+P5/M9WhACiVJU.@>
%_I']a_aeUTJ[uSdW<7p^o!*PP3tPYk'lB\TZD_GOAo_E9mgO`$^([`+YA#lA2H?rE8=]&0WMVZ#F+T!djd4@H6tpV#Tqg3L+F$p0
%SJ1>ROi/,9#mPn&jL9f_9_p;:DTq1R!AYY8^;_jXhd0BA&7Y'FfKgt#BnU4Y"PO=^]C<X]YmqcgKuDcE(%<H*RCiR-Q=pb!&Enm[
%BKq;H19rks4#72iAE4e_s$X;/0Ffmk:X0&7P*2cHc+mH#pZS25A1cf6qC@C%62rH*N*;rC%mnKF(<P5!<R62,L'0?F_j`)(C[FTB
%-V3#=`k^G")U0ce,0:"#C<>I-ZZJ)sh%Pcb(br9++h-RL22?sd0Q,"c.;a`Y$F28"4m$9!%J$[)cV4<=)U,IJ70qgeIeUZIL4&Fg
%O<\o7$6"FN.988PbQ,+/i4,`G)*<R<QsiOIYMob;/>.TjeWVkfI37,3n1#R>h@[7$d-?jWHNF:'+/B!FDihbGbbSeZDBf^T2h(pq
%c6\4ki_<:&TL"g4f;(IuSP=^C%*_B'9SZ]+^Kbr[fZL44;I"V:9E^3kQEh<joa&/j:mn0cpM&d8b^8^K]19^O@^(`d4W(C7%Rbq9
%+F=p7r3Iu=:tn;kBceI+I2o1NBX'ii$b;(%02@Li=1[B_HZY*]a..9iouTA52CIFW`%A1TS$oC#&[`@rU,oP]CkPBsL=V]F#u9_j
%,\C!kga\#Zo@t39q[R3hV(>'*^])$<%og@+fNER*!hCWob(-CmAY*_,?!$)nVqe^S0p1Ibl/3C,I(TMdfU$"ZMhN/j,dd!8&KCks
%)-9Us+eHDZ9oB5Z'8ihdMiGR3K3.KZ=aZD`:mm7GGM?V[)Jo=8\^+ILD.BU7QUPtU/Vm?Wb[TB?*,^#7C$JBD=Wh.t&'nedE=_!8
%M&Mrq6VDd+&=tock2;i@;I%nkQJHVrLZ6a0*m/A!6;P6)Q+:i==)D>'jP-b7obq@phfKCZHu]IbU!6rP2]*h-n/Qaj*jg^f$G+e0
%q^k&nd#?^BlZF:ELU_dmfW+Y7&KMF+f:fq>eueB3Cp:JKe4kH^%S5Y:jDeV=j^tuP;_dU)[9i6;+WlV`mUHc6_VC64AYSP,O9R!H
%nCI2]h8PC8_aEsW:qpoUj7$$"`"5=$k"SQY4m_SP<@@00/<,8e=gPTlSuL.D@2@b.N!hPAQ/`pZ6CAVl:s?BNG)9kMWj8qNJ_3;O
%Me.t>\?0UacSk2X[\Ym1IN_NVRtJdZ&iL=*+YoQFbE;f+;Oqne88FDr:D:(G[S@DU,K\2m^`/:^,Y&?<Mk5"MOOEP?,@'.V?boMI
%Mif,#a2%5)5p8O+Sa;W9(a&B0e\$R0'u_3'r;ke@aD#%,LB<eFR*q9[1bce>]ICeD=n..XL5c6%ENp8PV^=l>RnE/'/l0N!8]Eq^
%GZ[?9jkqaUFa'BJn:EoW![8;Hc_jm.,/-`8F,@S^OHEkh6*M4oW`lU]N-'mer35dQ"*_#Ed*=t8r?Mt!`m5'-F&$W$(%N--rUcZ4
%kQMh4X:F^J/gu];C=_N"I35aGeimNZ=/+7!_'.a%Ir)^PA%Z^C9nJlh%uBe1U`Skb.d#aPVXKnKrOL<Qh=jj1mt)TDZliK&BW)TR
%5?&ca>KBNODadK]o+iUgFm]'mUG`S&3)-g>gY!:P*iot4_uUtM&[T:n,p\hNe0I()A`>0/;d!_R;sW00(X<J4H0qUaV.@Vc6cg`"
%I5mJm.oNqu;_<jo<HMXXI1KdCA@HEIFjW\9i58]8$N\ad(>Ha>9TFit0gh^>bg(-`E)Tp4Iu%,=6]TEQZnNUZN[[F]<MiZO5_gVr
%*!_/3Lsql'%:7rMP[e\Yfe.&e5GlcYWN)A:#tPEJiZj;g,9qu_,D)#MpKZU6k[/[%=+T37No5lK8LbclW&,ie6<[hr5S,26/=XtU
%(9J?$VnRaA?nC;nK6YRKF;'KJ!MIe,O>scO4j8&G*#o`a6V3HHDO3c75KcM%?T`9)`:6UHF8'J_.\TiZ!C+NY&$\P'*OD.2YUc9C
%6oVC,?q+l!V^bdlej6DS/m+]Nm*4^KM98U?:c,pm!*nO=Qi.fMlKL%k:K!FVdW#-"2)r7(]Sj!C"(m@/krYh\+rJGTS]U4lDAe?:
%&W"t1n8JXLE4Q#!g%BB*i(C/d&Q33m$t:eHBP8XO161!9Uq=];TUcXK"E9BSgdMPY!nKS6:nn=>AgHeb-5$!b6dk^&R#V7Reqp3\
%aM_$:hAG1D%*7*B<P/R#WJJH4IF3CnOf\.>cj]HH2H@h0,-Gn:id9JP.;Id)+Vp%@hh$5+?.hA5&.jF]]_L9c@;Q*JS3roMSG:\d
%@P\HM?=Hu!1gdWoWeECn)j[A?!XJSXK2nfV)MV=*1s4/:Jj4??[tVr&!Wl7,57I+>UYJTq%9(4&3gH5pI&NjWR<*L;$D8L,d)?]0
%,feZn-R,k&RD<RUj0ES,Q:X9cX,<5QJl)Vj!3'GY&.c4ok2C(AZ\(2f!#M:PRHZ\n"t7EK2tBjc4X!ZAi0GdYQ6[S`R=JL8O6SfR
%0l#Tn]TI3IX/I#?c/AMW-H<FPAj-P%,5=e0G=K4PGq1'%@I6G'$:[Pk$u\[=W5[fLT9/PF;<=22E@(]kO>9_Tj+&G-7"k<(K3Ka,
%gH=P6EH)\07`"^&kDJtr8\S0/RsQ7k&_u4fQ,1UGDIUlC.B':tNTCq^SGhNL?5lN_m3VrZZDcPTRH.,)E'4GRM&]BsWlsD<#(R#a
%O\@j-_-"1n+Rs97,Q8h=O$1?Nlr'_o%EsThN0q]fV_l;4ZPFjBG1N.W!Lh<p(6e+1ln(YIM-KRh7DW=88WG2E#7@rTK0J7c_9+b)
%5iHKkj/SJ`4(^ChSZ.16RTEfg1%iAjJXO#/FCnihLjOJVHu)Ns#@"'OOpam;@q9nkWbhc0ak:CiR-$`*%*cSN"^Gj'p-`WdK`EY]
%F"'??GaK?%FlM?'4V9EP2u/4CTNmLOQ%H5ui_agQ#4Ii/)I3S'W1CJ?ilEaoVccL#34>)CCkcW&E?K>!(t52hg6so$n/e.7;tBQo
%2KEK480$(n58pLNHqHcG<C1as&lI3G1Kl*[_a0ud]\I+i(r3QN"/sH)i-NX;cFuFRmm30oNZhm7pA@#Srd`+S#[kZ43e6O8^Ng=t
%5o9"DEi!I($1H=l">YSDZkbERe[rkWHe3l#FN5VC<1NGY0ljXLm+t$"+Zl)n?Vn%Y`":*i)+*h'K$h7\f,^:+!ShR"lS\b-br7:g
%TH_8j)nt&c]oCg;*L$o7L.6`]J/4#6Sch@p;DLNKK(js3*O2e?!"$9%,Jfq`'IZ*eJH<hr[OdD!:UdD,%O2e0!!/[W;+O6XN!J5a
%&C8[4gmT/8j.3^gVE.qA%<I9Y="T5ei7Y2V&B(BlVO6ZmHrWn$l01;MUKK:99fPnuc95*J5^Daa[S:`X6*cD9C8t7e:N`0U`4hk2
%"/2[6W._Zhm#5ah,X#Qr.Z9aDrBdH:jqEse;C?`#IOiXbHu(=rr&GI,LYqHV+dQR)J?jO(![Qr\K<,>5o?eE)]GTc3e*5Ql`R.8A
%*-Z6p5(J<_ethU)8F2D$@s]ur>srD_G'(G;//NE'B[T_4F,M7]f-I',/J%.7g`3:#AQ9::_2t.bKnP,9pUn+Z#:3ZMS-Mr$J8*VU
%=^fYnc-53Q+s;8VkgMRmGRd\&EQ%6>:<@XOG2;fM7@Y>+X93V@j>O=*@Be6s;`KZH$:5q)qAuLWo)B,'oNa>;Y0E1!$/9Z20To@_
%GMfA)&h\DkV"]/)\RgO5YgA%2L@VIY!XY)>Dn)F0-(O7I:),?nkgRM!/[tu3C[e7&=6@$gj4hF"K[22fA'0m0:fnl-n:sD4#[kHh
%h]E*s)@_?_P_r@N?;h1r_$]BmN,K787L6/$iX8?)ZUl?-!^N$:0`eNbmrpFo:]dfLj$75(=T?'Ql;9dR3Q_m%H:GEcmHYpE`RdS;
%)SL,#`(_WO4:[lUX>,7$<8s!E!)B2o)"<j@a`F`R;9,p[^Ls5r`7u@GDdFen3us\OkZst;F%I47?_e'b\-daY3p+Fp,JP$19Ec0b
%3$kP*Si&DhKn,&?acOH:q=%cpS*(=r`(UtCO)#?q4EMRPGTqfKQB80RrMY<R:s<`(ZLEg^TJgg8KO?2EL>XsG64.9HhkGOV,.9iF
%WW'RPNOT%eKRbCQ$sJ`.U7\Oa8ejra@<NcNYXkUuh_XR/(G.03L":7dqgofAWD?Ek'g8_BTQ%$E=K8S=.:Z7HM/eR\AoX<WFUVK8
%c-ldUSW)0:!du;lQ$(8EbUH5(0R;B#!3h/H?F+57&.nW[2l<<.LS85Jg86(eMUOjhcDULk#0<;D*[el0Y,-gHV@l$_cH4UBVC_jc
%MPP7PDFV^[U,]8lZ`sU+?HhZiP9CM7JaWD4K)0:IR*aJcgkP-?ATC)\"<N0We0'jWm!YK2fhYgbm]jk7;Crl^OH^kWi8?b*/"PDG
%G:_i>l+(Rd.-3oc,b7q-8G&oUEUDJI-gAG58QPDa'&0-I]0kRM`T`DD")"jnUor]"6?icb+XL2OoU,*!:mAelKU`_N(QC*nV%[YE
%3jUg+Y'+fP-2%qnSd.b?!`pKcZP4;NVk=R:Np1H%VA/nbSHY\R?(9?9`7%#Pggk#CbaGF]d'aL._'7a7c,3.$V@LQ:!:6V5]-hI;
%-)=:>Hk3h5U!"8$c:T-9KYY\SI/dPEB[lO=HGXK4bO-A4'dTSgk$E1`"pRgHK/tV[>^K9>#dP07f.ei&7@&0UmYZSB:i%)*pEUT^
%<ei9DP@SGb[S4VLnkCpeAgMVSVg*LrSr7S8\a+3+@_<unoV]e/ZCt]&Or^B4Cf)lLm,!PSb78_B3ha!)dk1:efOEmUa9*Uf8mp^Y
%F6n@DCB'DqbRAKS[t^C*#,;CA8f-rVJ7IXrm1(Qp*oeLG+=,.\($#bTfo69c*;9Hi\LAr(0`t=E*4p4>%P2KV$'_r)D@kVo1fX@+
%[S*^4GaT3YQ':PNOn!<>"C%FoY$FE!<?X!3U:>t(mQo&$MNpVa)\aufm+WtN.P)cZ\Wa++E<:^nTN+"*Je#Y3SB&6r=WJG9CW&8]
%L)MdZheG9Y(d<ph34X9Il(Wja%7"anX^s/O'Bl=cj&FFM'T[8HA^&D!8/4;KE_6;8,_%@<HNkrHBgNDg.JBnq"qAT2=@nHrl[k!:
%cq#L\c(3tSas5u<BoK/SjY8gVLc,?!W!$4GDZoJcFUL262FX,!64*T)SVi\H;uIAR;rRr//p+6fGR,$(q9d53r2-RSk(qmTJSV-`
%"]sPcj[7I_k=H)dm_C5$j)lnYL'63F/WlS,km.u@o'[^O#*dRSc-[Fr.a8`UkkTs&>"rXo6^?;8B^A%c']3(s[1C"-c4SZ%,Y[M:
%mt@0mCpeRn1U"sL6$++2-MHIn.Qd;p;.0YR3P5OGp@.h`=.OMrg/N8r\=)UL8C#=TqTV<%5cnou@&C>+,Yk.Z<g+cdJL#-U*"!tK
%4dLuY6VuBTS/Afr"rMUBma53/[$Glr;K=Y:bFX?RCMBpMT""q/Brth;7/@a`,>6_/>/G)%d3->8qFIar$%P@h5)#Wir7$W+TuYY2
%DG#rk/ek3hF2A(Z5Vj5e?X'B7`2jR>^;Vf_S.,18YLnFp41Q,H#-Th:"sN7e$^&fCRqq`a-"3n6AKD+upaW;+0>]+M[7Jc(2#_GP
%H4?7!'CGRq%c7j3mMS0\h+N`1a$B,6J7>=glKRXtm6Rc[Sil$%+djqp<XK@*D2Qbr]S>A47$eUs-;9sgmQ7&@rKMU'"0(VYjbZuf
%;`AbS:Nd^SpG1,1>E[cs&#?f=R)u'l+H%,/m4-pnG_P)^K&d`Y(rX*LrZ+JM*_R^ImmU>.^XbB^$$ItE,An$#%kd"_QRnBiY$r2R
%IG$.C2$E9$U+<g.$qgT!M1Ye(+Q:JT&A`8Wc3Ol)F;MMpfFK[4-AE=*/4a%F1-Zp-RWSC49[%tT+ildS.0JLBWiG?VFfKWM_F>%E
%gMNN'iIT4!E.--%oS]'Q<kS`#D.Zrq7?\R+A/l\qjmFCJqngI;rChjQZ,U3hGmQ`6Ap,Pb"8b'.#d@9VZgO*VfL0e"+QB_o3O)dl
%?^=]8RcQ_BUZCG$SEOG8Y(\a#4Chkn+]X(5`*E3OW?aVMDSa#c8X8795=.BN"e3U#)21KW4%K>'(!IEgk<=SQo?9XfLHnQ1SiM.X
%U*2?fk$H!ZJR(c##E2AdH3'Jt4c1$#h*W5*g9!kYo1,[HVY.g.]g4-"B[E(h-K>(Nf<Y%[r+o"!l6Rk4/:=%>?OTe4\(e9:3$\pe
%,F7/uHA2&NMoFCI%HQ;#l?X4rFG4"^;;,!hP^IhFOLS`*CWH#+3*$!bi_?Raj;G3?gg$01m[t6En<(\dMFrZ<,h<Q^KJurp?t7No
%>eHlK%P_DgI(#WD9<rA'm6:($eBP>"aT5J-1r\IfX=/AE'=dq"Ht8-R_(P4(J$",T2?dc\K_:LZo#7"@<C'B?:/>o?'f38HH^(VU
%ZK.;b]X`gCK!Cc0Wti)\,gH4RC]uqDm--KpA7QCPk%S.%C4^n?2_A>b`g,@eZoF0mN'k9l&0?j&#scDic)Y[sUkcb!,Um0T8j2P_
%Oe,0"BmWP[npWVu1mWr/2c!:b]1PWX5A\'Q-E5V>lBWoo;rFLOp6+Y)(spl%E(B/lO=uggpWI+q0Rdp!]u,CN2?N[T(*P!BTuk.-
%NREc.W]'+XY#ii7AaUA)\>95;&V)pB,fBeGN'mu^4N(4#`A_)!KK[O1;Gg\^<Ck<(<5C.%:Ws7R\q^n9Uu\pS4UohlA&sug3ha,L
%Q(rF<OD9G#$05NqTal>UE`_0u`4a9H+A$!f,%7K.-.cON%uD[;H>I"*#9o5IFk/)UAb9CCE>XgijPYU5^5Y*m-&@Q?@^K04WPhfL
%3@dVZ4qR$[;(=mcI`>n&iLHcUGGG;KD^(>`>>!r[)JHi@$,g"\+X%R,G+=4E_,F@u\'(+@\RLts84T>8g2tpS3u,'F'XW_0<o920
%;Z!m<<Hd"lVC;nQrLC^sd7Nb-]lF<X7pkctP[N^P<CP5af^%Lj.N+E7jeTrZh%XomJ><19cf:l*bW#%N;H[#9(-f->+)\#9clf"M
%G;!TAC+d5qhR4sk@7d6l'jfAOKjo/>1+N_PjF:-B!Db$=E#f3ND,hBQ<Nhr=.*Z()o+KBHe4SlCQ%V7n<O8m&b>_e^.j86<H3F/%
%TRH_")eR=QKpB^e;IcDS(4)7&fAa671]b)_af605F<[\gpjJE7EH9F(a7U"Zc7HD<\eOmuTd6V,:)X[T-cChV0T6mk3'&jl$td9r
%apo'EN4P(45[n0`=Hd]rUr)07bF++,fGk+#=pTQhN>/&9=F\F0>ZD2-pA"&<d#Me/a,;8Tb-FEcK'@:@3Me*d0H4"@q=U=Oq\)M\
%>;:8`<R!&,@<Ik[`fugr6P(NF)rqroA-6'oFfu`1gLp%[B8d=h/Zo,Pn&3a^.tH/F0SQ7$8.8DXij"R'@>u#ZG7NW0Z0Rfd!>gWT
%Y0:ei\<-T-WfTu[pk14>)F_%.Z9qn89]RpD)g^5TU:9G#`:GS?nFA+`,YjP:2Hghg)(fiK`",..V>B5W;[N&,OLgrs'ln;)V;SU`
%M``<3\1KQmb70@pTa/U@`U#@1#RA2K)i$EVJu'Wt7W;]u=&KZt>/S>+Ea><ZIn@e.'!\[QND32pXkt=e5QHf4AX4;66q!ZXV&-CS
%`=]PC*218eT#?<O&Dt>^J$14+2R9;4WdBPGY;lh/-j`D;@JPIMnDh,&X<S>Ee'L?]jXBjIC+@17FTj`1\M":06mahn3i>Te0kiYM
%\U(W;/gl6-fr6!SNq3mXh+`pjCPNmVdPq'3fdcS>0V8LdfsBd2!7?Em(If*LJ[dAnEGB;4'_d^-ZYD#ObaU@8Q(6#7(qI>[J>oS!
%__Wu<ECRVhnhFGf,#e^gF*h`oa?X!Mkb0p5?H%6@Mm<'^=]I<6dS*ji(8]S]XVVq4ql).[LtVCYV0VKJdCqGSrlqq=$PJAe1-q#3
%-Q3I.dJA1?iU@].md8Z?@<5?Y!$Hk'Ye;gs7#nk/\iV/?jSq_9(lCMqM=1kYODLq3n4e5>,6rjlTYB]hq?plu;H.J*<+bl0Yiok;
%$7^BM>ObVoW<4lmb"*enp]?._M&IIrGbER7WL-PK/97/;iSk>BLbD5jlJ&j(fmI=h5la<A1LTU;Cdp"CEj.aS\3kZ0C@8uS;i8ZZ
%<+]]+A!*QWCL.+#h78nS&*!8K&_J@U2T:Ug@Lp9,`eGlp9)-1ekbiG^<?1PuB*(Gn;ufn1\6juSV?45q()1=udFCAsD6g'g;0^-O
%Hh.E&Eu-XU,I,d37r^!p#'h(76mbTQL$2g,$lmYd<4-a=6eldRWi`fHUL5[T4J:U\O+E\_F)p&^g$E7f/SL&fXf`oN;Z\#1XT'Ah
%n(K&-D57Ph=+pQ?IrU/7L.N-JW7<88A37G:CagY,*(=\6:lL,rERo3i)%J66J,P:Qnq*m5DR*r4md<rUGJ3>_'FH5gM7c$o"_chc
%i\^'pFV`(*:7B]YXStU(Q.*>.6np<I<5FH$?Uhs9XQ\&-oR"$p_EI5<\&7_Qir"ClQpXA?bJU[^U`360ciF,ZOl+"N:POF$">g=I
%a\Hkcr[+j]0-M^+@ddIuj,E*B.n._kSnXG;+(,]e-DL&XE6Ak>Js4,u^'uKW3R2#j;"-uLU9YP=M5#!a#m-3`fRWj_7<'>ub!Bt(
%,!_ng"&TOl&skoKV-YDlLWIb0M7*GF8eg_GSu<8UL:BEM;_?UZ&D+_=;1)3HU0CHq.pW"?1'KaLaeG8&C)2t>A!RBF,\te2Oi%B0
%n%u><p8$or75NROj1JpmBS+%=-OSU;jN/U%0bbPi22)]K,Ur@c<(Iftg*6J]el:st,Y?WT_^p8".&ko[n[V>A*op7RL.,W@a9@P(
%U#@1T$O7]gK7t<^p1T\6SC&FcX::Gui`@=.$%Q3ihhH`,b"s=8Q]`bZ(R2gsaLDEq(^6ai+!n6/-\<*?I<(K)K9$8i$E#%&;2f;a
%-l8T)bZ,.F8kb@@mD/D`.$SrHdN[lu'_"h$(KTridNJi-N!A,2#WENe.Yu+IV7.#S2MckpK4^chc9reY\Cm6G8-L%:+p/^7%'b1@
%S2_@VTJ,9H)u;t/<qC?jYDgc,GXqpfk]!Q4b<iHb)Nk47]gbRp`U925;)aGRjs>4KrKeio11h2_gd]Rp#>QlQASA9r]a]09PV9Z"
%kamO".&alj2n.j\_s#8X^.;Lt-670l53OefmsI;&UjW6WCXB;n^fDJF-OY/u=9SW#TQ1>Ol3qn\1>Aq"EP\:nM%T`K$4iA#Y],K.
%@MmLGr%L,(q]1VXWkeBZm(K6G1VbG9\d)d!5u^=0Y[*V@"*0YFk6SDLps2f:Q":k1#0tcF4[dQS999B<E1T,;eeoa@0P.CZHiS9m
%OeuS@.$CeA-ST]_"k$g-MDn**5_7o61se9=I#2)U6]\E_U]CPSJ@(APBRtSKHuBXo@r;j\$\TiN.nC*#:nl6)!S%ijBUiaToF;B)
%+NkUrR%gB:;jm0-3*.IB6)\7i"Y[]-S-A\m$A\93``-3*`%T!t5kqGm`+:t8P.W[t:h'DjP2d!5(rAb_J^kBS[^+/)OR%hY@F(-c
%'Ccm6TKn.XAJ-Ill6OHA?VZVc2J5WL:r&[$HOFl1B0^Elkf,GbG$e:dCiUp930m;O6)_)jAaN;]*/R@a6q%r(N3an<B'Tm-M*uUO
%8R/r6U5$)ir0U(g3OA:VonMr[LefD;l0i$n-tm-b(fqeJX<Wgu@RVFB<e]QOrRC@D's<>5P]d'7Y1\qV\14D<+]F+r?n+qW&Kf)g
%Su!T?G)T=r"`GuA6BOd7/i:YF>Z4BE6k-FuHN=RMfO&T*n?s>`5m=]0J6Ega2$'15NMIR(/d>F)]B!C+VDD+?`"hmhkOf787`qto
%7-H!;pne<'(ti;S0+)VM;+;&9j`i/!Ee4UqP0mAL3f,3$&;O#s\OJUE*lTHWKS[8E$!A^R-ZUF"&"-N0##M3E?u\ra>Fc&KUPKY0
%'QHA0HI%#E\2js6JisFMG;qJ&aE_;97"Q?0OuA0H/G,P)`6mmZ+/CBtS.?SW%uAG-!*WerfhmAX'qZB&@gP0?7C9O$Zq.",-UE)I
%Sg'TC/4"eV8%qMnlkqf+![o7+(GH8Y`'plK\EleC!^oMf2^h5CU68`H@]OoWqn-fGDg36)XCr;<+L8O$.k41HMTjSd5_Q4][%gQX
%Qr?VeKM4f<!8uO-MQi<hi3h-tDBChO89PFD64$@"R?P@[$]]&:6M_t!Pi<]SS<R\)JHI=,gk+6G!E^?dQ3dLMC'$tW#%u&53XsId
%lqu\`.@d==A%;!,4G=f1P;F7*3Y&bj<WRTr:*tX5r"M!(/_(oG"9]dU`.;fk;)c[4aAJ+*;Ab&B3!fg'i.`Ws0r3JW`bf5l=N3?>
%UY(^8l]:lf.I-a:#28_OgOpmp5R2ipb3[8_(P.du;#jZ!8-'$$\EslYa,uiS_8L?]$Y,`",T:UWOd#MW$JBL#@uiU$WgP`X)DXOn
%KcqUG'MRGEOE-=-AM=t7J]ic@'hEu:=;3dG8O@V5,%8+pl=":O2r=`&P=-$5_YVhOY`iF!a?*k"^E9>`VG>>Yc,ofOBp49b:53h.
%puSHca9IkHSp;1+,AhD^K\t+h$^s'^aFMU,JXKG[C(2`8&XKtn)D`d_;YSh?3ORU?/f(4B$BR7ZG"Q$XN]@\R1n!?jj#P/j3&(,)
%pVei0.p'\/osZ+<.n[6:R$5&eL0$etVolk6n3,2#bdHGliKm&SJf&r^PSht3I!MV^ju0Sh"I':=3MAY=;J1_i:5D^\no*1B0k`9l
%Z/8B;39Re?a"EDc2Jph&A4B*,Va-Rr]oo;?jV5T?p]ECN,DIAIo+-"N,WnI)F#'hKUg?m:/Z7BD\F^NE*75M8Y+_/V)IKKb[%&W3
%q4Ni2pm(#mje.TCa"+&OJ0gt0jn(#j5g@ZuPJB$o=?2eW6?XBNS<V&<fFAps(OkW43`LA?R"%IQ-O[Iq)g@fmWac_gM@Gn*@0<:a
%WM5X+2*ULWlZ*gpq^ff&W%pAV7!LruC;T$OTj0DP%%nS2cN8.h<$WZHo"L-U9o3uYN#$MU7/;.(?pLr2M$fn0`?m6IGqj"'V@UN/
%B#s&[()#Y`G@5I>1TE]$,Bf^O&OmjN=E=6i!7)Zk@T5<-`?_A,YmD/.I$>Q!F%#Sf`BgSUjFj<p3jR_,dl^IWD$EKo<j%-nB]M^m
%$^*"@6S]"%0\GFpmX:084bcFd3["n\/nj<6@@,+FNSHhjFrCrcHHI@aIh[h]":g0g1T\5?g9cHoP9(3-F9Nm:PmK(i)&E#rea<m(
%S8,'C4,"kK72+>HAl.P^#&pI?L(f7S(lI8J%?g3@_]gH`+FFl\*5u6)SNb'efGP=t-tOA-Lg975.1S?aU*S.R%>C=T&pfmROK28k
%&EI?O.(^o03Dnag<<.%pOVGohLB^Mk8W$/XRGCg\SF&Rn5#/MhJ`Ec(emf;1`sd<b'P9=h'RID=L8?WcECsY/m,&4r4A.7Y_];OJ
%8nNZ:DCO^(f^U4QV#i_R!%+pR.I&knQuHc".Hl"S_k1Cu-c+t'b]+gT?tI@\,u5)M'FWp1(514+G_BbIOtaioLJ,QW$7qT[Zaaog
%Cn+2tfO$G=EUlL@DaCYJ.:g\`N7:m>=6g9/4DL%K,)o)I6Q+61V1^0%2!m9_j:dAFUZi_e,P2ML?QgiX6n!q5Dal)GL6NLj(l'n.
%o/T2)1@fs'"dpKlPA5o];LicXB6%%;i/<e<#DDXc]XZ9N<Jj.KjK^R\nHZ@0\(OAa3lqTI0:tOg;]\bH7kO^4n1s?3'ju"o"i*K<
%\DdiAA$Ft^TmB;(6]kSq6I%j88S8+!Y@<C<qk,\o;E2fZ%VZALSGY%m5"\7uf#XFVi/)6kiAmDfH$iEh8(#7"91t!c:(BQXZHSu[
%PF)@Z2k3>p72@7"3=7flLCm;`Tk5_46m+YG5fAMp0EkA`EJgYb!n<3+%%8f-o84[I#u^hD9a3KQn>$gqKb$t96]gHoiCOE@.<mi2
%P@m/]LG:PU6,XX_3-&2Q(FmMbUf4SJ8:\SY^HD'2FPLgR<Uq.fS:ER!P+\K,.>l_nL)E`c]g!*.:';q@(GN--DrN:[_hA35`=%J]
%V@j((?bsScabc-+VHDg<0ZMHS.Qf1/YTeckVss:VT^\oM3f4SGhDb`7'q"K`GOZ(fS3d;X(p"k=;<$+8,<RB#r!Xc3B_[KPKN"#e
%;6Cu`KVN:a6pu-IE)5.FNh9hF)_T`Ukhu*#>cp58NqPOEJjP*R8LYmh9T[))B9/3sD8>'4.,_LZ"7Q=B_,Sgr1DfVRUOm,u^+"&P
%VX!u38'Ke>SKc$&-CE`<nPY,Fc^MbmJDc(T%HhuoP+gXh^^'Cd)&i8mDWj(tpqX\%*=I6+?l)65-S`iIiIKB7af/MH"!1=QQfIp&
%nM@I0Gm4=V@J&]4Hc?%-,[8hB^diD.bRqW\ECVJY3#&$Gr_5ThIkeS&]gT:Jpc"WJHjmV(7ZIa\KDlX=THSetcE$ELhaX!lIN)9q
%^IL#%.$urpOfid-%l9'=f:%O]D33YG0L>UpU&odj97BmRDr$^8\F1#<!HFrLhkY'3,#5tg#M;0Ce[l(5;BHl2`aI\_k7E%Hq]6;D
%)sS?opAe;hKVo+0pCm,p$2CmCI1t0L?c"V/D\?!S!!@2eRNQGafXFobnJTn:l0NAP.+Its)4(H%kR>;7&6<R3hir1=.&s`YLkO9`
%<h+*NWFo%t)9t04:os@=cM%<\ILWal-raJ3'OV.:*<81DJUG[Rk^,=H[N,'5+I%>8na-Lb_'$IEkO]0Mpa0UmnP<)6D[L8GoU4]c
%#;6R-L%coVFUn/9U3h6h7B#/$?A_/j[Pnd@>gK(V]f7ASfpfh`Z:6nu_DmC3Ckh7MZ6Vqj$7HASjt"aoH'#hsc#km6oerh%H;h`d
%;QLV_)rF5_[[n37N#40(b?h7mM-,Mr9eE#IbRhI?=r8"$S)P]T5H]7f1][oWl"Q_Sl`[IdH&#7aLOseU=Pab8S)WYI^_Fq\Z9s-S
%Y8H'ub_56+TY-tjKF'LdhL^?u)IWj3h5LJ;SOTm6/!BW/6+i-@`0^[fE/N`$"d`s/nj\EWdM<S>)tAp/UR33Me(M\`1F-mRaOlo<
%jA"sc7GF\1hOl(/5k2@0[falX8eE0f2u>HXDq])fWF?BM0'jcIhY:@[/UEe7i>3!,2'?gpjn&mlaMq]m:^,.,m6KNYa?\mF!dQ"C
%'TOCAnch?W&SU`,!%sBOdoh46Yu'G)j1I'!YkN2YDa`.VfN<+*&Q;WKg2XdQ`!Q57"JCf2#`u3h38TJ&"o,4XGZ2ftUI<CH]FhNs
%i66f5m/XPQ1^_(hV@CZr`%rBO"Ddn_@D%EsYR#mOAuqskY/,?E-hXeS`gbtafSQR]hM?Q6V0dsW9k4J*<#fhpaoQuqE4eKPSt?%/
%j%6&s.$-A9A=tV!Dkb&"56pbVM#hEsEP*b"*9i'0jGaEp\5K4ihPe5ka,6u&A/8YsV'(&IPlliK;^?9:bJ@Gb5i-#1TO#J*VW*J<
%p2^;q4XSG?()1\o.]J&F;a7$]KCBosNa*1/@EsLn=[B]7-4!YAK6U<-'Foh+G`PV(9bkManAbTYD@#*0G6QL2,'[$_%OZN0J2a3E
%!a"%@pt\p1*BD=Nhb=5C8/:c7H7fQ?G6dR`UL7Qg$5=gh*>*[md+p)]cS2J"k\a)KM`6?\@Y9mF1[K#%!m\okk0Vpoi-[M8H6et$
%"60`+2sS@pDUDn)M&HM4)g2\UL/#u&g5S/a!q'Qch%"uLNmlLRR#o23.VLcu15R#/*OM<Pp4Cek7<(E);@"`bj090*"F0nS[%#.,
%(G;*2+AfTi`U!dpdCq\S2os(];Ts$k!TaV%Z^W?COIfs*PA(u!P$rMYI01SsMV1^&&rbj"AiFa"&=BSmh3<W0^h=)/NK;!qVc2)_
%OGcM)Z(]&M$.)]%DBs0dka8&e,E9\C^KF5YP!PqCh4S^ibpdBdJne.,8l<2t+q!gh$JS;,(C-,I@(SGCQJSXGh.W/Y>uYRdM^rM%
%g^W4tb?PBp\&IAWE&SB'^i+GPDPD10Wo/&QJ<V"lm088[MG8Z6@H(dAnt9BkRX(gHh(W)bhp$\`TiN=i7=i(-'%n!G^tkY;!5fM^
%S&kpk''O4T`X0<eh+\$T^bLK07X5q@="&/L.h2XC/^RFm"5S1bDQa#,V<fUC0EmRB'Y560NWO'Ak\c'G$f:u*2^6cIL^8#[.!uf-
%aP@tsF"X_#Y],E$!I*Rp%/MX]mcL0lccNP'GU/'='Fj!m"c_Z:"*[+]A0cXjm\\;7X9M&[B![;h`(iXha>h'4`hUC:8%JU5\XQ;>
%=jTnP\_C7Q)?K8<6V@\*\/WGU;8H$(9A<EKRT&-^#`J%b=+utn?_m2:OLn)8i9X^NImf_=-c?(r)fU!rSBW(a)jY%fc6:!Z[,GC)
%2;iA=[#"8e\/T-lL^[2>DH);M\0_7EL?O\u"uG1TO<H)'E&U^Me:G4RC(1i9Jf+*P3=U_u9s.%4/l^nL#Ik=E=&`mqE#4)'2ad!;
%3?^1-gU4j@onqO!'FqaI+a4S[<rpfY>c9r':`+43;rDbe,'VL/\a5\-GE\)PN?85W9eJkg8F3kBE/>c-96%QMj8jX-+h<I0W?891
%GE]k**Q18j,V;b6'B&9u2,.eBgJ-0`/75o6LqoZPK%cc*%qY2j5o+s2@<Q9p:"h-+f$tbF)l;dh"q(N\.RDVp@U4b+N%2*1.=aA#
%=@l,[.^^&;'0!:9,L"NG4&sY=X5*W-_+jE$SAI2'l7PZ65HG`tbo9KgrgprJ)j*Ft99r+P"mI?Z%\HdCLi+?$$dL*sVe"eA5,ehD
%7,UCc;h/b3NZG/%cqV1u#=S*mlQBD]#1$S^I%$dN'+,3cM\L,J_L,cWcm^k3d$Q'4mpMag!EMTSjt9Eu/#U2<7)Z?0>](`Ra\mYa
%J.0SXgtbi<bKp@ki$0P$)>FUTPa_pa1RqloB9?=*P+-9h5U0?$m\6V(K#gZJFatE45jk]gPSK7K5['<?0SABi<FF#_.R;<'ZsLSY
%)hH7K1G%sqRXm_DPMMQU[g=sI@?Jld\.P0e,(G3^9horA!XK2nI9dP/S=sns7//`b&FQX!d#,Y6"%(#T%"]G9,,V=Fh"7S^%2=>^
%#S?@#ptH,eB^jctWf3dLDbp8pi7h;M=g>Go3jBB4gUP-0H(1HV3R:iY[u44D0KAI"V(u\fgGMXF]epa3;`)j<$:dd$%_3$n;,)QB
%:PkMe/r87^6X=;SgJouB'l]Yj3oD/\]PYM#a0dXSgE$SS3%EW?l.p<V$eVodSmcJ[W^(D75*"3f7KQd/j38!FHW9nlL"RfDe3k'I
%#snL''JSl-gI,Wo8<%qO'hT.,D.m#YTA>Df;`GQ>^(b1K.)cR)2]$Y12Id%LQu0EIq=[XPm4ereK;*1G@YCj<"5.RU"@S0!Ch$lJ
%a9o3^#_]4>fKFG5"A[0H6+2>q:^+%mX%GFTf00;i`i:4A6pS2c4l@tmODRf2.sME,NCom*$T>/ON6!:u).`W<jE+j/eV=:\LA;Ep
%@Pa*_O:d;B+PU^u%&H=+_q`=e5GfRXY_OC-8O9e!RH5FjZ;##"fJ#+?D>FI,H)VY8>sVMMD*I6[e<B)s?nYBrL9V0pArt5!RT9-R
%Rn!Y:`\=iX_D&4rZ&SZbn<Fm02U.I2lkEou[NWOt.E",9KH(U`K@oV_Y=2I<IYHpf&DIWZ;;"Ij+grb/J_3GGB/o`%@[ed%E18"e
%""j\e\KYiO^n2#"!+R6MUbLHH$t5WK0F'on_D]7=3CR$][V;-iF*iYG9t>QM:K*'d8m5_lHc\c"\VeiU?^p'8ZoA%b"qnbcpp];m
%H.I%Kkh<6_JX\1&2XEp>dSP1*:sqD92H(8RM6KtOKoC&+f>]n_+Rp.PRn]UZ%u'WDL4O3$L9Ea@`Bg*rCf<5($rr1g>mkGp#-X$Q
%,0qss*F5-arNNI>2\?4E_HWk`g-mb?B>E4h"P6UXm@mb?$EIJ)'MVH48N#L2n7$8a$9"uQg4WRaCN]o]?)5Q/+_m@<.HCQ/9n7&a
%!DW'jW?b<*e8Vpc&c+5<)22+N:sR^d0h'P<82T7).%5;hC:t04D1JRiVn,60B<18A8D;S>"@bJRO*68P%4i40ej_=s_A*6j!pQF9
%NArW)7*!ZO+:8r%'geDfKeU(dJp,Y2]bu>Y0]kh76\MY,ckjK_'g=\pNes4BB2b`Fk626>2?ie!q-1\AUP;+ZYd5c@$)fB^SW32X
%1/8+(K^0W0@'_:HR8GR>2*3O+O@!QC>(nN^).GL$3<Mqfn0uWiVE"gnVFW7mI[S&a-cnS-[-T(2QR@gpDK?;QD$?7?.2rU!1g^:+
%VU-,=3G1>)1^Pd%,r""D9<0R82C4`1Z)]<EG#EDh"j&)3^j-C4DP)PN`#VPqZK\6;>so:1PNL5,Chf+a]K&58M>X=1XSCF)4R@$@
%a/4s"$4)k&3qfLeSq:I58aA#:2YNLa&9s(l9gR3`i`0Z._S_$M6]nVSR2M5cHh=X3S<;f?O5b[D=DT2FlT-RT*%ZWf:fqQ,JJ]jp
%"fB-.3!7.&7B9i&./'T!Vi$<oWo\X9M+oTD7R5)X"]2-%NRNXI'VrlNLVsB72@kM[G/,GjBL.b;UYru40X6Hs![U,eZ%9XnS.W`Y
%G#m@0L5A(X;*_CC_RN\TMX?oZ!7!m8!AoD9;c%<*^S:cjEJ\s+5fC/:M@FP;!f)A:_s*-G:1:CL8t+RRp^=uKPK5IL@Gm0'4cY&k
%0MH9a)F+=8Ku>;E_[/eUO,bE>&H#Q9LeS"*Gt5ZfVWZk`S&&MXF]b`Q5f4WHdTSB.fkq\V)AY420`oct[37hT!n^Z'YU:L).3(7Q
%MHDqY2H2^E/l46<Qr>le[NetnW64Vf!eu]NL"NZ7+e2%OXZ:lo?'U;$%14>8(<pUaP&N2\_aXt@QPpVnCs9PbFK'e!)eB5.9i!N>
%N.PKe0h$?l"2cJ].rqr@'F^JP>l%U>Y_b]?DCYh,L<(tYf97If''OjLWE@dUEP]&J)%%<7Y])BLClAf3:nY%`Q'bDsCo"gr,u:5=
%6&ec9K)s8R!cB8[fO0J*_3mSt6QB+]CXtflVmdTX2GlH6@0VDp4W;kT'FWY=-STM<167#(9(csrfMJYtbT.%[P[R=7;(-7(1SZYW
%'FGe6(uUr5'K.cu0)Hf"fDq\)EnsKLr"R>i8MU@%%5>@S1("r'YZJcN)&P8@?=8*n0Ph;P5[S.VNgCTFHO>I$mSd6kJ\n:?'e[t3
%:tX9P5M?MQ)q^H1T-tC3r2^a;,$^=*+/[]CiXMoN<FkL\HK.mRJqQiZ-h!cI&iQiEMubJ#fHcZd,+qcbA;+Fgg'e=XEMH"\Ts,-@
%a9PV9YX(Q%g'e=Xj$??%:tQ1'#.3ElKlrRFhAI"cD"<IB4sIDUM3ar6f[)r&l[9+oc&TpiF=:tLJ.X=8$CgBk![0=Q_BuS$PbG<i
%5NBQd'K.AD1!QAqM9JeS!elVWr'^_q)kB&VFRDuX:lH7V7^5E3b-4K8;L#g40LNaLO9H,`?GQgb7Ce-ZMLu;6E7gt#Z@U@@HI^1Q
%%XUO1_I7Yo_I5eXjA5o/_q+3:8&KM%Bu6Q`KGK)o"pMku+&be)oS?:>7hHc0$'65BC)5i;_\L;H?rJ%]%`=VJ&T#];IQk`e7N8;M
%1E^LoZ)0k)$A?[4&h.,&FpG="<@JU<JZo0K3ku1V5hL$>!AHllY]1F9g0e*a.'dN\8D$>OE9o%e2CrD>.%)5e_p/D3#)0nuKl8r*
%_?PRd+Jquf=9\KI'abm4Gcl6B:tT;Ri7um$'K.)PU7aen_@JY^M\ONH/]CAGm2QHPYpWj.@"9hRL%n\"Cm\R+"+GuY9k<1l)\t=[
%==hG."pNtN1G!A7L^53D_M/X,<RMTi)g7[DX?g8^!qoM*7#YuYLZR<bYi2utY_sqEFsedS2QjeLNu\QHhlVXG#),c^hK'$X9b\*)
%;CH@g6-.Uc$6*M,R6k=<\m]_%$QCg^>aArip4q;G6*S$)hq+:LN.GET,NM;#mU4[$N>'Jk0Pof.,CEBDY"@UQZL8bA)et_/:e-K^
%;1)=fb`K%j<PZ=Fogm5j@oGS<!^;.KJM06`eJnfUi&eQ9_-k`4UOn`(?tUoD2[@1E@WjI7lmrodK>=XAF"p2#Y$uK0'Pg;,n+bL7
%\)7\o]#)TKI>fn=%K!_/50Y)ERe#SPYpJ&SfIt>soJHf^^`#C(^/c@c6b]Fj1GCloPP1.X4N"iZ+sUq3lns'[L>"qsiPQSO)WnGo
%Hm+-T-Gh1ME>]pQKQJr]GPF1+M3IqVJCdc]"Bj\A`_gmB.GcqYBE5A?iN<oGb2BFT('pP+>uSNTR2cq,)A1:@KIG>-iDZl;>_f+Q
%VncOBXl-9/fC3ScFUdE#4QGcF'9$_LHU(_N`OHD0Gqt#^-6bRcMJsRm<)F71aW#t\hD9[t9)fcWLUSV6#&=CJPpj`Youh"+eo;B`
%FiCeDd;TL7g,a!tl3u@74@X=BCJ@Y]JCIM"CT@;_;9i"?ZY0IGC/*"TTis1QWFOTZArtRXC,$&T4<pCnnspjaTJZla@KXpFXJs8a
%p:S7F;j\$^91?06?T?!Q)43:G["3:;8:rMtH)3LOoE.O<Ah_f31^Xg;ekdRTO=GuB4bc!V1CS%Si)kjAP),mO+tA1%`<U]<,hrF%
%Btb"E/bmj%U.K11L\V>:+Xk,eKs-f$3<QHS+@B\K&q$kg[A_lT6WXp9R@T4?D*S+/>b)UnE/%SVdPuf#&*TfPP?UkaK-D&S:oc&-
%'N_#\<YL3Cn.QPC3XMV/%'ge=25Ibg@WbQc0EnO)!h##0Gh#2N#/7rS'9E[)IYq0#DfZ+imJH-VMihIKP=Ppl>(ru2)gra*RTq2D
%pF/ip_$&`D.84lG&>;*VFg0kb!`Da\.#_ji(tHE^6PS2fUY8P9'V_$%HnC4KO9c,)R3>N7/IA'MeHG(@?D.)CL<i&9Vl#\>::uf:
%,\i&AMnuB@QGYf%VY1odW6j&T(/E;:M`GB=7@iC8PHPg)L>l)E!@89oQJ-,Ve/9`YP62YX^d+lomOuDP:>fLFOOOSAEe6hV(C*(L
%$:mng)]m0?*d+2^^EN=K8n+[aO;9ZfZ<"fG5!u(diJ_n0"/ClS#Mu\`$`CqG5uG,GFKDQRYW'G@XfXk<&i2ViTrubYKM#;a7h;J^
%ThnfU0<^")'.+*%ALIb*'g5A*W7<*,L-I7E>6[;t[,?V1:O>gFS"iblc6hf6dh5Vof[Fe"4Fj#XUIFc1l#=h2A[p3r5FeP;Fkg]R
%L'&3F_G8SB((H!/%6,PI6QL80LiB2XdpAjRKq(UZ^L1mti\Y6EA^3Gm4@T*CP.L4)ZJ0[sM<cVG["PJ1g2qqK_0*!H!VliFYCTEc
%Aqrt^$8r?P42fVufJEY-#GkOM('7gM+Yk@"_Gq6aD>KsArlZeq`0qQ>Fb2Ll`OBJfdu"TI=OYA">l"kDRd:Upa!jR.";\jSV?LWo
%BccULB:9r1+NGnS1gts>o2SVaM,:!:=-&L\,Ih,TPN*Gk>m`;\mSYW5e3eGCjr0/KSjHf#;$AqJ$<F3SdGUk%'.>(K!l6hk%PBn*
%2Fu&sV2:'l&]L%W[5<e.9,#N%EbB"*d\E#KOpWa7l"FlPP\0Omp]P66d^;[jD2"7XOssjRd0/h;CkWb*F:m^EULqV42,%^/bTNaI
%C5C=!]LOPN`JLJ-A8'CI4D>-NAda_tWtWub7[*7)VdRqF2(WH,@?7f`8Jag.R3>.#KQU7ABtC68P))$8OX>Z\@%9cn=tO&XUl,FS
%.:dNli_H%Q8/&iV(L^n]l)I`''LA25OT?^HL3-.QQD>)?+GAM^UgYfuBam>=.U8:t7oq,HVteZ<5G-CCHo,8@ZI<(*UFEPa5#23?
%VAN3Yb8GK1iKG^41sdo7NYCL;.VR@Ri+U9aiZb_J&dc+uXhmO@\+*q1n#4X,qTqO'nQbaA),4MoJ7k?;7ZZ#ERDe'7cOE]]!K9JL
%U/,QLd=d;[)k+W4;euI^W!HQ`^9.iZ@*qssD\XajCuUt\/4e/FTTm>6-s@e2%4@SKL"'F_M&la(+jXSkkmSb]:f3rW9a+FVk\3O-
%,J'n)=<XCh]>k<i>.MNj+.@e*)1l&]Ta@i\5,P#;QRLdO1N[;f:&m2N;TYCl:8"9m<aWj(A8$!l!R=\qU$4MO1^+],$sHAE$4BS"
%YpuaF$qrYe!18@)PEQINR57P#S2dFm0VM(a#4AFA65s?f$JhZ_$_7G_atSZD4a*,RV4c17hggV4McrK)?.lcK$6;VHA"A6='0]K\
%NsU:UktO?c6tfJs]U3!:0:9+%'&sB3RZt9,KaMhfL]E!G"p[kq\,_ps1h]3qi_fdY#$hq1HiaMC-,e!2TV:H^f<LtL.iZ>D'K!`f
%k;j6_C;tu2%Ga%22'?S\ZN4.&h`OMgR))$$!D)T6'PPAJ6:"[AJHdCC(chrp\n#pRMp#H($Ne!JgU["WqtC%Ss&8^\pG^Ep-P-n&
%^AH+@bu\bTpMI!-Sd>;J`=M>fPJ;MCd9g5=DjC@rm-`-aQe'c,s)rI)G(&n.Ps>(h=FL2=8&OWH+$]bg%K:P]#sGBhZi04))st[G
%>lAs@?iP=P4`:jZqt7uO4c-o/9a!jXC""?U5)J4oUn7q_FADHB_+XP&l/_Ao7!ni$7eL?i06hZo5t;VnE'QRdT'fM5?%qdZ)S^1$
%!WAdar&is\A6GX?G9..aZ1an(cCI/eK_%IifQb-;V8IjM28qt?3Z0E)a)O"2LK)*L@ls2V2?F8^DF</mX%brp*PC;o7S_rZe!He&
%f1%,$+eBNB9]U+\d3TK%LA$^r::Kk:.^)*\4F)D::IF2EE(('/!(9?@',*N7U*(Y?KjP2],)C1AS`jJ>?K8ktp6Z:%N$![j$ns0e
%1!AQJjf35e6oR.m7eanWT@e5eS"&otS$G9DFFnI?X@AK>:g//<\jWM'Oi(SS_oND'6;NR_1S*n19!%kM$Et3g`BQ'(LY`&76\O0j
%/[Wod9$F>q;jbjJhXe.X+h5$ETl]N5%ccL(5-d2ZmuGIX%!ZiWfP-rk/'#\omdsGS,L)e:>3)fJmHmRU6"mb1M:A[hqoFnniOGj>
%2gO;g;]$o@NpL:3BG/A]N"*VC*"ae(18<,jNL[P']%G%O]gLF`iZRQuhX>PlTK$F8nGL#dPrL/."bQFXT*^=0.Zmk3V?Q]ZRYQ;=
%`*@6lhS,0u(hf=oDPjh(9a=tjKgSR_BjiZ'DA5Q''SsrjpU/N_,0gFS\>IAcW_V87LR!iodK>P_C`&X2E&-BEJjiJjKfHY`V(i#*
%*\]R5#8lo[jVlB8ate"VFs?cRb_>rf</_hc!mfWr^-7cD3MMX"la>0S;`YQJQq6gVL>q9QB/Y81/00KT'0Yk+_MpqGK8CgGH"YSD
%Q;LK.$Qi5d?#L_:FOY(Z[8BF?6W$(Uk2SGWgHpicF6':S2OT$\^^G-B:p,Rj-u;$!fM0f';pYY>\RF8)3dIiscA`/Q%,kp:Q@cJh
%j^1Af7\n$`q7n[XSSm\h^Hk\;pkt::Gcc)9F[64X5L[F<+g?n.Td1XT>%!\+::,Z%"C7m+3Uo?]P&\jW+W:t$P\n%Kp#ehPAW#uL
%8>i8V#o@I5A)e:"$B:66@1uos4[eDO.@3n$!rio-e,K6H_ZT%ZIaTDZJ)j]Em\.^'HSC2<an!:T,4)Ug^:]uN11S=X]`ie0ZA9\;
%4MsZ:#<QZGc'>"d%qFK'JFOGe*4<X#:I7``[;g$3@CJEoI#F1o\a?5t9J`5-7j^\APXrVC6;1DJ%lT8ZgJP]jEE27gZpO$-]@Fop
%9c8Uj$mQ!r)M:9ZF2,%lp4KK_=LN\lD&gU($UioAR@&r4Xc9"b0<o@'J"eAu.iH/6/0i/4Pmrm6K*BUfp/utV"14;.lqB@7;2*P`
%7Vt5I_YoT%Z"X@(P>?rn/,fo2kg!DS[*4+R$"V%\Fiu"V+NU5)TL(l+p8$fCmu/FCnTs]Ee*/oRb,+&&]AEOC[#_!K8n;.uDWtfV
%'G8m34J+0o`Y:q2/IX>M++ip+YRfgt<HTaVB9eh)>_AQP9%bMj*fY;A5$Q('`0*/S"<s:V.sDaGR(NfIr5K%:&$Ms=#WT5k%CS<.
%H4lYWlc2ao>&rtadK_]jYCfd)>UJ>F.AE;$?t5ti*G:O;cFUANV^n5#Q%_G[4Ip/O[48HH-ibQ=U-6<#oUp3'6:=Bd,plp0d[skc
%flXR98B>#&6n\A2ER^\h,H.4KWMnU>mOBC6oR[U;:C<$^VA&%"XEUrfN\S4Wa.S<H]M>ZR18lZsn5pXm0YKg3Vs$I:?(p:T7Fm"Z
%Q&0HDn\,t/$8!G\$N-eB#9[;m&&JiHFp7A`k-Np;CI:(LI!iGX\8M`Al.alZE[2P0Z06BQ@^5m%F_-=FqNl!'Skb>gGpPM6&DEsh
%VdquE-)8A;a%*r+.-0sB;&RhEFp8r,ZNGd+kotugkH2c^7D5bDU7`UL)@s9c[`sl++N`^!XqB"<@<PscEIcJh:j=<RV?sK+Y\$3C
%n^2-iifmB)Z'8KITMmC'e&GYbc72#jlb"0X8A`\b`8%.7+d,I9pT#6\mf4e$/??*lklu;`Y^OQ+T)]E(9bW#P>B5FS,0$.63i-@h
%<l@>S!PiWq]i((r*s#rrE"@shQKOVTHl!UP,XZR5:;:ViFi(K9<oMQl4:#Ri$oPKGF=#R>)je%;]V+ieGGhoT.ijc29Fn.?;0,WO
%3r>.1-KC`b2Em/.b%ZsDN]X<qW9j<%_!s`:";1&F<$Q9ghuh",b=P<T1:$^D:+)PB88^2LO?2QWIt@i`*-H1Ep)ZohZr(@!hCrrD
%4?tK/)kYjH7aA3srCp])9Z1urU_M^aK@jme?.UpC%Nb>Q2k?ah],I]QP;1Rg.lE88c'[AHCXHIt#W#$@RG[```uPLgEUVug2Vb"k
%HrYeFg8Iq8L^Om<#%AV6d5mlO7](8ql7(+Kn%iib`\cp?X7Z_[@j*1ahk8iiWYO&ddT@hZfT#6<ZF?6]/Jjn\]d_PirA]+2]W''P
%^bg%#5P]Df]#hu1A(:/pa0IPIW\_KOpT>[<\;B-WSO5=WQM@W/fGb@X=lU2SXNlPHhTep0bp/0n57D#UQArWK%*o>O,BJ+G7PHuW
%Dgp&sfpufmR-&HD@[.G?BTp_DDf.U5fP1sJ?E@R?D&g?5CbX?-AJsL[`tm_?EZD[56n]@4lTuDeLe3>P>&:&GZ>GJGkVMc*[]ZWJ
%RGHeabf'3_im`4%=\Ue;Lg[G@Z3hfS;Ht>OCS^KCS^HbG=-WI?M4X"mW$Y"jI3NLU3eiiM'k$Tu0JQSh[,BXW^[>?9P?T!C[0^Ys
%RW3>260;/2Lm788I&E/BcBCgSFuk0?GW>%6KA:(m4Q(]J%:l=]<>G+e)#QWjWpIR1lb9\W==6kQoOBg%_&[+#<[iLig;m^P]:"8b
%:6gj0$bi)Z[.&0Y2td<;a`3\gj@G&AV.[Fa^g0jgJjeg].1(D>q/.H%Hf60D&T6sf^)J@n(>bjO-Y_0md3G9J^hL-Q8nX!5kchl2
%dITh`jpujlZb;T4>GEpbmVE;lUCR&t;?.aO]:S'YBFugXop5ti2:H?k<CK[FC%'\,d%P2%!<&"U/pXjEBJsV@rY4<>-s:\0FHtEc
%l=F/2on51\Y+(\YZt2*^)1^tkWhO.U[KrH.&L%Mpo`.!#Y1<Wr4*'(hD:O+'3(RcD'W/38pMJhb-^e6QNt'JK!HY8_Ulp?OKSNC*
%F,eUMg&/aZmA5K(>BJoDmP#laV4**%3dkY,)T>%_PdG6?BN]/\&,Wb9HHt>O2l:iA_3(da`=ONO4.*k*ZaU9QI=po5dqub9E,s9F
%?dRQOR%hI\K-<oa,Q"lVETg.EJp]=r4GoY)j]Y(@*\$bUO1MY@6^p0BT$<jr7Hbj<7I,an33G.LTmo*^nV4mlI'%MO0T*,cXaOM@
%,=K7g9'd1hBe`0N2.N2]%uQu<Rg1S/[sraL?J$#;L+MVuWkZ(QI'+O9_59`A*=-G5fdrh>?5l%.A$^Q:&eUidLm;hr7'&iN-W4kY
%X9Ys`B&M5uCKhMk*tH+V8%$^=Wapf9XD=XW$&n,s3Ro%WgC98E9[lTKBG`,nr*[[(WrK"tY53V`TARNuQmpf:Y0XnAAR7hu:!BWG
%_O\h;0:'o+(?S=3S8@W&?cJ3;(h,>kG2GeE"G/74'd=F$p(st73<jC5Tqg@5U6MH?>B*jY0kTrQ[T*^9NC0r=6&FkeMkpV"qqC7U
%'KTNV.e24V%43G0n\f_Zeq;VbLo;sW_K[,\i+0,q>pVc$='mQ.Sn2`F=AF(bTGF;5E=:dE\(1$peOedug,d^XHDbN\R#VWLg>)@/
%mO3BLm(8N==+iQ31ON/U-V>C[0i@e]Y!C(eD-,Afi8R.bW.FoP&'$@E?EuO4Ug)UC@V8^bk[t7f,=UkN[spI"$qb%,:(fH_).`O0
%#Gl*4;A`q@(5)cR^MsIdBdj=[2nnGu>Uqgr1S*cm)%7)tCKK@>9LM+&AW3pO::,X%p7B(2SIibP-TcJ"#eIsA(`F@<F*Gu]4sZur
%Sg._,K,GM0;2Ar9*[j>F`-TKc3Wrf*[ol1efm?,ob24?rbiHm3Tc'%\8@+6W=X2NjG2<Ngb.\<j"Utn/qt>6.827hX&22k:(\1B.
%&"'NnOjc5`Fs3";>3W':,.Ls%Tep6HOb,3V0YK;`R4f>l_ui7FMmQ.9R3u4q7RRR%7SBCi#n_Hg\2K,8EWNuu#%h\6mJ3YP0@DNE
%MhL0)>b$U*B-M:@Ql+)h8+gf,2TE_[`&O]cCEq"ujcZM[0N!*%oI6A#@";N0Wkfit<O*uV1bXusD#9tGYc1]PldDi%L9(D^e`]_$
%b<"G(#>jMlPRUQHWS4dTSO6jo58?SF(9pFcM!SOPb`%lK:F6_!5V`(NOn8+1kW&Jn+hLDXRKCkk?'WIG)V:t:!?<?i6DdJ\dqRjn
%f%6`H+)MFMSq0k[)`Y.V'NLKX1lf.u8R!'CRG]?R*Wft*Z6%ukWs*Q2#l"H7]a,=7pG3Dhl9"]d/_72iTRZAQA/tiZchYMD;QO*u
%C4KTuO`C'pD[I<BD7COQ8-p_=A?.;rNm"g@Jc4_UgW4sVjn',tOGL<i$'?69Cf:V'8O-5>WgA)S2jm/KD*'cT&s:Ff9E`3Zc`V0m
%-fL)%AC0Mi.7U<lh`1HFeAd\b"`0TnTl?5ETn3HVD%SsrI-s:@*R'aV4ZKiRpjpa6TR!)g86@c]J;An(E4mOEa%6MUZD2E#E+9sp
%42mp4O!8>sUP*(B4d;E-#4mIb]I9^/Ea7:d)`=K$Y7m%[LsbojGCKW\grV7U6n_AHY6SCIXKh&%/>/6Y!Oa=^4c+@g-'14ekRt`J
%1LoNfVh@Vj*Dg`U3I[A:,_YUuUN.O2pd?*d3-GfTAWrIVb_7r*'7J9UVT=?/@;==YL'kSlPBWEOOuQr7_c8CQ_n_'Vk,42N'W.4s
%L1oE<AH!]M-&B]<a\X0?$b>bCkECU4:t'-Ti.b1,HU!=CZjB[b$*(S0'6V!)[h/cMJTVC[Tl3jK;(rnM$@0.doF=\oOlsa4/-3.h
%2,_7b/=ctm;P;?Ji`9l4cs8S$`A,FH6(!/m2ER>`.T2p.^TNo0RinNaTGilHE+qH87?n&#d;'8k,Jcc4l6MHXb$.@knUrN?/H2X:
%^%g*#dkD")MJ=%?#4sG<S<KO$Zh5X'UB0kWnmSOn(-0up*J;MH_uTZ5)"eq?^qA%37*J-SR*`OWf)mBt0X:.ig$/Pk-)._]%6+^;
%,me$dltufjB2T;Tk8@\pLgHnoYg`S6SDS!2EUM4MN/E]/R$`S!dbM-V95e\i0!ZWW\\A1bj-^ajI[o[s4oe4Q-lp*+HYRXP*6"I>
%8/oeu7JZLG%"p#;X$!Blg%V(8=b=-/&@jN@m7*K`UbjEM\I+D'%L.hR#Z&F!*2Uk!O2*dC1eA0N?jgT8TVuco",4W@dDNV/0aa&\
%'mZkGa$FQbSH;[nR0Z"f[nTVE7F_Ru9AY`C#A!`e4-e,_&;_iL\!\%gn:QH,PTa6L#h:JF;6E3W/N0-71Q%&!6$.BE^!/i%=r)1.
%Q4PZp>r48RH+R4'WmB6^;I)&8U'jpP[:j2cO\g_l=gFK\#jUMNl,dCY@eHb@\_'\@o:<?=Ue*MGg7JX(1+*h&7EVL5&#0K]oPs6n
%^*hs>"5k"<5&AnAj[UKJoh(K,MJ<]Oe2Pp\mINmo.$/7s`*e_8"J?FaRX@hh-"5$P*Cr'TFluQ-ZTpREEhVQg[1r]pE"NduC$I<i
%DPW''\M--#3r,[G:ICGmTX#*np)"V9/4^FnfjHRVYkSBd$qmUaLp_dh@uX\<%NP[IQ@9!J_Fk,?*)YA!U]Hj8C)g3C:YcgE3k_l#
%IPn)nc,=F-'d:CQFoW0hAJpB`@T&5tR*9(Il6QUD);.d_+CPgI/)W/p'dt;>afr<qj<S*ZYar`k3SGc9E30J=*,8Mi3[,j3;f1Dt
%rIYAm@5'^ZF)2@#4/Yh!^Y=j`*Eg<G19h.O.QD#UCT(H=eMP]AWX6coRuK^-_l1JI#(ied:L)1=UlAhHTRJ$I'3X.P-AZeqTAX<Z
%0J.gWm6hpgLTYfYpsG6G,NJpl=>d(n@^g_XYq16[Jacq1RG%P;%)ND+4<H8^6!&+N'%:5[Neg8>:gEb'<7^]PZ1'_[(sdfC)D<$Q
%qUCrTlnm4VpSP0a<'h.REg.c7`*m*dpE<g11:,3$R<_.fPOJjA;&O565UcctK#s7BGkk\%>!n#^1[Pat6r?^[!L[8u_]f>&BWj.*
%LnjD^H1\PFFA6$da?WZ@@)$=u+HlQ#kWtM6cs=Rscad%L/99it1ON$.6.Nf5/a*9BKmGuC^rbo"IE*U+9ZC?O5>%@9i4OM0KZ\$?
%.U5Eu]TFcT1'Vg='AY%p7p-I%#kMH*?C<Bd?n\1j/14D\0R`#F6bH2bYHLmE9%#c,3C6J3;0bVAoHjQC&ZiYM/U??Zl7CQB!Zt)\
%FB4K)kQp/,LteZ,'m?k!Zd*9n)r3)6pS@Y#=K)QPKTM\0SBF4H&HVU))TP\A1V1]=p9OK!7RuNR.;'fPdA3nIPJUn2iZ6Yb'=jtO
%mU#Q1%CW%B+M2bM89f`qr&/T*7_NY8]3BT(.`T;4Cd"RDr'npS^'hGW1S1.l7.L=Ok964(d461UlXdHFS!rTk@BZc[ZNAuJ6IBq?
%>Yjq-]4@U8HmYEF+7SM8c)Th1[:>:K:Qr0lMKSR.(/X%TM*m?+ElON;<*eM'R=j=#AH4k'`/AHX+Xjmq&OJ1V9+Q]%Cl.eL75J[p
%._+b[<)',%;t``=a.U.@MLDqbeKD4bP5ZFg\M9)rW'.=HhJlfrWQi\%+CF\GqbW^,R??9)ZenBg:]%kD.'c+,([NQ7aU9h[j2`Nh
%9),=_TY^^gC:oN3aQ..VeB!eG<$E^2c0Zb*m@]Sm^m$l[]#k7Up5"QXauL,RT;k`oe*m5F1>]iV,cS@fe9i(jmkI\Q63G-0Rc>#\
%Oa'5&aWf90j=ihSoBPO?4b4)!Mf;FK&kG@o#A/8q$)QZ)%LX)Eg;[QU8bGo<R\#%(.,tYn"t!7+BMk^Zd9V$<,#E?G;[Yf3pg%2g
%6jPZlk4\ldZNb:iNLPe'Rpgl8fXUkoM8OZ'EQ79VV[o:4<1m4Q`ACrF"Y(ODJA/0s866"@QS6o'p*JDA8[UL;7E^*P;?`t-E=Q+j
%pV?VKYrV>k0'fMDK7b+bs71?k&3'8a&(-Q\r"u?$:Lca;1^#XprH3-&D"Peaj(aRe\aQjO%63mF_Ei)pm_KGAd'Ep*+cKT]L/9#0
%.OL;N?."<oq?fem@M+sL`*.7j+Z_bP2/:\c$@MM$BXWGgN$JThBA-`'F7o58/0Z%n7;+gIRNY+r98fsjkj6dJ;,_KI\nsTTV`+eG
%4f:c13](5l#bUj[,HEg1JCiD;StQP)0$B6p+_j#\QE3_d3<P%n;=h_c*u6p<Zq]r97M19OGW)"\;E4bE%Y4&8b0eHs\8lV&>';#O
%G&$Yc>CooU<3Q+6QQ[?sEm8rj)/G.s6rr"]7[A@lL1_Gca]a=oV`'NcKb)$De/Pj\j<jO,\/p-XI_SbEKiflANQmUhME3/'K-i1E
%$<kk!k]J4CEl^00rZ+L%P+WnSijAoe@X=>f[E:hE8`VmFcSuK6Wc%me=[G>H4^qVW8)7,jU<nnh?uJpu_6PPoo]D&)$:fb4.hQ[5
%8CSQ<R)Jb2[&QMZO"??\R`B_+^QACCUf?'",3FT9W/&5QFC1)q7/n[V(96Y?-mOadAhu4\0>*l%GbiSNcmPr8Zil.'F;q,cEQ3NN
%i#\C7Hk8I+pLs\'d`.*pkO1+M9f&5fd6"RCBSGB\gFWB'WjTiL_?ct.DV?gG':dYdY\Al:]@S)F7P@EpCe<>qUN2*P0Uek2`*i'!
%!\j:D1ft[3O\AGlntVQb.+YsW)>9<l\&;mR$740?IhFT[NeuVKTr5m>p3jU+W;$XC29Y[&`ZPlG6%hnicfT.7@nhUle!Zh]5Uru@
%5n[cM!UaQH*]WolI0Fos2:OKI&4Ndp^k0XR&+:jWUJOcQNs,mE5@FY,W@"-729%]#\k'A,m%tf87^AK)mYXt/"p.HKJ]*-G8u?_2
%'pn0;)4C(m4/d`L?I^)J3hu@%WjpH=gW3@^SHA1T'h"f5Y7nb6`l+<&dLq-=',uGO6TggB-:lB!*jLCs;KPpgrF?,NC]RhZ"J^do
%d9&st))c#HcVA(X/A-rfHnhK6O`pO.>C]5j5UYp*Pgk+:`h^&:+fGoC0iLPr>VZg"ULJ0PXYa%.0?Xf`dpk7l.#dSnjd$[)mig,4
%^S7N%;DYNHcqTHV5GN^CO<^a)Df%=f=DT-89L?L6$(RC?0ku^f@eQ4GUqN0A(WA'K/Pb)I#U[cpPSjSTCm*1,V%lWgN!rb2oPAe5
%.!?uu.Ttdb`FmghXXZDZ]#Qn$0]:G4gLKYmGIaaa4tu>aFeDi`c5t;7%>bE7']mh``3MDm83"tl-rh6+d7X]=^uZB(be2XT>hZT:
%P'L%\E-:>U[VG@9HDh"fORkKtrc1DS(O[;3N0.k\)g"^'n-^#0g$!.A(b-(n2<-3c+10*(_gJ_&"Go1s"<5s=aFc5o8-#P[mku<u
%-__O15r4EfDkqoM'JrFo=SPgrk,4q1CeKtOj!735:q*`fZ;VH*W]suBlJD7P%TLSN97Z"":^BopF0@Xud_Ll`rkailRG9(\9iE1F
%1#IKEfIkP%>Qa2[.;9K6PnhV3;)0P-bB,u+9mfnQ,:ME+k-QIJ3>ML!:6&hd<8AC<&++3`$p0I$6N#Am"_uFIk0AUK$m@,\=;2u)
%_;)Y;;:R4@;rjGV`eH#S0c3e]mJ/>BP09R[,Y:?u=>2F9&d8ITj*4#1%=9Qf_Bt\<]YO_>itkZn1[5.FH1t940Nead3;-7A#Q_@,
%O,t`X<#m;'4_jbB@98;TdX:UR&CHGp,`pct#Y#97Q/+E=;0D,rLoY$S8X%.#Q@]oO.1m$(WcY.e*[X@>C<=Rcc3i8+&$sZ!<RFbZ
%<2l1BYuua70i8%2L8R2241g=shK-1J2)S*W@)[b38PKCS8=/N<7(UqPR#HnhAcC(uQmCokN0dZsp[Hpl4@rUaJ1c!WnU6b!5\RCW
%cC6jBnYl#qgTDm7@GMVu0o9K\N?5.EKnJd(QH(jmLT_Zr1oR/ojsi"r1:^S%ahS&_U]WB:.Befc@WQU!E#WDh_R?6W3c>Z$Uuohm
%VV%sg/bFeO%LQd1,r@QA*"C5;<E@YV^c*ubY`2Bu,`RR(baDBUf0O&N#WIH\I5N*)h\AO!OtN1^D7DRIqrb*!#G?a,ZB`?07)^iR
%fg<)Jkoie%DZP=+A"2OQ$k/A4FDs>[$/_[\ft`-5,Qj_cag\aE5I$6^DH920.u?pEbGOpcX5uW5F-[<AK],[K*?%sY-juPel+egA
%p>_qN(,]3Z2#C<>;M48a9m'H^T"t3,q3soX0=O56<2b+3:mQtoL[r/7;;h+2VY\$eTU\ECV5WLK,=??9mpT&<Y*!<aN5bEl5&[9:
%5!AYu/C(+,B!C+VEN4*i<uX,5eED_K'DBCWJ5Wqr%5Xj.hDgs>)2Ehjg/8O"`60fJ/[\)<$jKI)#Hl5npRWh%<=K89q-hS!=[^EJ
%&Lg*n".=2:cm*0Bh$qM.`BR0F<fk92@CDF.YZ1j1nC%k,6kFFtl\Wb'\7F;=1GgSO;@O8?CYI8tWUd(OCFYUseU!(RX/P$Od3p%$
%Ja.&>"W!)KFW5'XWX.L(YUIG!n7X."eRUrT>Y'riR6?@82.:,k/J>kCL(L[i<iL'^G7-4L7P#l#%g$WB/W9IiI"tS!;foWZ>&.,U
%D;S$C-JM%IdB+Xg>jr<GasS3j'+:,GXOM6aM(%:f"hLMK!1D;bPU]fu1dQTQK%fKDP7ZJ';0&5M@F"3VUXWWd0#ua`9Us?OH<8HE
%f1cRRBd-BPRg2Yf1m=\%1oKr6\=9HWH*!l(gN?6sn'8!DL"-RJHmOg_2\n>/i+M`";4Iu2N)2f#X;9,Q=KXAS:CB,TKANLUrM!DO
%VT;IU*N4!>)3#iP7JYLQo-?Ofe[I7r[34b>)_&hG-+P3)Vm71c9SQ4P2#(HPPD#Q1/8Bl"Yl'5A\1\TsG,*&X$R!pN9hKtFKVXCE
%QQ!VuN0NmUK"6F7K*a8pq)9LG"Ep3urA]d[XsT9/q4L#`^I"8rW#/L\aLs!)PG=Tm80e48UKnltrF9:q7!U2!oA`bB7?'-g0+3LS
%%7)5Di6epp3H#T6pAD3W:*M\$2nQ).KO``[`'D@^eD(T5^pP\cJMei&#%r3W5#6L_@Kmh=m.KYH,GQm_8#&%Z@koJ2`r1_VXHGe>
%2hcRIC,P4Ca;:Oi086Yu`KMj4ea=7L`D<q<_^ka[dMT6<b&0*5A7Q?4ERgdD=\YZi]`Vp+q-Zakb*quUlfk3&$%*OZV)c.m1]n;U
%Lg;WLWT9.]o53GIdt:K9[TY,Gf0W9PRmuM/S?Bp!iaep>jmZSZ8+i&o@Z=0^IM1j*l5&r"q*@Yd;4DZ-<t1Mg\opiA;K3&^G!rgS
%e&bTKOXaV`%Y>O&WF/r3\kPSdYKi<_4Zg<P#6A&lTa_c2>mE!6_sLTV+^3Ih&rfkl;S<pc$,\(RW+_ulJg1uXN&<)$j@%`p<C1gW
%&EG0)hInh)BIPi=p+0qcP^#>`ja3Uq5d^EMA@YMnpdrua1A75%c1<I9]NR-Aj6Y8rdp'c!6WKkn7e/i'PlV/SRg+5fq^#V$ZY>JW
%`?MccdN0t?'Rm>?-OZLIdCkFZ8`QuHL*eW8BG/Kf3MAu<h$>7_O/-\rVd\L3Ln^7Mb_YUL00RoI)!j3G+\n5=o\(lg0V+RMgXT9/
%?omf]&giLfR&`]b8N\4H?<'3Bmk1WG39hD+bfCL3;)!<0EN6$@c8#lkYk_gN@QTbY$iC/qP$SAd4VCeHP)ai=orogBRX43JIK@^/
%!n'qFK>2t,$O&.S?pgl!6Z*X.OQJ63$A#5JU^t&2$(M\?ES`'Ofh5(`Gi\IU`hnng9Ap9fE,DpXHY;9,_,I0h?!a;<-2tR\ekfuu
%1+:4fR(A&FR)#jIamN-m.I#BK,r_\lnhD%q#uiA1Y,XI8M(HJ2(eM3s`gU2Nm#`7`;;!bb,c(Uh#tMYL;RhA%DB!&N7P,@qcgb:B
%lGQGK/I-S7NJ2+[ME*[8OF88T.U@AMZ*tc2loZ1Q:N>MpMhY\?e-4,(]k7&6MJc9)K2i\[*X%Wl,-/7ccV,rSAY9GYo>Su]#-K8i
%+&/oA175pE4N%'QK.EBjeV%t.?a>nrN)O]&7\"GX_NrP2$::u%LD0&@F8&*_Z^s2:Joa#nf]g]UO)JT9EjZm_!:pTIP)6B@'Z`Zp
%/];qc_o1-fP+F@%C*OC^`Ed6f(!9<VetFgu>jQ@lJ_O]@N7pR`E19P[Ul#hIU0T"SLmJV3Q)n=B;B9j`GjR=h9,X\Jl0)\*R4F!m
%8qF#[V\(7(#B$',VrH1T":cPp'b;W$[Y<64S13tf.2ISp'5OOU:Jg+^f%4o3'Ve6=?m:"&B1X8!)3&\!15l'QHB;gcPPd$Y8kA!6
%Rj*tbA<E.Es2^@`oo(.Zr]UsbT<grCnY)ps.TV9E-LO2E9A2\mb'?=tHC,FTPK)]`W6QF9'XhVsHgd4$Eg"M)konAYZ'1Z6M/#I+
%)iNg_jCfCEag1AV</oZg`lVPYQ.MHDPGk>]BU,BpIcoto6?`-aT25tQ.8si_btJ,#E\IG+)3"+mHj$G;L5qNarWnAQQ3t^q]MM90
%gr/KUaJ30m8F?Vk3ML,o()*mm.q35hRKZ?t)C#Pt--Kc2iVfArhA4(]TFk*qTWsl=?Hn2!G:C\=X1N$*/EGK<6(XW`J7k$6o+94/
%"P>JIon>HbfY>=uaIr#gM,Ke:+X`*C.W?MN5NGKh:3EQk9opu*;/%fn#^>Q"aW8CZi=J`mh(VBE(i'abjbaCB>"3c0<?his3_>1j
%j*)tWVFaB?aV[IbDTsGdJa4&k=`3h`+kZ!,Ld,UH0-WT`4'g*Q60_!D`'=,P,nRX]K%IjrLbf7CU.WoY(#fXZ>d%h]%nFEf)e=)^
%,0$o#>`o&B*7XDUadsWTLC7lN`7/RnPtCmg)V)'i=@a.UlEu5$-FclSXG*+98<3@nMP9%!dH?_i;&+6D_%c&/Q]rBr<:6#`82&,#
%XR4lg6H2$F8enZ?1a"Y<WjDId\,98V5-!M+i\q(JZr!QeiJOoUJ!u6a`&MABiesNGCr8?mi(#U>^HRINmmi"n=<#0"'Vj-]EIraD
%JZSX##S[t^;OeK0K5YDg#,!@V"$)`!2qki]`:D\?/q_uS4>j$_"+2iT8rk<l$^`;MP:=]%%K*ZA3YP/_GQDq`%<t:rf+/,5O#g1H
%-%$m1H:okaEWD3C@+c6jC)+f>!\tA$_7aPgK!fhNbGHC*<?##EaLa,T)(%=A%u8_+4d]*rZ,Y9$)i.:Je<-Pgj2"W*Efn9^MX&Tr
%S(oM2'&@?;4=iG)!^Tf\mPkL1h]V^0%#W4Ee&/Fb5IS%IVpH=JA#l_XJEFp0`>TR1ro"/rU1AD,9d4SIT7dkI.="6JFUr/79+M#.
%HTEQNd2YVdaJ`n*8SZA"nb9#.$/=X11H.Upmcd2MG,%0hBFZr^dbZaVn,[qZ>RVCTTNIVRD=$%[nHC!CiFIP(==m_/$G93X7'c#>
%JIEmb==)1o"APY!8/=t7l)>dsJ5Wnigo0HM8W*(uAu])X^iW3X=j_J5?>N7o;+)E0n(@I%0_-YfaD9V%:>n)%+Ia'RFbWT4O[,6#
%CO'0BcfI,`=bog]5/$#N!ejSe:OP_ZTM-RLUP=A1(n0dR]]BXJLNYGl;k<Z"UIHdsdk1AbPsK.h2>O,?@g+)L4nU,$l-!565'7dO
%#)cCiZ"\BPBj*\EfV'mcL'Q)Q2q35Nbc+5RB'@\qrUa)/%K9.<#[AlcePSZBl!8EVZ849n-*Uu5,@Ch9^g#A$Qu:<L2i^$mZY8Bl
%ad@%YC`HXY0\&!J_=b<=]#J$%/)!P40kl*?7*eb#:Y%Y`%dW;X!F85kp?@kZ:;<I%[XuG.?SIl?<+@f@BVr=J#^WWud>5;A?`F4M
%BGdB-W6DtC[ltYHa[@No"_gSDq3XuTX"J?3D1RO]EM/SAc0:OC3o$VXX]IC1BUH^=&4ih4oc03V\Y_7eb.^F&G%TtFDIO`B6]6d]
%A?Wp;ZU0g2`6.Eo3@NFYHrn8r!+^MU(8,-)(Mf3oRETTOF.8f)>4RuM&l$G(]GAP%-DJWT=F"PB>i;YRLt1E*rRT's3d-qP<?c_^
%>3WgK';;@Onp=r6M)4O-0=J:pQI?g$6q1E#II,MTWkC`6fRlmlC=r9"5"P%g6d[_1[J)n5SP>@l)?gWrEFR>'d0Fem_IIV$FRuS7
%aW@2'g5sg5,Mpl0)+B=;`Vem0h`*2j;6*luF&rd,4t(LZ-/;_D$AG(6e<\Q8h:N\;TFe2]o8]u=XH(lM).Q?>_hA(30i8BCBc:Wi
%XTqTaSpCDY%"[$)WGpn_\"Bb9rBChlrL;.5<58>/c1>RlDdL3VlKnNLipK:7cRs[V]U@5uqmW&aZg3P4/!*h!?cDZZa2@1`;A?nE
%n`,\ei.$NI>7LAR[m/9Ds(q`3mmd1o'j#lkrR_&i<mTMfhgXCY=BueFe]A#X?PLqlYX;ssi!X*Xh+67$qfP7Zrj)J=l+iN19*Ld=
%Fq-#8>luBdZiQ=ESpVoFHhp!)04Y)6'QX$:=mn(D4\.<JaEp:Fcqi9XKe]8JKA&`Y:Ql@mL`_mO5\aH^5dVhP)Mg.*WB8MKgKl;"
%re1:j,=N!a7S9kHU8JMk<:[qh%ZEh<*S(EmJ,7,;oL0">e9NanTgS3@l%JUInna^QO=!b5S,kMaMIXnbL>)p#;T:-,i0*;B:"LYO
%2Ef`hZ(e"@q!.OG`qE9B"B=[#I7TffEoVfoT$h!.A<mZPo+sW]6*+_Rko]D6p6Y"5P!uC@;n%5BLe`dMD&?5<\=_Qnd<OF133+77
%cec9nhV\3'SF&ngE]SK?.IgstFJf60oZf&URqs3U\A<*T`[6#p&O2m2oPSXsP4#c3@UWt;5@($o[Dpmq>H@/`q+"VXc3F.+]g%jU
%9[3r!M&9fe)&`3h69ebNcaP/H5Gm[#G1-:MD4JYdTud.b/NEYu`f6&Bn<"^fSbqDCTFc<B@enQ#HXXo)kgIcl$VtQ9XK#c][jQG2
%GT2gdlY=VBgd"@o=8s<RB`,geD30X1P?%#r@^I<(0'E`iA$hHir(N.:FKh"S7)@ip3O9D1`f_S<[F7q'kU7,&_K8QGXn5/%Ei&O)
%DPL"aqm6+$Xj+ataVbA#.U8T`Ve==8DX5d*8gc4&4T#WBkk!-/m5&ZcQCl:.D(e!kjRl_)]C"WprKri0?/J+YnBl\#pU5M>n<MUD
%*FdfE*/IA(a$rjp-b;M6D=mX'2h$?9L?DU0^RD7T(4!(SNbrTE"%SfdRH[?L]Ti6:K1feL3Q\<oQ6(nfacg5rEPGFG"NBk9Xgb2D
%c;-XA]H?;5^\R<HcgU;:\3.O@]Y->;qe>^F7/JRk"ASTmT<(6Tk5Of>k(hK*T0<)Lr;=h4f=1KeeG,6Xn#5J`oNucn<k.cuRIsao
%No$t%"37QVNG/h,2`ZMS*e)cS^?()RFPA+9IeT2`S$1Phmb@W14:sVl_<G;jroc#=n2E;q+2@X/J,I4G<U8r1O$9t$dmQCup<TXd
%\UApXJ'[<QQ9Tf+qX$MNYAW&9T<nXU?%2h9ro,eIgHO0Dfm9.ZQ^:e"mk4B^psl9l]".9ZV#S%+l.#t:pffZc^R9JrBqp0J?+lA$
%0/"r-G^7'#*Sp^.ejc;AJ%+%Yq=4%OrQ>ANO`n@*bjG0)I;s`9m.S]Ko/=g*\,UjMb[+\PrU&b<rq1m=c!'RNQ:i"[VZi:[BtpRM
%D=OK%puh(BnG/]jqu#a0bHpZm];K]FI)0'ddI3B\Gi*c*rL:FfhcsIBS6rr+>OYS[r#4/^:+#&Z4cc'kf3b-,TDdeZ$/_+.hV"<D
%3i$sqlhe$?(Ors,pj[59C+`p=C[H='\XV>lmP"%T\(soF$,/m@^Kt4u>.@`$>tp?>f=NDRGObOSeIn!3)_PYZgW&U:2Wf5@],,sF
%(Xnb1q<_O<-]<"joBmp8I<BORG(4kJ?r;7!rSD+P2qrT;ln5&6]:-f"[r:][0E-3?p?Lc$q2uUIRaB@+bK9/EX4u6mpWJT?#9!d,
%hffUhdk<=[X?J_GEdKd:UFLIejc6@rm7().*`]`eG@sWI\baM:jm0s]bUlrI"'"CuQlV3ugejD"l>fC#m\n;LFh(#GbJhMub:T1.
%J`q,Mr$0R0Q;(ig24\@rs1#T8k2k:fgE2KZ/%o>`rr'.SbJ'u;YOA*5EUf)_$3+*M1f'V0C0oe)^"IR-*O+&ka0R_.?XKD\4PN'3
%rK`ohCq&S#39'NMZG\&1=E68^hr3Cum!.k[pUYeCiq::h>>E':TCjil[t?g)$`&I-Y:e,X>b0]Agto]X5J(((/e9&WRB/P&TA]2<
%q<I\9ik6\k+5,0I(PI4LIWP8Cm/5k4o<YJD#2ORr?-V\mF>O=\4hn\A^&*j4?Z&rDB*-FUbN?n5N]d8Q9nQ3WQZ'='Q[]*)h`#H,
%oZ6_jn,=C.Zf"d[cOSK6[qlu[Y19F=ZWOB]mo%1#lLsf2rcFQ^lZXFg(uNERG:MtT+GHCWk7W#86c\&1"r:Psa")13r94*l*;d_V
%(0h5she#!</d=2eR;0'9%UmI!_X?QjA0&,'F#F94hs7M"j8OI^%/9,Vo)@bD`VgE6lp9Hdmr=QXrN5hqrT-+=naF4R]A..>3F7`$
%W<BtsV>!eq3rXMHpVR/_ab,h$Q63KS\K2i7'ZVVoA!G<Zl*s4tjn%fZfQa]8#O]:UF28ji5EtEnp@de)h8RA5/F`Kup,FDnF@"4K
%h:_DC2bT1"2VcjB5/4`k>N3gf-p@0AKpjT\_nVq/mH\#+C&[Y=jNZGk="eKqDLYc-"mr!%Eb&[,cc.".oD1^$=Sk.G,P1ajkm!1l
%QLlmOmfi]V_`?U9aO9i[#Q0+I?lrfdr1]aimq7&7E9dO:pFhV[O4jL/Qeh]?'(+dg/tN613L#Hb^]=d+?XRn<H$ORSF)glt`RVs'
%10sJ0,J2ZE?S=*'^]43Q5-h6bD2YZfEkA0I(V@r&=MtpI5>L?<Ld']LfN*cKgFS`9U"hP5>eYZ0F`r4RI;s?.kHe4pH0&;'[I+h*
%E">:adIImeCA$MWDYDD#:Dj+:,*?WX]fo;?cf5ene..8Sm/UP`6h.Z"b.7HAgR,p.o=%/(Z1"T#8S[rbidEA^l5\*K?SIng*hMq3
%@@5>ubH%[TTjUs6>L8koRfu_NUI%UlhVnO,:2&@+=4=amJC(l8B$[)VhI$7ldCcRFY%Dg!H#mu6+O%Kte`VFr>nS_OBtC?:/R[km
%p!T3,"d=3*U<VH]C6E;#O?I`a/jW7l<kFg?g!u-r5:r6p];G#BmM9,Bgi@&me:Qq4:K?5:\0\Z@c8O>W%JP%&IXA]Y;W*JFgZp0[
%.[oa(ZT,S-]O#\mrpE.5i"5sq4fJfkk:mV2_p@<>0h%ffREV@l092/Cqdc=)['TK)X=qDP42=[WA(AB4N(#aV9X-!=-?CS:cS62H
%_n$gt;>skm>G)lS81_n-VQg**.$$^i3Ia`--qbn..(@GU(1kg6STb404O.&n742j=H/)ne79MC66fE$?*fI=;/b]-b4P!W!o>_Q'
%Z=G_GEpA-G0?kZ[e1=eHpYZt%>g("hcW_+BF^0d@"/e,KL%q=9f]<A['n5-)J,8R@@)@<#!t3#\I>fHfUEe45c2l*0?1I%N7%$(+
%[J/Wqq8h/'I"ESM47]d(?TSP-pA;Hk3JqU593f*%76P\!,?ObbF1%dIp8EYP,?HsI[9kdmRsKb%gOXj$h`f/6:[iF2Z3TIk4<C9l
%5=XaZN#$emj"WS9UY251_^[5Di8[CY]dSVRdWS^?fWV'i;e(Ac?2jHTlDptlT>'&GcJuY+jh$H:gT>-2LBcUUH1Usn`T>A<_OIm9
%Y#cEPpKoJgR$b8:e^TVh1^A\,oD01Fe%C$*#DGhBY3YHD6##*em#rYDbn66'kO#R?qofR$QeHp"X7h%8[=>[cs&o6:lGKEOlqRY.
%+2jLo'9+&79tu11U:ZoigdQq:%jm*^flV\&@Ji48.":PIQb?2"??frQSNib(?GF("h,MuZhe_=O5Eh`,OqF5Jljf0d/26erI@EH5
%\erq1B4C%U3G]'*Ra!#B:^^AZLMcXQc,&fA3\97#J);Em4hJ>=IsHH^^Z5SZ^tWk6aM7Inj83+3#B`Oc+Rm??ECh4G,N:l<p0`K'
%NgY>ds6nA8]:])[*<6W<gKm)?IujTd*P1#IVuQKgeg3?QJ'mKDs#p4.J%kPG*ah3[[SW,LqL&%e!4:q_P,$@tkjpt6I,A-:=LtoS
%=U:ieCV;O_Aq=W:q;TA_f,#gD2sn&g=`SO(4L(s?rH*%%Fo142Vg*@[_oqr.i5n!qMCt:Tq?&gC)A]RJ2g6pD0"#e&cC=8_n([T+
%<Xutk\s*uVk\)+qrV1%L4'K^c(:%;LKkuljnHd?La5Xd&1YKN7UAsS8]8MT:c^L)CnQEK9/q:D0llVS'<u:V'h-E/Cm.Tl6Auf;9
%BKt5TjN[gBk/C?t[F!beBtH0E<u9*Fm!gXkhqW-#2E54+g2b5GRP-:eZCfR9[F<cm03HU]Q-8bA\,DK\TW_^.S2XUAmQJcE%j0K\
%S\KQ(^]3Jt-AoRi"T'FU'=50IZ&c_IZtT8qk+eJA6dNSDF$KAXW?)L%8&NNtn8^@u*"=Pk_opHso'a5jaNVMU(U:imrc0j.m'-b@
%1q^J^iFR5BeDlDWfc(%A2kiDTZj#]V!_keK<8.(Ed>nKe?#leefEAm6QXCJ"k-4;^'2*iop)RsYaZ:EX-?_5NjUl\5Ili+p;B@o_
%eaL76]A2\h3aRhnbg?(^E]bO#mDn=56t4m1bOIaGXhDIlQX;-GF#P-PQl[%FdsJ1^&Uio"^9jqXqQ%F]qW?nmo@k@J7;<lJ<rN0M
%WFK!.hM;:>T?b0D:uq4b4EM>oo$?-/XX/$j:i-r,pA9+$4nlO9n`'5\4e7>>MrtINntDWM0/:LSUCQdsXR>+J#52nF*c&%IUPAL+
%1c-#'hn4;k^:[P`3FiSCFlU$BA3)q]5$o"Y-LGu"IK(e(k9hl6=L'4cisl74AWp4?]'iI9mrjX7f^^8nA)sC*j+)6?K=>@?7psA>
%15DVF@rF6\6Tam043#[.Z#;.6Zst*C(^FNjpiYfCUnQV:/W(Ztm/#Cn]<h,+Z`Cjr?7lQ-k3(Us4fnOO9^2HkNoo#!Gbplgf3bu*
%qo>FQj([OZ9knpa!0l[DZe$"C\@_NcD_>qQQRE&Rm<:FsS(hlL0CR5rfgBBf!c%J]bH"(t2J^"4,IP=MFYGMq9.'8_g&;RsB[K:4
%!Y'RVm<8[O3Y7sX-.h\GisZr:L:1I?4,+W!\tGkJrTt6"jEAiqh\ULGf1R`#1g;AQHl/X!qnNDa.)XA<hqWY[k,NEt___]Ad8-&V
%i&aV>>GNScLoL+HP.Zg0dWb-i2a"6nY=6o##(2iM]6bdrOp0V3E3CQdf`,?_/r4na%E%+*A6HKnQWSEEmXt`E/-fjE+-)Z^K=&SG
%nToR[4%ETEW6=T-e/Ym,UGd>Gk)S0N^8aLiD=6;^bq0Kh+1jH*#fFOq!%T%^5.=p#7s46uc5kHGUH3TukDni_,?O'Vj&5%U:$8J#
%m?'I(`'"0UDV6</?`!Wa\$s\5\3!o8XZpuWm]dKY=J5@-!?$'QEj7<Lr]nWA*B^LC&KgV#.rg*L&j)W=j'c9/$p_gMN6t^$OQ1rE
%s7-'<g%jMi>;>C9e_0c[rD3Hua:.qArhleC<bc?XX*qI]Y4oc&UP8;"P[j=jg3<jJMB8=2o3VU6fm=t,dK=QT%X,qD?3BE]jDj^u
%_lf?8\44q+k@]\UJQ_;ED6sJQP2_oX[l:6`^-q]uIpuKcqsidBjS^SXGQ-Z?]Q$!Ko`oXt^BK`FYM\-K3'4lW\gcgeNsb7"R`=?m
%Zj1Y*/MFL.a:7!O!KPUI<Vs2N4?R>iZ`>3"?mfUeF*[^rO[%2rmV4pndQ>8*q,$)"(RMX+:R??nJ+k)k![_k9Qf)A=k-T$kHO)eG
%+5,=U?GN1T[(lY(X4s,%pR5K>j=&_&7Cup#B_Ph%Ps86<jh<J"UJQ%L6IAXWqS`^1NUVRQ(5a0($3.76.)4B9F1al$`pS>!Bbjt7
%J)BB%T.U=*g=>n#15B_^.^M-g*JtpHk-1u4C^t?tf3o!KrVI'Bn(HOYrQFMb7F;#=F[Ic?kjJK<pt11[Y:f:Y3kO0^QT8B4Hd'k1
%rGl.`Z0_AL\7?WRrGl/K%`cc_&/:?2\0.,F.*&sinF+@aZlgHK%IU:Do3lmaiN1')*Q:>4Le!9[o=1fX5K[/J7tb#9VM>CJoM4nI
%".%UM*15sdXECuP0]O:#\6BF5T2#>@b.D;EIkE`fg@,YKf%sb;Ir%oqIS3)X!HSRCoDJE$B5PE:`8d#@*\51LLX1e2jV^+(N/T-F
%!@6^I!Z?CS;)1>*Q"_Vpq=<F-&%g$6J&!0?O"Rm/?eK?&i$3LXq/c"-!kAqWJc>Kod=;`hLuA6_B(*3t>>g:N+Q_kP67p8*4LA%/
%n,i8mA(]\Q\@DFRjkUF6+8`L`pLiA:=l"_7:AWKBV[OpM^R(B2B<?C%:&aYEk5=OtA0[.LP<CLu@J/9^fcQ:0CtIFc4aq#:Co>)m
%:iRo0ri^NY2m6R>WMHbRHiDE\52JBK@.13=mjE?$KH/6pZs-,uB_pAg3XC$.r9ERGiV]bRob_06@6uM0cj8L7#h!WTs-"D9qu+c\
%.u"11,1:[b\\7g=o`Br<-UN<+n\aJ5oIh;9oTrY5&,u@K:Y4L]?BN_&c2IV.bpOSDX3X$0BNT][j2W7Tq=p`bmg[P3$_i#?s/#6@
%hu6$Yrj2Rh^DlR\<F#KJoj@`C=?UTKJ,;,%XhF!kFjWDoa"a]rX5iK68V)A^in$.bIegfCoo9@N$SBP#5I;KuG?UPV>P_?i5"WM0
%I9K+dD5F.8SdpAt'#,n4I[l2@I\!X$Z]g-pR1iKq*CbGZGDG)CrS/EB[BZ8tIbDdiI:6aZcdFk!6!rsdGqF5eh1+PVBo"D"6.c)R
%.Rl2^W;W;_XA6O6rpmtr1oK>Y,4]%;i:S+ag2EN!s3cbGYM=G\gt"Nfe\6$o%AhV\hmekd3rCt7Msf'TGLGm`>Oc@`e%YbIheqYB
%4CA&+GP:s?8].SU.FIj:1=B3GP7Xp1Zlb&]kOq,Xou-aXPP/"0J57*k0?:QRo9O*#9CLm*g%j&[T.T>l2B)7Fh=0c64+2VUpnP)O
%CL<_V]Cdh&^$/JAId*SCppIhd%i<mEcCCMt\b1rg@<^B/4F+FWf='tuYNa?H>2(X>muHYk(oAZYpWi$af48Nrn%@m44l<ui_U8nE
%g>kA'@X6`)"q)ASHKQ>cYjHkADm7K7dW_0tYdV;qo3Juqn)s8cDn^#]g9]PgX4;.C9bG*Sik`Uic0oRA"omVPbNC&rr8p'U?Dak(
%q<I\Ari^VQroUh$dT-//nt-_"?X;I#\2_7dX+u'#qo)@Z4K``%Up]#,oMn-SqVpk!,NJ!KZT!m$>[9+"=hE>cG^&u]Ip"/`iOHU>
%\)$BI48=a]USD&d4$$rfrFGTgs-[2uE\VIC/"9N3r@M$4>IuKEa?<+-[Of'?gX>0XFEWuIDr/+VD>\6@7G;\[m@Vto\]ODi5<2'8
%ZQm6Po]YamIX7W6IeoF-[N?Rb*f%eV<@:b47d^5lnS*L*gq"N"pA[#jU9/i.3(@-LIW1P6ZI.`kN,,ITY-%!cn$Q0Nrd0%s*j1X-
%ibVV[IrF$GlT<(/d`KM"<JS!>DY*>&[PPDlp.tWdk/uDm8R4[I4*=Z[WUd[E?G0.#^%se&AZ*8'*78Zqg&@r(rru&(A(rT@`7BAr
%8/%KIY0.K.RkVEs=1:[t9Z'Da8.'5W[ZsHO?f(eNgG=60,+i`!m9K<CJ+t4W/'DM[gRhpXH[+)J2(e]SeU2FXG'Eq+rM";4cX4e"
%itgrk.Ku[H2!.]6)Fb'0a6IY,g-9AP,c2m^FNgLe@<![0chV8+Vp:9>erD&nhO4;-pRQN%Z0fjl7;UN2:HQ.opZZUF?Q[mq*=ol.
%2Og=0ELPPMm,aO+WI/0s+RWqpg%3Oe5;nAj8SBc*l=*>clsb?G@WGiXJNs$q[`sTDQi<96m;6re8F>>PhYArXdd#;rgtmO/EIN9/
%]T!C?B&RDECtt6#s7AgLh-XOEhHao/!Umn6<M//tJ+;@XIi?(;KDL>&:4:_a1>f2*;8.JXn3d%rIE4:3ae'aBeq]p:>Bm`+h6?bI
%a0[56Vi<@OhAQ5.A?Rn;8RUXP-^CD\^/-U!SQpT&kX,eQ%&HAB5@WA/&JpsaRYRin`gGJT3AA/6UD;7*@]eNP*GQIW(g6D!XlGLR
%HP5/4bk.FF,)tF:',*n)\_HndNZKc>g\N)7d+Vb3V5s!Yp/n9-hk;bj1MQL.`/bWHrK&!4UQ_J&%S"g2+J.mNS_H)Jco@geHLS<j
%dA8!AEG37PZ-dVV";Vb&#n*Y'pVB@sk:g:[(k*qY=el[q(g6_TT+5EDFoZiK:+l@2]JOLNb"PK8BlP]P0EeRG:#d<Aj=2ZC6kq!d
%I1/l[L$)=[iMjrD2pfIuG-['Jq"i+t$%K3,m6Ak#%>8nQ>AEp%#e7n<BYT(5kRS`5GJ$r1IOKZ8ZOS_,%;kgd3P)4XPAD`)eSR*Q
%-YA#eG[0DVs8OeaL&R5u=G5JgP7>sc!H!L*V:QR-KJ'm68WlcKj.O?OSIeHXgS9]nAB?Z]Z#>\nMX?'Bl^21F[][Vd`)65*PM8^u
%\6BZek]M@imtFl!T\H5rTYf^H<BdLkgL+9#MjmAdSP)&<A76%K%U!sAgV^=0d\cDoA:$!n`>B[R/j<qZM9"2'2&@,tEIPc`d`;Zi
%m?uVPh5Sigi$u'm2P272UXU]N-\[e=Qr4^&;dt*EnWMhM+Np#(;)2J+<j0Z7Afl\m%.jSO=+>(f[%@:?`o(uG1Yk[qjuB1FCE)*N
%`)=T)`,TmjM.nZ=+ZO11bTA&9'#p[#=-O6B[WrSt45u@N(EA;K>2'?.'7Fb"K65m,oJ"F>%FH-`D^T87IS,I+NiX+()^'%N$>F?-
%$jGg,g:4R_=)"1G:h_9eK6020kk[beUD8FSf^<oG6#D092ApL$k+o8="^V[=$J!8l*tjB@TT-&qZ]+OiK<Y?kqJFD7e1?Qm`1cDR
%G-7pKh1LDFfs1W\c6o+ChjAVNi*]Xc-5m`U`4PO3cfT:C88_o*a6J+e4/cH(A?Hs,^VZXq7,&Q4eE0M=`P)gR)LKM+G\YF\7hFF[
%.o)En2V(eiSYWN-MBHO1fY6VVQ+S[X?#i>LWi3f="m-]qoZ'i'7gY/8@Vn\]FC$T1au#T?dR<V",TZ#me+0k;6F&IRAqo(>kqbsZ
%D1_.eeud?&;$Z'UGiGiQ6+/:WW3e4XkJk/k`e"ja2W6&aP7!1RamC$()&Q_cmCuQ@)`.H"&(cB8fZm4f*60t;G3hoC'V6]5-hpe`
%(dVqa^5TZ%A_85EJ)dc0?2\=GB2%&Sg3>1,d;?='A:]UJ>&po@i7?=Dq]Hr#9:P=iL2NGi:*Jic@G.W.r)B\+NgZs(5WLc37d3*)
%2+!7a(Vf@*5qG"h'pQd&1^0ct#rceXKS<=1j+4Tkb.EoAeNEEnq8"UH9gp"gNDpOm=JBOumr@,%=%`*%pQ-U`:0[&6j<j7;Z93q)
%8,#+$E=lDgbUd5o1!4=U+%p+AKAK01l"71<h&qUae`I/WD:37V+)I('brb*1\a2coV3&dSQqdpo&P..^r4,C/&#?[$o<0@OaU`iM
%#g>hF)h!D/p,siqlG-9/n/#BFT`[`r(d#jgI<_mL]#j$$l$?.6F.*/*=X-r[:\a.5aU8].]lW9t(1o%M2OiKAm5&;^'BZNJpU0<J
%ZPGd25]E_J=W?=(S8M'iHd]9BaKD<N2hjkD?+XVLl/`jJ,pX!sCqD,_:L#6+TH,4HA+j%>\B(2Io$'_FZk-nMD4cQkQfsZPHF0YS
%:W#`t]_A6/Kksujf3\;ikt?kgf"s=(\s2eQ5KhEU8&OV^Jp6),4C>dNH1pN4FcGmHWAa1rCcr<4fO*Vih*afCEo\e[*^kC;4R5^d
%Z(#hX^7(Hrj;K6`3fK=W9t_AjGCU5n")Jd$*7c#e`ngJ`_CQmh,'4I'PC"\hO#Hr;DR)ka+L>Q=9-.o9c9u,e\TJhraH5dr:&)s2
%SnJN=>e[YAblSkV9Wbc=qJ*\X\L.aMq%Y4\'=:;BLB'f=WH(ck@NDd]rBh3,'Ca#,BNS7d#W/uOP?^aJFu&!Q*G<+%>R3Bp'Q@_W
%FD\n#p<]B]394T/)h[TU]tBi)i;!_MED7"jec+D@frm7K[KBtWH"r=E6oLhPfChp6'/Nq+m7J*GYH(6=eGra7[$[d.N=R3'@M\..
%K-n[k,]k]fGU&MXAB)/Z]t`8=%<C]sqIl4d+!LXth6Yoa%JCYX&[jM-1E.FWLdX;N\Vb"LM9DP@.BLKGM,+=V8(4"IYphGrM%d;'
%oail("B+@pX-`30[*9Ch?Eu*Y_81GUpUS)t:d\r;3jDjla#52H[C5fN0Nuo$kunVbC8=#K=BV,=!=+P5S4$(6T`aZ9<Rq9dE*A;Q
%Z12i^1=i<mRg)q:5kn#(2mKRR?[V1GV/M>M><Y:=,dejVB=/qMQD)Cj[;W(sCQj0%C]R78nSCK<l'P^0"1p`bp1Oh7-cC(;F`$TM
%2/_Sb+;G#IPH:3@k!p#BYq++"Le=q2HtZ,[2F@]M\d2&)As'^mbS[,AT;L\.]!oB?m:)5k;^D[p7nG!!D>S't(j8ThYrE(NK,M+-
%)\?-qjkpqPS\*D.Q'VLe6BY;=-_L,uf#t;O\/4"I]R5^79@E?FQTFA0ACCgR9R;^5cU.%\AoLOtDrRG-ISJgc8>I&@aA>ecRnSP=
%f)As'U.6XtNMMF@O#E+u,ah2$=;"Kn?[M+FV/M@\91KhU)HTTmcHk+3X[[YH[Sc\=3k3OrMsi$V[TWDlXC?b;D^LCMrnel^;Z#Os
%S(Ui*C_VF91AJ9_eeaL6dR)if:c%Z!]66F_it2rG0'iLW\-PY_TWa'7Uf$-@_SQpD5>._^8X]BB9u8F\eb;73r*GO$TP'Em)VkM#
%oOiuE47_+:2PX8ggND$LntCJl<SQ&V95]g(\:;3ekPaRf(MDM#\6m]L+fs`sY(W['"rGt]8(K8Z[jVflqTq4t\"@Ss`?!$s)VX0+
%jSg1`aL/.scFdD=51WIhSPVF8?VVtE4f$_/YH`'qStIkCZ;\-*qr>`HgiIPg?TWGRl%DC7S%ZaYVV"hNpG/[t/220GOH#\-d;HZh
%pUB>c\)2Q):H,K6gokYEiKrDsRtDAr=67*/4$f;&:7,,GHgr7JTA$M2qd.EZI8>GMh35>Pk<&/V7A&;[4mCVU`r:tkO*:'jrRm&-
%9):m9^O:7tVZ$7Uhu@niHJ?:BCfij4Hh7*qlHa*%B0TYVXhMGpIW>,(]Df>"^Rgs$?![HFl$LkNYO+E$\dGK>pJ4jtPMP<KLM`Nb
%dJB4pdDVcg4n>7mm\;r8jZh%noRXH/^:\/epuSUMaih$&o@pUPeW\N*0%qC#m\E#?Z'$EdnDlNp=8us95?U.7YLpSer#:*8p"2%c
%:B3f=58&FoB>ac?s%OV>h`g1Pnbp,%oYpXnU&E$p<G=3WUApLfJ&$8(VG8e::4-/!nR$UI2XNIBhSVLsKDothZ?Q:iV>m78p?;om
%5]5fnrmDJ5FpMd6HjnRR^hr/C<D6Ws1?r6A]KQ%:iNJ@$QOJ_Pi_MB.P=&9!$7R+m3qtINAj=p,)Yn:il.%Db:]K%km>j4$72OEk
%5JOaGK,uf,2#X8qMDG7eh=Zg:C\6kJ=H,?.%*u=5EI"nM-@_+N2I%`[k'*::qr[nEr9s+SfTN^,4*uC$5'ti9mGBSRrfG0]X"Wq;
%naG&74!2E&IEE#\e#^!932@Cp-,m-4`T_cNO$?hHG1)`=qR)YgZJXrrYKlS(2pUaBe]#f)GC5=XcN-2QVr3n8@5@K3`V,G/I2XKB
%2p^AdhJ\n#r8D!r9@-lBS1eN<fABnAr;IcS2d\c3>1_Cp^W`:RSf[ijGW^%^ci!d7([#^M0`4F4g"jYao9%]IRI--i*guDXfmYnm
%qk&kKIeUm$p4q2t>'T1V0q02'NA"jqI'T3<XRL`=li6/9:#"[kO`]RVF'i#KL[p%V%?tp6Af>JaCu4[A"h[&XL8%eoC'qQ8R1JJi
%^MubsQ7RoiZ9:@!c8d],\,o5NKgHBF;!8ZBK&PK&s,C2rSeZ++VI_9\WXL9+;?!\?mf(?Db`.+-o(i$"-YfO_DS8I*-o6_=)hq@M
%9OEgXlGZ&bI$D-5=A%F&Xr@5!F6.m;QX+A`s+@oL/()tpp.rGWg2(?pi-=-p1JOY<Q`sqi%Sj+Nb6YXS&Ip#[Y%JO!`*s4WX?ogr
%%eA&XrOF)lFoqIOaP%1bqQP4S)8mT!%V!(Rhs[,-p1,.]2Fcp*pt%2*rTtZti7!1.GP+2urGQVc_tZ(fE<jQfqWDYcCRmnSPeUuN
%JY">Edl;?a_kl3QSSPq)D7VAg8;uKW<#'D9`(giRd[tm`qa^[.'rj7R"SgmTgD,-_dd%qMP#7a7S?CS+X.6f(Xh+r3J$&V=AWl5H
%CgSH-PZk_^-nIRfg`frd/u#G_`V;4290!1(LmBRkC43^<Ge3=DUp3KH)'P"F,<eOGTKZ7q1Jb$0&"!]V`"m(M&[&B$I?[d7\OTdD
%E*2pj3gc\0Zk912:&50_OL97p(0!@EWHN%S_uh=l#s?pt]`an;0%:g`g=&Pl1tW):j^kSB1lS6g)q<YkA=;C`^(L!jjq"R^5q?X^
%ALXCecj8&l)CmU->&,(QSjL%9Bq,s<CFhu:d)EOcH0+,of/Hf?a*COH[V't1LOZ,pIscpi>]YlNi).Wj8mPpuPT+<daX_5.ZqA(u
%#LBjn1Uh(]CFtZV<L";&GB]gdHm6j(oE@>6=bNJKk`)ia\0uAZYlWCl:3[s6dcri6\W!M2Onm^%]MIQc6n]uEA#(bH6J]JMW=*9O
%)rViK@'9%DX_?f2?t5XnMWZK?;SJHK/k%3JQpopA?e8kq(cE4^/U8BG$)r:VBjeSImHh?FM-+L+C$#U8a$CrG7'ZsGngKOjOOKi@
%Re,>h=@sh\5nhaURd^KM.Pn'.-H=:K(-u@<c?0R5TP\6aJ`ommR%U]HMbM,`1<GXP_q0(S6k5*\%!(^pi*j[c'HJ\scg`bd&f*Xq
%@1qNK1lXCP.BdeD(B-ur]Is+mgAVt)1ZP`P`iHX"i]M^$cPO6!l%:Dq0/Y%rXe8:"]_j?3jf*XE8i[8>Zp>\BKhVIWF\t4nb>UYn
%ngM@+A6u;[UP]e?(&%ulO6-fJFS^tjNA5,kXlW!k,"5`fnuAQqXM2hgZJ6'BXNHL.?pPSX;XIr%BPCqcLU7C5^:['R-k^lh;X9I/
%)-du*q?WjudQl4,j@T)ddPPd'+O$p^6H2S%SU*gXkGkIm/4m_n;)P#o7=?@ub$JM!$9_tg-aC-41pP8o`/mUN<Ed@Q,)`P,U1.*>
%[f,E',t!Va?5%d<BiZO]8[C6Gg%EV3Lp@C^X-2!5_e5qEa<34/s#EbRN1;tml6;VF=Dk2$8W6:YI#BD5QiY\?FtK45Z:[3\R3H/f
%P:=AuQ9iDk75D`COX2P/Zra62O@^U`.[Sn3<n$<g,bg+&i=]GYeSOfla<u]G/M3`l&7lF5/m/nRDhAP*Qm^id6%osgEl/:(lVUh*
%L6ks__aS%8P%C`DUHGXqIDg"U1/U'q4Z2;;KYcZ.g!5h=Dn1gHE>5<g3S$GHC5cB(<[Y;@<=MOElEJ[X4^Y1!`_++47@)*E+gF;X
%R@A77+I/sO@&b?KCneVp5grjQQ:94c"\T]SBi`AUjdGbg=[l\]\6\A;>@I$<<mT<TAr9Z35s?gF$N9+Dc`>KuIS=R5A%TZ'dDjlm
%1Gr_iC_tYBhddA7Gd8VjDW!GMj*?^U:bQ'hk3::mAo$A,IsPZF^1=>HGbD1(]t^_Omg;\[Mtd$5IGW:CajA""M]t=Ii]5a,_i,&9
%G`X-%/N5\cJ7q!^J"`91k9IC$<spOBARMY'0u^=enU?54I/1if)H&Ub>j6QEq[t(B>h!DH*n?@#MSLc@UG4Vu.cU&pHD@kE-lF`l
%XXZ'0;/EO3)D/&+)!g#mU7Sa>"?e%o5M50J4",(MT\"hm<L0r/P00oZ88"g@fr#t5.4`A@disX(r528:UcQ>,8c1%X!W!'c-!VJ+
%^<hAH^6Qp+4Fu;r)b^^2$N.ebC%*4uE5<Fo4+b="S_RVi0NM:0mT9m'`NDreDI)E(\)p0<^JM@F-"aOZ<Au9On*`fBjg+[Q.Ortg
%Pg0a;_mZ,?,3MZ7rR\M!R>?P?9qtCj:GG@pOBS6qQ.ec-ZaXB^o5qe)-KN,9a:d9nAd:ATdmu'MmFU8\Cnl\$EHZSa.PP40_?r.I
%Dhl"rqIHagQL97)TL9ZE-SR%B?gm:p'lLI3@>-\XOX\p]D"0DfH8PC-kH74c[t7j4IbWI$VkRRmM3<f,>X[>^37[DpR&^#_FZP8*
%W!j>6s4%>2bk]VC$_WHE(p^g/5HTX-K)#0;:l^e>/_IsSlMmpH8:*&M&8JJ9U$@36##bl:\P'N2"(+%QSfRG5:D_SXf*..*#t)Lr
%Qk82*&,Gh9B\JscWd*7tY%E.3="]*<p0"C_JZm,F`pXo@fD`%(d\"5dZ^_B_%p-IGid0(Ws89X'<?&Q*Rl'K4+.fC9`6sq-ko\-5
%CTo<?55?9TfYaK%X't@oh#:/pYIAeZ6/&'J;^hWf7U1fZ5IPaK\_]arpU+&AF_:AtII]m0$4m/VIC4U2ru".`EHZ'jEcgdmT`4p\
%7J(#<*@F[fTqlA)0<+u3FgH,]K@'YdrqsO=Pl"\br""nXrsLZ/+#dp5T:,R%kE(-F[tcRRp.fOMHfnRJckZM?d,-[q/'%A0h9FE>
%CCO!2r^Vo`$I8]W271-$26=Rl@to(78c5dXBqPEe+h<M_(QN.gM"\jobIt%,f-e2b=$QQ"SN1'A5K8al"Y&nFbos4W5JrU+qt;,Z
%O+Z<RqBgJi^S*I6^YG5]Ri3WaQHTN/RH,(JgjZH9$!I0;1`ft=NE`i+C[[@.GXlDEXmM=IZfB6Pme2_8f2$aq%A[?.kK]Es>0#sL
%]ouKHpY]lF59]JC$:WNA:,e3a:GuG5UO@PeEbm='ZD>.;:b/6#\tNA3G+6s'lM:Ja:[t+@nN'BIpFe#']1F%Amq]CYi\nY#cdVgO
%U2ei=/'E[<]s=m26Yq:hD2[-CgALg+5M#]^IT1<(.c6cgqRr)BoNDOp[2(]F:Y.OKpNKE8_&<:LWjfNcG0kQeUU`S;>V@I_gkH3u
%OjAH!gfiFPe\"8<FDh#`'gtH!DsT3I=2"T.leQme[!/hQh^feaGI0s\eZ-8G4$=qL]V8;oq+K3"3k2hO\:(g"h.s\a3d)-bcL@XL
%IeJ#7F)t0`&(^W)K+.,h+.Wn->Mn?*LBHL1D'&/SQ"^%dds9phEp%_KF*;lj7d22HG3S8jdDl%^]AE)2Ic$3t^>@b`aW"@O_4Oei
%Nl+)9@M-#Vg`1M3GE3W\DSPpQ,])6-2*7HT\="C=3T4:?rM.t-,nZu&XrhhjqTQ40_kV_R:6#oQmLS^X*1PK0;;"\iCF_4Fo2lm6
%NZ?F&H'c6_B30EVcdkl`7];a3an(3Ms*;+KG%I#$]'K5)lrrYX`%#r(pp?U(dZ*<^n"bHgj4nlaoj?aI>5YR&YIQ;8$oM?A)dU6W
%dc()8LV;7fXm@3"9i,s1n8u-.U:P614q?)]G5/02?K_.4g&A]k8ft!5`)HNu'bbA0dHB$Qrd`X27B=/<=5KON6hdsRHiN<s4.\X7
%5LaZ&6Om/309[5r<*_[p(a]YY.f062nG_*nT19jf@pg.8jp36#5BEtIKQhios,(:a^"q]X=rDYh@Q[c\KNN6Bmi=-+_W=3XLVOh#
%o.C6j=W9-=BPa5gW2/'p+:n:edDkdqXeSo>mW#1U(Z2=$?4S[TX/=mN@;bG'*iq_9e5a4e0Oae;m=W+G"r,,*elH"&Ebef2/:XmQ
%ZI_<BIMdk*c(FZUZohGb\TJT5Oq4#mbZU"[&6d1!TB`':[l:-8k+\&oiU*ALQ4&)Y9?J;o!h4<3nG9gXhRp-o$-W1._l!)$pdE;2
%`b6ithmF@8_"5[p3M`rh(nf+B7`7_ACU"F9%;-KBgcZbhd,$/CCJ/$eW"_BXZHbmF!93_CdO.=Fb+rdAo()?/i>a4",;$O\gA%_V
%E3fA%g,lcron,7G\nJ[-*5&d\NI.!K7a%Ra]=QeC@(C?1^r=rA^HrfUpA2DULZ+7<\P0tZkXP?q2S%nrf'`O1mkJ'_p-hncWK6B:
%EIQ"+-g^mmpnAtgUI1LD;`LJ;N<;V?O0p,kAeu7Ifk_b$!98"2Y%`ZWg`fg>kNM!A]sBc,(dFF;L#/++DmqBd5V6MBU>kCR@X[gu
%HEOY+$i]1DOnQE-qq]">d8s5EHe?)4QDr6qmXB$1I).4F_Y2TBYJC]#GhE)LB_<4Ll;G<S@XWHsl668k@\UViKlK[eP5*M^;nn!9
%#^_[[-C#,)EBk=G@YV'9e3,fQ^8_S]]j:2@Xt"W.>][LI]@`<`XIl$;e6M?7"GZ%WV,,!K>u`j@2:lf"Jt?5B[-u*o$AUb^[Z7d+
%:YVB9=(jfIFF:B:FEjeM6b33LL0Kl+YhA<jE;ep/W%ZRH(GpBLD<ReigP<K0oi'.h]rVokf&Y!IYE0nA,h$gZ7;McTg08b'*3SJ'
%@"2g[p(P-_\:mho;f(M)WILK]6e`P.<XdIUs)m,"`r^WRA>%Ss3Tm!o7`1+$&).<t/#_SbfF/:[>@15#X&fu]K6R,mZ*EG>F\Tsg
%.sZ6l]hII*M>h)8cQtKqXr"PdW-F"$6<hG.2(SqJgH%F_?7%4$8AbO)@#"E7bH;p.]!0m7`NIu_F:U\k8o`$nF7RZI\>m\9mp3:f
%4!8`"FS^afO]2U5Xkgn<KSs&t0N\#,Y=ngH?h0$#hhH!Z419OHmB0ktqS6a"=rAqA)crl<9]p]E^15i"5MXc@m%r*3WO7]S:?P#[
%E>\M!34AN4M$K";0r]>eYDjP"NPbjV_]p7VD!`:d'-@*X(Ke4/,gL5:/.>jG_]d`l!*lG).)LcY[lBFFm(A'^hpk&ukK:NiYhMc%
%lkWl+Ct5T*0WN<-,RFA,K7n=/#/e!ZZKHg%f/Z(2ZsKA/.")iBUs3]G9>a\019=gM!ffjGb?/pffPCENoDSVDFtBV1POQt=]8FnI
%=]ejSF`_lXh)RJVkUdeQo2%3bc7bka)R)_$5rWe$7"(P35F0cnh;5!"^hDm7_l>*JL`?RAC4CL)7T;4SnE+D6f58h&HHa>qiM2!)
%WY_1d%;5;Jhm?``/f:bkRV2J<KQ0$l8'XOCl7^o7Y;nAD7.Wmjn"3)tH`KZW,>;-nG!6l2Vp"CUohG^Dn<Zei]_>60mN-7PCS[c\
%s12a6QZ\[`'RWi?"<+Q/?*LrNcEmXDLI2a$2edS^[s!*GQhU9D#A(fdfAXq7[hQ$1hr,5*Jcf[jo*7"EK86)Ren\U\$obe_!Ka_H
%[Od_sq!9<<6TGBQ+,m8bN6B.\R.^ruIecYJ."KM=SO"l8o@WpI1&F]2C@8*CO_^Kg?8asH>+Zm[ai98p56EGHVWOU<PHDBAZ?u(U
%rFGA,YGp*_`jce1I57$LHaP#&rgf_5+'0KFfK'AVo@G(NDsb3.i3OU]TT4CaXN%),a-Z%k!>u:^c=OEQU%QmklH\)!`o6d^rafMr
%!G/\X,ktVNMn/Pqhd]E_L1/cYI0bdG^kIRtFhh&'2R&^3%Sttj9!>dILW]7n#aSg(L]m+rZ?\(df%!n*(G?_o>':A>?TFrWg\T$'
%0ndBnGb(g_6O)Rr/RWooG?6F.QIa40FPUNATEQ-Tpi7Z,97YOV[JLR41?5DsA=m'OeZI;k?:teu>9m5<_Y^HbmdpunrUkY*3NO=2
%i2GPnH?N?jh:c'$j,])T^9H\(qV!N)"_a;&gR!5oLAs:qCE8V"hBE?W'??`W+cU@Ac>iSTlEu4,_ISQgll%jZ+gk(+cqq4'g?"=f
%H>A"9lMZG7_tE&"dZ@r&qIeV)FSP[j!h\fS`oP>>4lYB;p%i@FGA+JC3]l+!\m,&@pW%%%m`Fne'qn$n?cWk0ltq.&mJZVp1G5_=
%pMfR>A_eF()SKO"2ci(B\8_,'.Qfo_?(l3nk(I>$pokE/`@%1")pWL:J8-dfEkHkb!pRNjH=d$s]iQJ_];3V2")0&UE^GS_qu+ue
%pZTi+bQc4]+7?OU76-<gNI-MK+lPiSLo7pN(rgi@[*a1OIgQ8j78XSYKZ/[W=q7EKXW4oNi<OG9G-IO&q<-)II";L7aaf"Rfot$3
%^.un"HusRYrR9hcoZld%\_31E#<NI*%r]*_\hQ3oGCFbLh7mg`5?ftR*mVKLqY4(ajPf[%G@/UdS99ad`T1#Z(2)=&.-`J`>hGX,
%DU2(-Dr71XR69o`p0T-WkVKQob;W14W>DIRgX"_/cd$(7Q206+O1Peep>,+Whcen79HPf$QGss]?_3iAr;8I>I@6Pj*#pR)Bo5]1
%-6AX\B1iWcm>l<Qp[@)rRY@m-`Q$9UDAUi(n_rle5<Gq;m11"_2(\Lkg[*/@d^RnbrV"(G_W9A&deM;9/c#nICZu'aB+%r$4r/5:
%Zhp@9DU%R=cL2HSiYk=9gf`j\bJ.Y%T%s8m%8j&#oA@$l+47jkr*"?Zq>A7f<;H-/B4^AZTlf;CqW8ZDVYW;:d9Z,$Do_$bZF/qb
%c<,C*@d]<!*tu!PGMb'upWi1krp\puc?-P-^5%4*:+U97n&VEekeVRbZ?uJh_qjc72WseST%oktRJ?BTZb1>A(C"hsG5B0Q8tRie
%+26!C%_Hoq-6BjhIS_$^q.R5c*qZqic:RbU4L+W7G"m,r?M$GnkDHmbiaWmD52;]YYYLB%^Nq_#2;+JR0A[\i(d9U6c-APG\b0r^
%ZH<1^\a]Nt\b3J"5PdPuo3q7V_dqfY2fAB[i><$gZ+5>le+2%:1iEo@WlK1-pWSj/k_IFE./nDUe\Zt3R6+&#-GH#.1Br@(cE2$t
%qFn89o6J>?-6=hbkeC^n0#!S@o95(sUp]9)nsh!#;`+%>n`")bn7;EY2Y?Oebk1&D5JH`*\fOdsYNKs')(IN<_KFh,mm9/9kT*:g
%18a.ljqcO8h5'q?AEJgGg$Pjnr1$mAHLULWiqiN-gN-uerS-V^fVeJ7fCO'%(:I7eJ'Iuhp2HKb1REMr>n_sA0q2McfA_VtF4mJ:
%l_T<-+4oY!J!pVk>6eZm9ClB^A)cJ-+%>^;o>lEc>krO3ZL`D<rl_-lH^c[B4-nL("<[cDa6g>L:Hkl[Os)tHjne?9lKQR=lAO,t
%o7IuiDSQQ?)4sZAfVV\_"hgK4]#<Tpc*?Zsa39a$B^*jrPiZ<8a3;s5aiOG&M7KDHqqukPR2\o(SI?+&-Th8_jqC2tZKfF"e'?[*
%R,qplict=?deMD:Fsi_]rK>sJrI%.];WiirHWTm+`pXo)S)5shp(f$AgIkjZBcVRb@V)mO\-YHlV:B^-LB_tghYd)m@_\;u^44``
%^*Fd*kMa[lr=?<UDa%HsRbXir9hVnGHT=lol)_VQS02D7\6>8(rk(1k^K`TDp[iO37>ke5M3=diX7P=lqI]!KS,MTJL&=S!nbD>Z
%^hEM:dC?bl98a1'0k[@iIph*]Nh:`ejKC0upi1\2mcWis_;,%KLSN/[cDTFH`le\?_"$FFd3$KYSZ1UakM=_7?)mVccCC;)hGMgK
%Ddhu"1IM+(g(BU[pu0[XX3p/>0>FWd9=*B65!e*+=P1]<5'GeDFo1iPG<51n^[@FQpSVV*]6V#=chIQ30;=lF^%(.=V4"7OGbF?:
%]Xtp"ZA!*fTXs/sj(r`5dBAVfndPF2!^2!9Cf:Rc/*@8(5:38"pU<\CGAlSan_*oncH;1aoD7(=o4)t+fmK9Hr:iPR@/8)Qr8has
%ZZ<LCq7grYkVT"RbarnuhN95p([?Y!1J_?'*u==R[`@Efn*`@&SK#$S+klPXe+r*.r9J@pibA<=l>8Y2&l4P65B4'N^'9#*(M,@N
%c9X,/F%uXJ<gJrYq!00(DSIk9g75P$R@.5.nu7=eakE*A7220K_YCZ,T5bmA6`E:t6h2+BYhmC$li(BqA"&=K4)_W)DSR:\$%7Ou
%.UtrWMDrjfXb&IUXng:^)hVD$SK@\Ys)dY1f[%(m>\P)[GT]dE2n;%p:`+Jf4oNqd@>.kL4u4uKI1Uu+C^lfi#*Ubq'D=4[$2j@R
%o0A[CFcJTDEVZ6^Reua++e=u@5+9Mn:Q'=`s5f]6YL\2\CqpTe,T[cE"q!#qEHugIatN_r"St6q*m&AH"^-jJntS\5f>IAEY[eab
%+">YC7`oOm=E!4k]fYiRdj!KJ?ff.Rog,8LPguZ)Ynp_!%q]p</=C5(`A^POLoBkdX;9`;7q_SX6Gm&@7WQ[QdY;I'*h6H0UC!\h
%Md&iS3k:UG9Gu`7c2WqU^d,F,ps5;<:O'X\qVgPpdd5fH.d[>HP0eYWSO9]SgWN5S?@@:4FQ7fhAdq*XXTpP&S,A\.^"JIUhJ^a/
%IUARMm-ah`,IT2n1%NdP(N4La?Y&.@Dg/EiX7(;CWsdZ\pR[1:pu_Cc5J>IFmDkr*ZQJUq=7\Ldn%L?cI/.P1*7EVGYOh1$iUuQ[
%pQH%G\,3K:EW%[,]X<"Z8$p#h1\G8BB^i29DVk7_)q>J>MquM*#BOK4R0pBgn_D.X6LXp51[f@h"81ZTo"7igm*G6FYe(9+$ei@)
%"'k4H*GpYfG-6Bl)-*.eHLU4UT,i"^%M\a0q3QSBo5]h]$Th2bio]>@3u@2m3^K=Ri+->'gED((o/i=[^O>ZHkMcBlT"7Xg?Hf[0
%lWN>=qL<DC_>A)]j*LF^_TOr\QbIEWA+&aNfDBW-a1e+MWsl+-$t3/G<FP-ACgOOdT)U@m4m0'>!:t:>3eu%=&,XPNS_*=;P1\5=
%'cH[-\S0;4/:D?YICB]XcL%+gYIlfechQnDq6'Et00J&0ld7b?4+m#mQi8jfqXjRF7TE/VB7JFc?+s\W1NQW_c-st\rp0bfhu4@7
%h`Z7UbeChhl#q7CIZO93QX(1C8A=HHRc!r4`^B%]g6rb-Df$D3)d6Wen'qPX<8MG&DP922^>\tE?Lm<7s+?O2ki([?IY=\H;;4[3
%\YY_55MN?+@d3d!qmVk,&'qIBPHjDG'`"31rSVHoFI-@Y]mV\0f&QA<+558OcXWNTJ#n%5QJDJuj3L]XHup_cp<GSQ7*EX<rMTVG
%]p""CgZ:Hbp##^^qM^W^V:h&rSbLgT=!+(((T*rTdm(&;S<(+Yq<('(YE.k<c"1O/;*=ZgJ"nn4?b^fbl'G?:&$+Bep23BDCQ"C_
%-T>Bp>Io<&1*b?BOZ#IgRtkOWhCU=]h7KqEZ)4i`)rD0=5JE\uo5J>OAXBK,oom?Xd+.;G*RCSu?C]gNTosS*DJh!hQD/7Cf35fC
%1/:O+%\#kHfj(qJ;]hpMHl3/P_(qnDimH?TDL^8WpgNIR]BI5nYPE_rY7V3Lg3n=#N4E66.607=pUSA_\@dA5_:$$CDb`AI5KB6K
%Q]GJPZ+7)a:eb+**5>)"q'XS,r3KU:S>M<a4Dmg-5b`*;+6=#[5OS0.<R9MaR+lPoMlG*h6hWt41\/dThO!+8f=m;oV=&9ZR/Jo:
%IGC6p*@H92K?`d<@Rg#12J@GWj2%)<\nAqWq^ZUTeV#So_gs:$^,fT"gN+fIbbU01`UBuhf#V?hL@3a+\(I7-rp41UeQYq*+%u,7
%o_[mTfpO5VmjpRcf_mjtJ,%O]]Y4>W]CTo_!ZR2u@o'iSF*mH>8a*sGJU-lqiVD*eqsZl-E=pXL1FpAS?`r7r]s>"gld"[I/RmDg
%IX-9\iPkT*EHZW?(1?lGHYe`gUUiJ!FaI\4aB(/QX7,nC'DKaPB^[W^a(obRB0Y084a!B'VJ4o$@8</UhEdh+eb2u0Dg-+fcbDZ7
%d5IN:jga`ZT3GM1GON7o7D@VhB5->rZhqWE="BV5ctB5j*I[nXZ;Me4(OpP)?Omj=mX;jZa)SSDIr%pL/l!I9M+LG(EG$S)qY'R>
%o_r-\qrs?i3E`rD-en3,8)0R]k0qfT5NY0m)%[?Bq`).VQ!ET]mqAS2Ig'_b2ANWV_]OGebNC6?k+PKWoqaC(Q@:ud=kI*,]n<C"
%q>Jm(KrpU^8+X>ODs&D'g$?rBj6&qM"Gu:GZM43oHX+8<H4Y:,5?rRr4$@d-]&hYTRISsoWTjm1HF?b"g\bPiX8;?onOr?Cc2^M<
%T-nhaaVXaO\T>.LqEC9I(E)C)n]sFJpSh@mSd2"\plS.'8P->A=^:>.eN<IPf+tgOp0jacCM83ih--99I+qtrTA=tjm.R4LH)Gtm
%f,7njF8tFiLXkSR9/?sR6$GjQhmtiFn7-B`[QH`Vj&"m"cd89P50k%ed[QfnN`H"lH7LdIpKnq74>*3hK>%*RAbra&Xd$3T@NQcm
%[j31_n'$75>!363Ir&G]/[XDP:<c!#j6'b,\^Q%/c-<*&Gs/`Ylh4D8\%$JaA.NHSE-M>u:@J&jbO/[PEobp>Z\<&Lqu)5jNMXU^
%Hah&PP=0m!20\QdEIM5-hVKN![eGIrW9JPsP[67;52>FUKrrl=g(-YW#Jj;chZ*<0l.FFDQa8'K^7R#o*M'QmaDF@hFSd*hLH[<7
%D`p\j1:$crGRObm\)M]ch>[%f2bNYSSV<u&a*Qfj<(8(@h%*lhY2/?=n`QA`YlXe:g>^RJDrs,>&n_l,O6DU\dei)!b5>fH,<8Cm
%Is,/=F"-LrTBshJ4?gIo/kYFMdD%R]"H8<9P@)PopXs"'T6g;K.O-#*)(rm6rP"Mt%Q.-CQ^/-u]D3UuHE)C3#f#eNMNq791_659
%FH/Cditm)t\GrkIW/Ye;WhSm9Y9m/QXfHY`>\hI4UgN<IU'9K7p<b<@kLIIFPWW)p9;;)(>3p]%aVSQ]*WNF!-]d3L)3LeoT4doo
%psHYm'9?IIGnD`dbg<i0rF5IYmkjZ%eDOl3\:4_5na>Acf$&siCDa*sp$?!A\%dFj@pkoN86TED2\n?HRCf/BY>#r26YCn^LGOoo
%3:)J_muE]0(FEMhg9_@>hO3\Qc/.r&mOWO"RW#R^\T+p^=MB,?k^iYXp26;-e'hM+GOEiGrho9=dL`V?($Y2+2GZ:rF,?YHrGci:
%p"]r6iV0=paut2Blga(RqXd[4fVdsimcts-BD.\[Kb!reCF^2S5cj'So7&;l5M3bF4RR]u]V:)E`2F`:^V0@Z4.&5Rm,!%JUV<l_
%[C!CB^lZDiqm48>mDVir["!scoVn\W(K2F<j7`fWl/'<>#;k^ipVK]jrcQ$E-#;]lh-OB0Sor28j6aWKYkn=hG5W:=JOe,[elhHP
%:_=f*?[*.3E+dBG3J__RMQ7J4``JIlB"(@a=3ai*Y81Wc4(ICUFpY?CL-?sFUs-L:XA$pfghbk4XF5h7FKp19F0/A9[;Wo^1]p'6
%p?Ae?QgJX-RLel%I41"$o?ZQC^2DfG(@:2MbhMde_TS9%2r2%9?o@^n9C$d;B;`MX-]bWZ3tWd&^Ug65^[.(#hE();gWr+8<:]m`
%g&AZ\2]#f784iYrboI>DXu6UEc'Mm^mHbBm]9QUlNu#0FF)tsam*Au/pt,I5g*YYU[5>5><M=NGb,HhjSlDW\FjKU?cGZL2ioU:i
%,>_1Mbnhn"7l,,7O)KN?ne'9)S"&6aLWTDk2fnjpn`nS!?ToLYgml[cpn&8rj86jLdZ8<Z436?ibF>E/_o^Gf-R5/NLgMBg);0<i
%ooWkdrHRLEA%V4%>cl-:aT5Vb+E+%+mK`;u^Rl)K5ECqaH[FoTWfm(\ZhhC<p$AaQAq)G^i"&$&_OTQVO,mhXNh_%NRebu'#c'5j
%k3gNr0&5?4d%-U&r,Sr=:-M0pGBP\Z?FA'S\qp6,K%0Ht,Tgg)gNibg)9uNs5D'V@X\WkRP-*qrSR2>@oFkHa#E(geQ56Nrh8SiT
%G2AGNRJK%Ar"&Dup",h9CmLFe]Wgq&H`,=_Md:BWT6k_LhJR?.r9XW*fE]=HDoif?[<.b2qY$8pWR']">kTnC$:J:rqrDp5FeO<B
%r-GpQj:UdPa(b9*'A#J4>.K^cS*>ofH]JrVm=)baLmr19\,Tuk%PDK@I652"]/d:gI"2.UJ/]%GDu[JX2#_Nu`8&$$13jS<TGBgP
%:.OY[O.%_>X=iXA:"DN,"jY&m9oa>M@*4gn__8Zd:8?'[I-0DIqN%84S\lg6hCSUBs-@%ir42=V``D.^BH(=U55kEPZZkQjVtV,e
%Rbj5(N[/SD2dSlX&B"O[7pl$IN:WNo\%Z,uCFQI<-5Kr_<4)KK->>'6p(t?%T2APUmi:5fhCj>k?#>)0:7D%Q$o._SpWi&!pCt==
%5EC5]?TnF,JY>._$h/NF@IR+]^lp$RGglkAMgl7D<8m^Po'C8hr)HV%n3RZB</b!@W66-0s4]N"DT2?RbD2VBf/Yi3"t0BKq*OCU
%91lBbBc0CI7`F7HTJCV2%F8MR"2UW/M,&/Q06q^8g2@6QL2S%Z!\8[a%;3NGAbjU'`QMGpp*2-!p%Q4lnc.B/j/sHpF&+M3D8X7\
%-EH2b^EcD329%V5o=Pf#/F*8oT3RpZdWTHd\2@:G`S7mj-UBR\=YVYOCV*M:L1aG]=Cs=^P];h28f&4:43,Ou6*UK0G+rI$/kQe4
%'P\9l<,k>s2!r5W712hX\4h]V[c>N+dKdE`j="<uC4TI%Jmp0O23"":Tn+J'QY?RhdDjqN>V0Z&KeZ9E9NlEbI]4/IW3QI6`HY+D
%$#,gk!+WZHRgB\.#:20G`KWL4H5Uji.43;E`Oq")rZI8j5F<fIpG7fu-9F7gjjN`?:ZlIgX2N)X9n?n24#GP3PXWlF0i;a,_=Fq2
%MP*d7h.5X_Ga,KB.9S`,NIK+aM.ps$"&6p]OX1<0@%,%iV$W`fAEbdfDJ,Q.AsaDO"\+^)LasB<;;n@LKKGX].8`U_#u&L9<\.r4
%Q&$>"3Fmm8RqSH?;4LaC('%bHdH%,<.uQqeNW8&g$!q:d'rs/@KSXgSnNf96$UTlo2MJqU9LU]eBhi2J4PuNH0pCf+UU$&^WNW0O
%0AQHnA_Bg)G`44Kr7DL4Qt0>Zi4's@pu+ue1l4eoeeo$_1mc?4/I"bRX9onuPX`Yk\711O)Y:189'qu(5Wf46+k7P]`=$D0)epc[
%crhV[;1UsNGrnZY:pSl"P_^3\A0Mp#$l$UoF1hNR/!4HoMF<C3<`kd=p^67!SgVFe.SD"N"A^g@W4=9\0>X]T\R5A)aR`Zf6Cd$W
%0m$8D9/"+KHsD_gRBF9"`)6c8;MAV*W=l&O\I5tcon,<)Zr@[>!VA4oK484g8iiCi).',iM,=#A01,5d:_nnfY/1HWU8/L2;.d2:
%PV[Tfb"Hg_k*]:$nZ#3cqM8$K.21^(qS`%tZUL"@MXm\[M+Mdn.q=5F(IkbuPnQ5Ye5BB`-K;^8(-XiPlAC/0c[?:(/>3]o;H8rR
%^EPe6>,OW8C->'<e$rG@"p"r)[YmE#Lh;N4fYs@K8+Ef6Z]rur;6hAYEJUX;fSW7`8MQ[E1gE_NE0+3@<<GQtXD06T6E`*"L^Kfc
%B7ke^.*iTk3R0&9PmE82>HLHr.'%m8'eAQ<)Rc9rou5&V9mJT0HnjU#F&eZ=#T"nW=q[.9YaudXR^^/8()H@QCJ.E2<H0@VMNcP5
%1p;#SOm>haWN8^-ZNG8IaTBaA]im/6KbiVJ8g\)Z$8_PE$+-ch29h_[i'GgI/4RgKV:N)VVT`))0&T%4>X"JjKd^!u^[aNMVCf6R
%ZA'kBp#>?L*l6*t-1YVX*b:.9.4b?>Lj:-YnYg.]&,b:*hE#R&`/_d<K`T/"jQ%X-W9!!PHg.o[\Z?<(E6_Y5'/2*4FU!j?7C^Xa
%!FU!;.I)E5/(+ho`jEUZc;VR_\/"[.U,b)r(?8_ahgeeDSJM?">k)h@r'OA-78ZZ3ZE$H2#.d=U-ne:0&/%*\m7e,?@eEKH[;8P!
%B9ICA?=``>of=9Fk%:a2ZeFT?Tl00@R4GckWO*`0`39=e-C)!f+Hj',Sjuof[[^BDW<2!/51Y>p7u>kG&HAa]%\0:C@MNUO,S6lD
%GV.JHD^:[d;Bh"k[7!h(;,l,%$Rr4tYjo![+j5.khQssb?7qh,"XOg\6XFXJ)m)Yg;.V7dT9?9U&XuZIoRCS$'(D%jZ$IGq:R.qe
%Q_R6UhH>eM?pR>JT.uq[::3ugiOr,)G@'4gT>tc,Yp'Sj$i(Bp"XTTO0#r^3)Z+IWoI=S1,gL0>pm##00uB8T9djZmoPm=k<CYE?
%."N)^-ucOiYC\J]6qX-u!Woor.>n"Kn:Aa+eoO74Yttr\'?QDq,45gjor9d=+rqu<=hfq4'8_((V.GW!WBm?"iV!USMaXEM`/&\R
%i[g4$b_UemZnTrYer!VP>@$qC+W!P/rDSR?)K_c`$]m%gMNg%(catQU:+(n?fdMAKTS#7OL#SFgR0m,_<(8hl.N*h=YRse<"r'rt
%n/8U-,F5tio+ILm)>$'7GqLl,:Fio]qU1l=R$OIJLa&RajX#8#\Q:W+XXpWN?CHa*#8H`2R%iGPmT2(>%N..7<[i3A1c[QXiC#+'
%Q@/eG>KGkAM9[9D].2':nnD72e6kA%egOj>R%iU-KM.2J!R0%j%Oi]<NWJt$gVPsX%%Y[4^h)727j(f]2'eWRqb3lG4b)W\^uZ@3
%N[th<V?3>Zib&gt'6&OSX\iGYh+iTi5ZE&e0JsHU#@`AN1jDWa>qg+Zd&tl3C#ppBeZVQs,g_R*I8V+oRBrcKo!FMJ6>ANEZ"=WH
%<`EhR<^nJM7)7qkFHg3N-hUU2r'lJ\&g;5SUE7@aL/5*KV_EmP9Z5n"Ij?]LG,IYONah<rg+<eVU(&hJZ'*AG3jn>7ON#B&F5AAd
%T@*k]@RN_Na6NFHieQ.aj$\k>\lqEg5Y9LuPhf560AOO7/6,2HgiaM<F_]b+0?Q)Ak!HI7op!sr$0FEpDHWY6,Z#-,E]B?C7nAhP
%X>(Lu$m+kU*C\Lo]cq`*`mfmbZ<mJ7eNMB--EkA]<,j2V$IRBBFl3k/)DLYU:$gmu['@nf/oigZ@`dT4BUFjFQ`J/BffQ9aA*cMm
%K7;*RhubbSaYMtLYogoQ.go;sI&g3^3;jGmK+f[c.h3lBB$qUW52fpm6onQ/8Va3KLt8Ib:j[F/>r86tBV]AWa$m)t(]5Mj5G-S1
%&s"DLVc:Q:f'rd-,DkBi@]YRk=,XX,4',b'82O7[>GQTT'gghS*@Nm;1bfUD`0@:q,<:d/@nDWPrC%*&5`V&ESj8lG%AmQ$XRTAt
%D7SK/Z4*Xk_\*?np-$R`JIeKSD:Z3%p?JK/-$Z2PZ*.Nl:*NM5Q(CC9/h7U:IPSnib3S=8iTOD/C#gnd8Y?HI1U5=-M#EKLT.6tq
%fb<al=Nc_^(/,U2JK>q_RT-cbX9M4qXY-tQ+EhL!%7`tIn4S_BPD4'7Q5nY=(IAE*ThM1c1bj!AUO2L+AENG4.]$#UZ%^=HE(*-U
%Ql6Pr##'Z65`R.p!'5,C-$2_!$HFpn`?=$GMn\<fgsh!WMCTN*e)i+1r5#'[FN;s-<4OE>-mT5t!K$:Y7FW##]X1Wq7K8U6P[PLu
%Rp(us9LI1fJIG@O>5#u;Z'7C#8SF?Bf%VbdRS+H8TZ&3cG8J-TX[a5=_")MXbLqg[+nA6BP(`fYE@NcZ#Z0,TMsAP$RA.>$N>]>7
%8RV$#<mF"H#5(m\I\U:n&>`?3AXgi4g]S_CgiV1tJPr?$/;D^1&BW&>'.kM"e#uR5,b<E3@F,%kNjM]<6t09&#"QU!_eTR%!mJ3l
%Ee(Mm,s:^(TdcLZ=RjQk=s"Ln<^bqfMEfCH\P?5/cF3C-BcW:gQoZZg9rr4aPB[8-7LYh67ND'^(p]pH<TZLQ;_+PB916-XNJ;c2
%22WDe?o0Xt.LtI\4;OOMm"Y]j8XZW6MUlrSH7DI?7@Pa2%!,f_L4g^Z(o&q7ehhU3Y/PAq86:YmBB[*mUh#=R+^)W=Td]u$>is+\
%ED3Z5<D`r'W^X9?f4DfK4=!1*_b*sA8UJU?d]Qp1#DndT(HD6AZ(?p-5V>'s=fPMX<<\V-,T?qk,o(lebfB#'(4?$*g:;f#H33KJ
%0oMWr&].^'Fi(LkN?bs:qR?U.FBJ`4";A9K9H`Gb`MQ[mr1Ysso2P\oUA78'(>K]/c/nGN<"TlTgZDC$++!.<3SR'H'cn>tDr+s8
%,;62gqh.A_`H#-C<6/r!'8_GU+c/"SL!?aLMN]TSj1u@@eeuNE'CX^!5aZ:G29H:O[/q9-.C6WaS,u"iHuC2F%D^,Mmq]iK#=DX5
%!XA7+@sQX@@kV0aDM)Q^Xen!Yau$W3Z%dumhMT"#4ik((k:K9f8bcTQiXWi9$@g)mX\squ])(2=S<t<&jq]U\psua3<??@pG@d4E
%3Y;r?ataF'=[H<^R.LY_C8H*W:gs(Vm^$C3.0/7^&=ZWf"VsF>Oj[5iL/S6B=/b1(7`INOX<s1:\/8Ok.p=<_$7T",Bp)"FZ+^hp
%B!Eq@kSOme)aEN\F@`XZbgXZ3-'8QBR5UP<d[<gM.Z-j5A\X;DT+k"$-+b;Nf&;!VJh5mtGG,OgSNYLUU`eJROiRY^G>VF>TXg9)
%9$64GH9A*Nle4?gW%/BRC_)o1PA=_aK.e).[YRa+;/edZNf`t7Kn3a/LY8gJg7K]prCd5KX%nhFe0>6Qb!#4d_HQX="&7OS.9f^p
%,\7a]Kcl+'G2)IM@oi.M!SF5h9OG7plmRCGV4pW@f@jDJ.[I?f9!JSVX"+$ARRjb,4A@&;StH)ts!9<UTG_MpE2r7dCj-!$-G_[@
%_80oTWRJu$$=dRZG2H/13$FM)3*;G1p^PE&fYC\/<D@:=Ni]8DLXTr%TDB/.(5tNoCp-Yc@m;Il7/P!@3fq#;,"@m,QMjjYa2liT
%$jj6&$>R+[OdB4(r\hL0Y,,>hBj:NPG>8uu0ZlpoM%JDA)kX]mOR$rL>TKf?c3gfd;(#/dD2K]OcC=L6KQhA62`B@e;]O^tNmkC.
%UA7Hp<7,&5Hro]*A$T_tm*Z7dnm%0@X9VqX-F-,g7DQTE<@+sFQ_fH\&KspOo6*l5$n)cuKagg;AHJ1J$sT^q2Qfm[HUB$8Y#Lkf
%@qi=a8i2`")L2b&P/)_R@?ob0LHb5iNpEU:M8krg9F?QRC+oCM/O=>F3QH+\W>*<p$=Iglr6-$=p8eKFE]s2UNVu`jX/4nk.3o.`
%Pm$OMF9W%SKgo$8,mGc;2I1#f:5V]$]bWT#![6#bRV4u4M6=^lUb4#IE@$`q.l,d;;$<aVPqZF*M'c[t6Q@2$=Cm.UR37r^k;>gu
%qHK*j/(iT#6=u,'8K'@IA/>q6S`Ij5E3k]<$d$npm9#FTCc!er=jjK0%GaV(^apWRY]`-c>.J7j\3c"MQ[qCK:4ib6K]'?<55,<&
%7>V=s*7T#H,,6CI1ck9abGZRG!()gJQuGfiF>-G3^l^!rc8^Xj1c^:jl7T/q,T.#YCmi[LEeM,^)*')2f[Lfb*Qf^lj95<FjW[a%
%7@Rm$VGc4RNmi7c/H$9hiDUYH7`[6IZZf3$F,a20>*7F_Ckn1pStKl%'UE($E@PcJFl=-WP,\gMEFo)94`3V^8toe;!F!tsSW`:>
%-D,#cJQNfVLX)H^M\40DcY&Lgm@(,/^e1nGlX$p[HB9YD"o\f<.cVZ0H;4k!Pp@WsWX=(qT-0sY$cG1O%j2?&XJ@-;$TAY'[`5rr
%o<`)+8`8IRdKHIs?BA)r<@#Br"qB8\^SRbV<,PAQ_0nN;km-R.JIk>f+af/83)+M%BCKVE,A2<*TBa8)*l+]#GF9N"lhNVUegqS!
%KSU.Lo_:SWOo"#.4`uUJWfY&a88T75.oL1b#*.P=%IcI.R_U?_D(Q>t5$GEV&X#o7]L7BoB0cYAXugg1&bOQn1fJ\7df7lSG@/H6
%\VE"*EQ>QM'LIl4\MI7M#u[fp1r@2/5A?p+`/^Lj-9Q*?27^OE[AS"Kj)o[rmTJfcg/F=PX68glLj,T6m$JZIM>C.od,Z`a:Y?m*
%2QFfuSd9(hlkt/=8;aDgYd51cM<C0PpuD%/`W9?mI!W6h^[$s3]gV/-HHP"&Q9A<i#W_E-3*$9fC`o3CeS><+O?en8Ma(-9?&H'3
%WM_AV>6C%&XCfkPVl,Xds6HXDAm8$I4Mcl-4\QCJ`YMIodO8WsYUA[A7eIn[(XdAH&0uJB+/=TJ5"3L9ig`VfLn4`pH1hXe_m'#Q
%hY]WP,7Q/EA.:'!XF`6@R4LALYieeR>E_@[AZ$'piAk[&4_<`mo+WsHlC_N*;`H#mgRaq5LhH$^3i&0mkCsG+*h*g/U>u7&*+cEp
%'8T*j'+?#&P0i5FHY/jai5(+"]scLenC2`:rkP$]R6At&/I<%8GoHsG@e:5T*KLq]$L8$:]n)h<1[j;tXVr1Z;GZ<ITUZ=7_GMVe
%3d.9QCDqm9Xg3"5(,4:f45Rt(Kk+?kLLUY]Ci+2J-C5",Uo<J:+B4f#@Fr.6P9,d3JtA!LJj17L2!).nW.jp%njh_3@IqmK03?d6
%'cM,.YY+5&W3X4kX!lbT&D'Wj]OcfC@!ud:.Ll^5RUk`HC>P!FFR,Mfh%<6%^i@cX)UU=P6Xj4kCGuSZ@RP0^!:'r%;;6icR$<^S
%X0nH`A!Ze9,A<orE=a&iTaG)lYa0FHcnm,1>Lm=E!)n*5SN%h38Y*]I5B7-P579kuXpYJ`5`hHu54AYX@e]"g.FGgj!^H[n&,^[@
%g&b's2=J<@"$`GMfKo[)^;HuJ0Zq>2N0fi[Rc(+p-AuG"kgi_!BI[;4et2Z\'.hG5%'OnjV(,/%(C!QWB.hh1TmsAWYdL3V+:hFJ
%'rW6=O@PmD)!=K6+R5c[8deA_[t105^k&,^Q5s#+7uoRr6bhF`]uY1B40Tjq'D@LI5*5FoeoP27\3Mb=gP1-4U_,Qqqfm^II6>?$
%I6:6@55mKrIINf_BU4X4ICM(eW#(K)TXuhR%9JdKU^76S2i_ks?*:gYLqoE,\tef.o1OrY>hSH^%#G6jgW5g*e.d$o68IV#DcDj0
%ks1LBM^6dk7*)F9^0/d&3F6[:Pmj.)YJ@H<XXD:uULhNS$W<D!MR.r'O<Ga;8(Ij"q8A\^[:6i+;Q;[E6c9Xto-8D('7:G&Vb'u:
%O5rimK`P\*\e1889C6"bC,D6[h.0'?f1U=8=,2Nt(2=nYTR;iLLb4io7o7HUAs695AP0T310@l+6F$Vp[`otHYDWOK!Ze!6O05AL
%@sg$tKZrR*fRltoq86%aF!6-G+^6T1"?BQQ^1!>mSHn@Kpr/htW>qKp'7ii@>-1a6\i_-*k%t]X9=K1Eb?[?JkL!dT"aEIE=>ge+
%K*3%'4X1O8ij`JM:sue-:X2QYp'Qg4.1iNKE9,fCl2"?aRXJfmpuhhGak38<qEp[5E1<I5ngpm2`WYq/n/$SM&?,adWJ-94ngU7P
%UudL!_$Z@uY>.4m3'P6#+3>F"67-\-WMQt$0'?ct.]\3?W<2j>Y.NUopEAao2;^.oKb)M7`m0NcP*I0U_hD<k&@Q1RE86XCHLr'%
%7bY)HMDD[p!CEk+P[ab;Lj\FV?^A/YaZ8K&$nY6tahteB:[j]E4A@t4:XE'$s(,Yd<1(8f;fdRGM!n?"oUHSRmeKP7S-5n6lM!I4
%<'i$oQ6S+2n.bK<kAOO0S/;/gXc4spV4?E>MR]-k'f$JH:1c$(VX:f-1c]W^Vrj7V`nKo[89!IiXGYSOQC$r]\`aZTMjXA)'%&O2
%V9pS5kXhK7o^e5!!joi6&nm,j>#H5`.2RUn\jSar$![8i;NBk7d6s!I&[U84$;49WG[joAJL4Qh7=hQ'\`WYl"=LT8\s25%M^g0S
%dlb+k`AG)(,A;$&1d0s`C_utI6VG.N%kWJl%P?YWE>4(l\0iW5gjrYMeh2T%)gS,99`fq76@<Gq0D$a.N@ba9XO?#BLM*QH/OB4G
%N?#4h$\Bg\^]k/;''Yqs)d<BGe79qe/O:Z#\8#i:#eJ;tC^EN;]kP^<,o37(oaLEp+'f4f4Ki)d1q_m6mDDS'+uR#d%a0Eq`0W/M
%d>1!#"STp9R`:\/"P?Q_,^7DOQb[1S:=8hLjrk,L9:2d8BQ@;9jslD/b8H[fEU>;#O:*"7$AHM9;Xr31;Fn%^,q#T/?Lh[W&qM1L
%nh*=$j7![^OX-6lj,rNu[^?W!@2/DB1N0O=UWJ*G(kX.$mUBjS$-FC3DT:HLFTAs\Y7Fo`$#3*)W.pX0Z,oF?)d^Z;lZW'u'%(_[
%p<WdQ&^!5!+;>'JLepYi[0n[^9I_25hJ8jJ3"8?-:KR3>)'ITLP[qcoD69rfKJpsThp\S\HT]W.9]1suH=9]&/;Dsm_X'[%Y\bXP
%</0?WZ<gZjOQ&m><&-eiLLl(^[RT[k:s&R<3Pm]JS0+U32UL9``ca@<K4pE;R#"dR@JGoiV&Yt?KF%cAMt7N-5:hdJH%Ob":[erC
%:X]T5-YS1TJ'1?L5g.Ygi<U+.D!u(YC]i]IXM8;r7;?\,7[Uu9RmS=<'cU(MO"fZegZ8[G*2-1Cm+BVZ)KgPJ`:g.O?b%k@.^1B7
%HHN%,&#H0`#2'g8#(,+Ai4)r$RJ@9JA9qC\Pa`H`D3'&1XTtT2qj6Z=&>=oS+R.20N%qKmEAb;OZ*K((+(pdLnfYMT^QmPuVV\O"
%K"JqBI_*Wa>)9k#@1;$4BXoW/VQf8!HH!`8I-I@?hQ\cqT,>iJ@NdTg)lu0YKW/L)f5b"E++)rp$4%sd0&qQqa7UILWN;I8%H"<o
%Z7q)Z%V5JSdl%spL<GqbU]E/^!04iN:t6*_\IDkbLOCI-W*HZlm32d&?'GSPgd%WhgEu/k&6X(h37Hb%b8#65!_q=JFc"=YA[ODQ
%Y2G^B`.6Us'qe!Ai=I.;F?V4->7qdE>TNE[,eTr;jU0(AXHtc><bCMCW0Q);M7-5qNKP[1V82"i"__oXW&0^l.#Hf[!$Tg7m@=Sf
%]ok[_2_)&#jTJpD<.kC$T-C';P7tnaZ=XEf<`T)V"[4#DAqK)IP:K\[`_NY"(.^hCTCl)LKW#0nM5Z[K89q3X-;H`<^!Z9o34;F;
%OE0'nVHG>0O\JNRbs_QfTDM[=f'>*"5E_#pN*09)NJ_m#es:?d`Pa\3_b0HlWXZfO&=Ok<i]ggS/6DW=ecaKAXI#g;%:UbapWQqi
%n<0V,-Gi+95_?W!mB\_f0Ei*F<6rm$$A9$'Z6Hp^+kjQ0Q-%eSPgfW_`=dPI[l;a"#(kXJ<IZnP\5>8GY5qk[$!A3n4i1D9J&;:D
%L@h],&@04e@Mr1*n(p+Rs&?,jH`^'cli/#1_cq;"pWqpr>J/7g2A@9.aGh=j:phH;)QG]K8WsWC!(oVtAl*3?fao]/W]#H%PQ$RP
%R&7N5!1AS1%7/H2()k#dab2PQ:(ubJJkhN09u,4m@Pf!Ng=Y*p0?X$<Bb#ho'640t26,:C8e"c>JZ5>P6T?r&D$6da'q7IgTk6)W
%2:QFJX!Sp*"KWs!dKE`JGglk$%5f*AX,-g7!a(Yd9d&#_AeU7`rFQ_126#:4BMI.6#\m'tg'DL(<?&fWM)oAQ\0a)&5d!\&)hG.`
%eHW6n>&eZB26GL6H;-BK"FNpVV$['gg7_X)_I4R'\hZa0@B6NLd=Bka<C_XMdq-o,N(oOI"#r1r>n$eeUpH%'fnT84f!QS(c6hU!
%n8)'F(dK%&RmOJZeYXI+>dYGC)cpkZeAair*NG+"2$7W(Si;:;UT+b(gSe^Oa>U$N#dfT'gC1NMq:c=f9n]tfFIUM>khp;/Ia-g*
%UhV+S2\Fjm&8kaZ)2K55D$K%?K&7!X9a&3CPZplQ7g!grWf>rl7.crK\hSgV6+X<L2$.oqRLN]]\7Qsn2stN=BK+J79u,Rm.N?7:
%al]`4^mj!>7M'Ldh^0Ia[?6IRo2_nQ'%!,tC]sF.:.tbo2lYI9mVQX1AdI`B51(5BN@HlBIcJQ[_;E=LC^C&1H\OuiE2Y]V"PhX5
%,7qAi[:V+3W7M"TDJZEe'O8`%;8D*dY5oU_W\jd06a[,[E2_=f'Fo`J'Gc]F6pk?A?H.ttiOEJUE&^lINSrdjUC@7`KM;n!ie1*%
%5iS_S;j]Of-(4hQnMcq'`=2r@L'#@L]d[J3F0Zs&S4m?ifJot;L;7f-g(6<JAo^?DO-9l`#Tn81aCH-Lgt5dd.(QUjAmfXhCQ795
%n@8aREarm[6cu)t'2Z6DhK<8gR#@^AbCPLET]KSMRt/\U?5%QDe8#+>LO)Z;k"r5^a;hCBF"hZ'D$2[cobp*?ENPA>k.$H]i9"Qd
%UBAe]]oaK$R(oDKcAeq`K:V%K%=mV<Y6"881h[Ql3TeK*n8gt(q_/jJVD\FKUO%omkbqf40KQAg!03*:f`7+/lAZ-B(Y0K.PYUM'
%$qnW7B`LgsopS.paW-6L:.Osq_:,ZhCB.2O1-IZd?+l`Z#H?a0%:JJ<HIiA$P=d&eeM0]d#HO%+(`fbsR.;*r>K>4t^i`V[&Tlj]
%=qgBdXu/7f*EO1#^lGHQJ?Yep9gJ'Tg?:56<36ao*S"p,A]N=j#IEH*%H-TO?6_]sWn.O)NpDZ7C<,.H!,KW=f)XGuA7]jr40$m<
%geO1$kjWbs*Z>%6;8#F1GG<)H#.\5bg&U8QLiOL?GK82;J9PL=_]\E83]cIF<GM_aa7U>Nhf6>lU$oMBW8MmDOTt<!>d"/.*mJ=B
%#X#7K3XD<V)]]-DlSS[ZA%%=+KdUn$3Z+I4hPbC</1;_Fi^p87+n7rM7g6llJMhtsj*II&j&*3Rd!-bZUP%T\dQ@k!T%"]"+A]q$
%FGN&N]MUuc7!jn%P=O.A!9J4&##KU#aTc-uWqSu;bG,qg!gq$jDe-pOXu/7R*quo?CgK*0;1S8THD<agEP2S7H/_JU%\Lf7)?At1
%EH-^6kqTRHPht%r,;;9\ed,$3l\uCQa1Z9hWQ4[$#1X)sN<6..ogT/:A"GN-et[Oc_"D4F7YfS?$#9[J8+dcdm'/s>%'it'jgAOj
%\69!-]s-A$U%Yuo"0arNaN/=Ib5[S)pP()f@DI4XD$7OBobrAL;6;27HXgj9!;O(\W"=@3`s*Z6_NE5Spip*LJbXmX1)(g3CB2Ap
%;U>E(O6\Y'j9t:5!m/LU7L/&8C88];0fL$Oo@4LIL;EHn[1PYGeS><88+ddOoPqPK0R_Bqd=M.]>7I8%AF5?^f#O$o_"EES7KMi`
%<TY]kI2?P*$j5rCC(pA+W\t!qO/S$\r2<pH&3m<V3fG/)F*&NhXu7Jg+4k3,k/[C:!9ZlFRK32([8A+GUseJ"IT3K_X<7&0!O/1e
%jlk'?13]LFqf/_Bn:"8RFFZT<b)mkHR$eCKrj^hK0Rm?0!RRI[oB9##JO#7tp*\B[L\haI*Zaa2-Z;u*5H`K9oT-EAkcfPAD.MQh
%Y13OK:DMd.i.#R`)SlBX<?*"ZOK16h!9A#U!!*L`2[Tt$=Dnlr5d&]=$;fN7dD5gNT;0:)%e4[r_#b7W&MP?XCB=sdeJ`r?;S>Qh
%J6]8Y5TnTm";+2tRXbN=[72j$>d"0)+:iC$W5+L_,Cfr<[0CT$grU[JGU6`?<u;r5OS^stBHUAl!#nK%)?C(`]`ui7]Y[/D%huu:
%3d`&oZN5TLY[q>N6/fuM+G-[()o)_W]d?!rr4*#.K(T,b0L.q$2LlKP`\d`2P^+/f<fm2=19_lSZ3J[-TtM9H>YoZ-3kSkFg:dgk
%j*9bVkcg=@-5V?O1]'CVX)k@<#"5u(7g>6g'"@@_G#F-&PF3foYAhaN2?lU5[m$qorGP7V50jr@JQU.*UN*Am<Zn]_+uo=bl<M-h
%nRVu!kjnV?KgE*$dK!jua4Ia;8$Ln9npAGM1U<TX1O1:4hgNZ\](3unGK:M>_pE#@NN4RKNVp!^o8:WM]&O,s:<S_%Rf5Tgd-s9@
%CmgH)7krXup^c(%P'1<kfq+U&&fTh^jJYDp^sY1CR4m85al[c]""%+gEJf0Jf1M@NNG[!\,mY.a:(\2?oH;^Cis<K14AG\4>-T)3
%2l_-653fb2h.=S"[Gk*#R4JgCqOHl:<GfJ?lNlI2*=ZU8iB0,7L-l']@6a3QkjggG&7o4Gd/3XI'i,*)Ch^=B[M@QUF/,07Tfm)r
%[6AI,rGT]mH4F;(YGENDJ'@p7&sC[DMDlV+r%h4N#6>:SR@&PiG5I4]Jb)9G##fdGn67Gp#2u_1=PEc3s&SXJ8FC359Orq!2XLeD
%qp\M7_bEA&jCs<YX1P7.[sXk8^2F<`IK<=BBkc([)iUV=(22/?:\ahC+ai#,)&UBl&7AM8+^!2U$Wu$blT$^KC!<#!_5UIg-ubCf
%?H"WcM7%h4$2NsNCQAE?7(<PK&Fs1BbMYSn=lsG..@4U$+hWeS"?Wc3nCl?9r6$7c&@:ho:9cGXYPD;;I)pf6/MmDQ+ii$Z6=YMR
%Bi!+Ech!o?NlM$&%VU#>Y%]uQF*n<OL$rq'-aUb/;D38t&da4:o](J/,`gLiI+L]Rm@'e]fG%pLgG!Xe+FN-W@7&$d9>_=_pr&aj
%"-a1@g8t/lb[*iHZfc$`%W0gXe'F3jk(iG=q,3c)&]F/e\gZ%&RgcH^@B&rW,CB>FeVh("*_(a%$MU&6B9WDP*GOHYde5De=>Hs/
%%BM89D:k^K6,2<27!KUl,4:4CKSBl5*o"'%3WFN2++6AeIe88tMU`/;Rgs^Q%l)E#l$lbN\T&diT(>#6j&aqi\5p\Y'MDr@6@:.:
%@eDiLa2Nt[ds1f6+UqWs>_KI9lS8e"moEN*ra9m=fiko"q!?>8m!n?QAUQQWpMr9iktlcN3nSLY$8dn6DQ(g>J9k=$BgGL55#"d[
%5k'10BsqrOQHR:a2f0i8ikM[M)S;6BbgItLHqR*gc#'g^H\.m+OCi.Pdr[:XBref#pV#]Qa/Ar_NKi]L$V;Xi,i4ZYiBYep!`I6#
%p#o;#<?q,_'1o^@UjX;E!%D,UKag'9S[N**d*K%fV6gXR"Jr+V9@G;ZCYJ&7qtWKI\m>S%dLF/E=$'O=Z7"l!]0j+#^T3D8pOOVg
%nnN4#=4/jF?dR7Qc)m0lQ?]>Ukcee09SZtZ@,dBY>gmSA=mcO\bAfaK?\i@$qf6S&C!3*@T+BP?m:NlBlr[NAG-pGB'^?pth*@[S
%$4LZ`(h4;=Jh+os"U*^?7glojBsG/lY3B0n6#O"#GK;@/>NQaBjW]tdEPctQZ7#DRFL5EW4\`uVRWdE>c'Hu<K3W/gN6X)4X0kia
%6XPLX!>gcIik8+$JKB0lE^8Zs2\jeHh-m[`mdH0(n23'!C*Gr6kY](3P^1u'5[tW;ZCf=Ck'9QqcTOFc2t#*b:,+$LOn'FlQF7d[
%J?FpeX386B&5l?r3h,Q\VQN6*"=IbO(TC#p\H4h9;E1is$PEbB38O-.*7mchg!_/0/LOOkNbXek8IJ[5E;7P!kG]bQ%7k22$6qQb
%N72sNN)B9&Z!9!#!t,D6+Z>;s\0]M2Vi]g:IHLq<.N]8h1hYa=J:LlRM7knfhcWMR_N;Yr/ib"-).gs7&TBaA*gJL;9dc@G0]=c1
%D@c8i%btP?+=JTBURm\mKiVfR1Xo%t<:bq_^RC6E!brI/d?=>m_!8aJ'%\EEcns\q5,94X[$*SM:b/KhE;$R!pSGBi=U'O./0^R%
%jJg-C'I.OM%sB)ZCcu6c=_]Bj&Q,@:?7_A[(ar:5Jj`@R.4gLSLndE6HnGGITI1k5.A]h\$N?"b5-CMuB"n81Yb/krPn`!N%t5[P
%Qp[ku/JW_t]/(P/';Yj^`l`6k;E;d-&5YQ6+UfugY&u3\IE=P8?e8&%kd6H0Cp8B2jF"knVW;oE.QH42Iu6pM]R%GU6^57/YW`cJ
%4L&jg8;=tqiOTGm)E:>p.[18tS7U+MViNlT\O[4Q=P,G**'\G*!1p$cprXB3P`2/gA#_Zd*@qdKiOP1D;9t@CS5<EY/g"\9P/O`@
%XJbUh7Y9[%8qt<81'lNQfYnJ<le^%uc4XUeX!W46"FDajTX-]!&l:)Ur'4>>7B,5B)HE%YhIRo+R2K+o'e8:D+Oju-hAQR8(`SG[
%0,>*\:U'+@+I810%313s1,aZ$l%Mua973*]kq.a3(e>Cr-JWP<c9*$u\IE#e7?!XfAjVs2hnkW>MJHWB%q8[(-a81!#%sjp==J-[
%iYKZ;Le/r8Jl&ehSQl@RcfH/h]E*Ud&J4PY,KmR7MqEO#&k"7gEKk_e*he\I8ofV>.J/&k1f.>sm]FhL&a7H_AC_<E(9.O2_KG=1
%&Nh>\$>Z'b/2n7=S,/=i>i$8gA:V)lqpWm#V8Vr-&uWQ9D"TapQ?)PR>cpUcZ;Taq`,%R3Reh%i;ERdaVe)q1j=F:@j/nW+A"!I(
%61`'.:Un$RnP!_,jgUU$:<0Uc@a6Q[FepZbl@4SI9LqaO<uYXD;GJ'dTG!i+4,rol*$m-O(h15MN4CUoO(/#m>U5(KJDOP^'oWB1
%(b^Km]r"mZa<*!+:C&h:-,I`7R4:QHZG9r?>uro#Q4T#1Pp*KV?iiT9@`[FniUm6K">,XR(qIloh&&^[?qS9jN5EW78'=$MKI,;[
%huWKY#<YOj9iM(=5UTcNY&L@o@[:1P%d^Q#=BQhX"D>Q9Km&6d*F\J>N3(-e3u1LdjP1o`@"-bf^&Gb*SGW+dgidA\(9bm13n.u`
%/87*eQ#-a&9kB6Ln/3&Q*<^97rYCJtZH@;X+Fir.kTmu]8d>8g3Qhm8ganlVM9Yju,!`%;YB@-,jtPl&jO`,TITOa[m5`SCIc(-j
%6X<^sQ=S%(nAVlL2)t%"&L&..Mt]IC<K'm\4M4fY#WW-p@>S/'$^NRq*N5K=Latk%r)#2Y?0V_.^]\'$k':I/E6>a:/dK<eOoK)E
%jFUd@YW:mYFt&3$D3j14T[1A$W/76e\T&U6,%#9,Afj;'8A.e5(,XUS@eM_cr:,#)k"#[JQXH@V)j]EseE)<@+X/=bj_L=d\85%<
%0A55gk-EpCfHPJE[Z0lgl<_Qmh^Nc.D1o#0'YX]54Up)!r9,/E"pJ@C/lOr27!<^;3^T05ZS9cA6N/GZ*SG$E6,+^H5\UO$q3.+_
%L9LHBi*/ebQVfhT$b7nEAd6<Kn)5U#4,AjM2BDuXQs5%=!;XeHH\kDF8051.9hQ&3'K$dnkCS@Mf8M$.Dom0.BTg'SF!/^EI9t!D
%auG2Nf,\)6p=H],32h<7.h2A!3S^YLO67Md,k]?$\`-/O*)Cj[Ge<Z.qgJi=*a01o^IRuqCaiK*9$kn']Z&;SM*&4J;?81e+4B'5
%PtG,Bid.UV$kDD,%fT4/M7;h2Tu@snUBp[]KEQWsN'WI,s,Is?"qH)3qn]?cM!JSDW@BDhKY\PrQ/ghLb8bt0,tHF'G]9W"H(8j"
%,(?<qGBU7Y9`4>fg-NA[7mlhmmafGT<"kuf\=&g?R%OD<!sq9E[hQHRYq=Vc_,i/oQsk5/16o$EqNeIb<CQ*9o1M'&%rL6>A,D&%
%VZ81clUB2f_1cBPioMFA@pC=1(;_">F<&s*V[RsSZ_G4f();4:gQHZNNMm\aFSdk<VbED.f6B:@5jRa;%Slr:A_#eR9#_+QM0>Dq
%>m?1dUh?&S@Rs%ENke]<AA$_mE2sAG3k:a\TEq4(&\ZBk&/#W!GR?u"N<Pjm2l:::Pj.E7k):_L'oJ/*Bqhn<n0W)cOiZ'G7Wt-)
%29$rXbu3Urg<D:",M*^q^2UT$%C;5p"uZo;6hW^]?H`4T\;b;5r.%m%SYgF]6p(kt*8glQnCWgb:rrX#d3L6!#A;\TPjE[!Il`Ku
%/&Li#P'K?&T#"3ae(7j?GN<^p0*QlZ'aMJ_=H_<)i\hA+P`\H?%`e-pBWO/K0aX3pr5Q(VJB#FV&QRo!ZcY%MVTG1nE,#Xn#-^gs
%?r;.^H#Vn7gr@ndFA>RIG.XZa7u-CXJ$g>L2ElgbFJCTDm^4+;S=]'gDR[XKjuV>dftk:qdrcA=f:#+TC&FmNOfsbdO-"b3QU_K4
%#j12K6[0UX\_fXaO4q19UR`UUE7.W:K#d_028TSj_P'UL4uQ^P7cqa:&dOZ^qCF7S".C/FN_G_Fm'dR@#F+4UpOX+-Isp9rHp<o!
%)LeIPJC?"P&'r[i4Y::m>1o&!E`&2Wdpa`)]F@K.1O'G].(jU.K[/M"0GI$orU>X3s6(,R#[8X$bOlDIZUePAkB\-g&)g[XN/sJ_
%aVh"oVRX$mrOo$Z#;i(ddN4rn[$(7\3%.iQktno[+gCQ6._$RSXFN]ijR)DD:mQb[*lVqEJKKO&(%/-T4sK?a8;-#.\$'iaFoQq6
%)?;(LbO1`NNZG?Wo#5aA$t*!@2SiSW@Eh1q70Pi;,rX<VCVG?"]ZNoi'`/9jdoY1<lI3O?L23&4qbJcS,*\sYgi?22M*M(j#2sCs
%fp*9WBPCP"G/5jm[KRr'EEY7S-.i<UjUN1M)-90<iMK9]9>SHLc_!:Z?kLSd5qWuUWZlYM-*38u$/g.f]s/9e8_b(HmLT@@J4N8/
%9iK"\>Z"%N`0u2l`^!_4+Su4q/Q2@[3<e=Lij<eQ)HI>)>s($f1&F@VaDdr@bg\bY;'DcFCmR/-R6tIDFspnUAiQD4_.<,i*BR65
%k81ahdlMqF534<YHt"3o+6$O$o:L#<^n0-"BtiMA"Xggq5N;kh6s^]G0G99Ya`BsgAKWS50;;H>m;?WGVDCffNu@.=L"YT/+gaTh
%BtP=dr^70d8g]H,=lhU5O<QU"[H["3.rD5!)-]2o<t.N5KcuA.nN]QL/n8Z+((>ipN4<C8?>-]7_cTg3/fVJ\_KSHN2HmJOo*^BE
%P"&\C!mN[X,%=*Q;4!Dq9b/d#_1WkL.1,Y:W/HL0-dO@l`bHK=6*UQO\tg1CA^j.kai,EENPq2.OrO-\J?1"_j[]@T0RT!>a3u/M
%Q#Ml.!8o$o^YrN:3Os,uE^@N`:"\A"'i_H6(pBpJ>RM.JgJe+arJ_`(+%gSPPSOHn+pu@]Ad7]RU.TUmQ=M84^_cZR5!BdtWY@\G
%re@I^"G"f5aVCer2IV+$=&?l!;K8X?'0tn8'E8gGN@M@]8obs&-3hMb,K.JL&Pkomd99$qI&`3a#3^socE&M0Q\ZZ@rfSoN.3\jd
%JiB3#^&dt4^X3eZ4dA!%N'h+,6n7u?q@3DRA[Y5ZC]W9^D.%<&3kC98/+Uu!?Zt?6Gi5a_)hp>Z7<TaCDJUQk[sV7CaeT(6b>jm9
%d^hE\oK,DoY&%fH,]$Lqm+Sn_;-^j'8k@iUoifsY3(5$ADQm0_h)VErao[\k\E"B[eMnAP^ghA0mXBA*L%7FDP%\DD+KX3BK&?J@
%=Zf"pLHLdN,#&n7'R!j2htW)rLb3'tC7?%WMi9?n,gj\NYn$o!_Qi9].gV'""RAd2MJ(6bhA.NXB"7^2[sgYY0F8!1M;dh'[fCZg
%9]:Z1h#A.Xk?bYBg.U&9^d(j?N<4n4#n0AAI0SSMF(=m5T0AJ/K<;9Z*XG>bFnaA0SPk^@[^o4lqgb;!m=?isqe,4*%&#j=>aL8i
%3#icch-d"S=i?#U<a`[XJ,=f-'%1]"h>QCFpjm!9<lbn80V*@<^(UnQ^Acf/c;l"M^Ik7uJ;mYnMLuh(ml'bhdYa_SEgF/h6##C\
%*]&86aVOtS725VGr,;Rl<"T`q<WXI8RfLSSZ>Q1Xd,/;C\0J/4mAOl2?n=?*+K/gec"I@)#0r><8RY"j0>(J$]jcO#$4Ru8r,YX8
%ef=EQRrH.8/(ai(&d$`?E41U.QD486rl/#U7r/dl;;9%)=LuB_eI^5]dP[.lK0R_+@lBFi2aD<WR$o\HQ]/i&J9cN.?\/N1]d2`?
%SlPoDa2oQV;CW?'#5H_cb`a71+f?3Uj#!%+TnSBbB]NU_qYCGm"-?D@@]cUE*69I=[`Bbt@g(I7a(&5(6b,%Ta8$ulIdO'T;Qj$8
%AhZb]4Q,TN+$LY20fB&O=9/C%$n>!p9c4^uk!oo,N!/)K?:rHFmM[f!F;YoIE24*;"dW%;Llt=Y^q9Xd_T<R&/Y%-bX9AYf0$"-d
%.8T=hSKAF*/)CU0#b22*b_(LL4uekcasb2`J\73TcBEojjNPIHDCSQG!7ZUGXMcq'cm^XN1C]LHfK\JJ(TYIi0WJ5)2g&$Z';[8=
%Bdp?Ml&.Ya^Q?JQc[!C!$bQ1iAu25V,/NdMhBo$<kX`4haFWl?[8Bgk]KltHnU#s=iIF+^':M7"''=io$#Tah*Sb['i="uf"aQ^`
%N8Q#sM3SKu0WRI%Q/PFc,<6Z-^IF`9`S5H4$I!BhU)Ad5!\;<%RD@h"[M8R<7*LK*#%mtB:>oSiNt&`@\BV!:dfgOXT3%tNjgQuP
%=tjRSPQ5Lo5kH>;#*"aa5H>Ace_rBO.:*JABF=8ZZ0R#c"R8_#q[d']7LsAl`M:AO9gu<2;_jMi9jc3aau<rU-FSp#K!MT(>>NZ@
%S4a2;$=FP/OX-=qV^=<<[_cJN?<PENDNRgE4Q>suKON*cQ3bbt;Lp\u%3GcV'ZabUBjd!]+eVltYlMeg13uS@Q$%fr*(qVpRL58i
%;!?j"jmnF4N_`;G+=@6R\HlB*DlPV_;U0Vfp:0nK>[GLFe_i]AY?"Q:4^cS9"oEgAG[?ds+u."$1<:u@l58A\AnB(bOAB1?'T7oh
%K*@T/a,p.1H]pd[A.$C\#u"*\2'5&6-6Slgr2]]\L;!cf1en+FVi;[%nKB#Rj:j<b^`jEuo[i"TIP6a+M>/<?:l*GT^`$Z=VN>kP
%<1gW#pf8YK69r='#O.+f;H!3>l3P!F\d,<GK*,r3*DIAW6"+%efpB#;,lK&k4E-F5@;U&)J2_2]NdRQU1uu^>)8!\IaW/JM9rr='
%EH!&8PtV$A"\2PeI?jt)'?S@RRS(qrP"`5O-#c$RL>o/R5R-:/(D!>gA=S/ZL5R0G,&_:Jb9l@Qfbb##rQcblPo>WacfMs3aS?E&
%]Qsj^/0n`b0f%k&]omqJ131c'bRHu:O>=U2Bn\[9((B9u1+?3>*tZS8eIg-?5tDgt2_!ikZ7$Hp>e)kYj10BR.HT*@k5fX,4],*t
%;H8jc)c6Y,"d*&#UHp=H8H?dMAl7RX3PehQ>C_m"WK:<l7U/[H/!_r4;H<3ZF*te9)d[&F&!#\Z124N;04J'6r+\8FGtTsrs%;p2
%^JFo$#*_a5jpGKWcA6&_$b]GogiGRXA$A;q:$I>9YDm"<_FHJHT`tP614kjK*#dI-cA72i//Z6arE2PaH.stQ&:Vk.WXi55n-8Z-
%?(;$u\05j031$8Ciu1`_QM\8;_pJ3UQIUouIQ22`aG&OrAmB^Id%GA'T#oY#V)X&F`'FY\Y2h0("A(V_#]C-j]MK7!G2Y&N;:rr@
%6\=>JQ]Z,??Tg]T$S]*+?,KP(66%UfDkX'!-u'?N(QW)Gn@CfBhod4`'[1MF-g"VELd;$_,fZ>:-0KM\W[iOE\RJV[j+E&co\jbG
%//nj/P/rd'@ktmWK-pspC=E8em"hNR(_<Oo\1GM:,F->OTp\FOU4eY]?HP^3)r8Bjp(l4"@M90mVUoYhL[ppG$"kC%$Rt0-(o4.X
%7qkUY8k<iD!Lt$n'e%>D#W=h68%b;ma\F.sBpqG?TudEl'T(RhA#RK@rG\FRb?]cF(#1-bkE+>k."$$.W"YTO?6EE#7VX(W_=OX2
%:)kmjIB6Q58NULc_1DMr2IV)iQ`KV=GKpMikQ#dlGgRPG>EK:?2r5=DmhZ<S#PacfG2rf>g_$b<--h[0X>?f'4Q9'e'e(LYdr3@1
%&3f'm'jdoUQrD\DA9_OriX0Kafj-#m2]*GI7t3Kj/$/=C2n7d`eHYT6QX.GVM'O@A8W9L;WMSt:_#U6Wr$ZM08>\-AA1pD01/'U`
%"u%$,`$=nN.g>eMh!LJm=:0EQ_s_38&iTdp+/_hJ/f0$s!J$1%X3=[G`g;mN4p>UlVsP,=0cLtLDqEk4rY:=IFMK/N'a)&Kes*H+
%6""thKF1FVaE9hpYn:3\\KJC9K]>X?I,VB;LQV(E?:ci%HABW#Z2+S@EtLpsNP\P&;cjc>V%D1q(Z"-sHl7Z_03D_1M;RO1gqf]^
%Ak!qf.?c#CHbtoEftnIlo"h#6!!\F0b8Dj:VQ'uMq-4^IqWd4K8E;rPhr63*X%5Vk13Zhtj`2pR=a3@Z5f5>>d]ssXbB9a7';YOM
%'j*K1+dMZ!jCgP\O@"%s?lZpeSCm^5&io.jG9BI-If6]+9-//5>U@Zu.Ti5%8[Q^\;_bV7f>.cHkDktn<Z1a?`%+F3NTA#P4[b#'
%K6&"'(;Si0@`#[j*$^<6U\H+k8eY=Pf>M_gru!bP!Q<cog-C+nB$/*m9b?kJm:cr4&9K%,]tn[T(]]=gEljZ#,@/Ft(fZjn.KF>&
%@2$OS4XXb@GSc^i1Y,!'&+riU)<Q^V;[KI3CQ%A0EW1aW.2F9`m1ket_+:6q@(9Yfo1g;F!8:Vc#067\\MP-GcXeVWRtLY0PoP+k
%1ME<</<;ds.On>h,C*uG8b>>lSgEf(%5@->CaeCBJP**>'mPuDB,^JIIAP8>0`nr;&[ss3pPq6radD00lbSo$IDR+&odt:\Pndpn
%k'WL[QBRKcE%YcEU8]tbfA=t!Ul8jH.D1P#b0CMQJJ]qU-upFCo*_UP)]jB2!IK0B^Cs[?97KV?\-&Dg_QG,@cFDO9l@YXdhNm8m
%WX:qN3!l=285r0$S%Vtp/YJ8F58/THLSf+K.V;jWJ;oOp8\rLRG!&^U/E*c1\RGGCXs$EW5XiJ;8HhXELG+Fp1DM-EZ]%?D=JU9"
%]FeaH?*(-[SpKpt=PQa7XQeM2,1ff1q+huAQcl-"Qp"pFZ.)>?<@+0C0hahU4#[`CKdC8a7.rl@&@a7KrT1<&aWnN$>&l=_gmEPs
%TIBlV'T>3+U?ldYF^i'q/<6"r<9r(`KXk#i:8P-Y&;d[3JZ?Q3'c&7LMUBW%]]CXI&]6fE`<qE>-lJ$S6:(.rH:T_V"s!OqJ_2;j
%W)4Y#.nhJNG@[<U(u8++V!m)pI^>!l0M#)sj!$'4PG%!7l&eG91/bQr^dG6oM-hM7.u`S_7qr<(1)".4!PGZL<N:V3Z&T)#^IX8F
%HNXKt^P.@belV5>6OT]s.DBgGBgVAC8=U'XZW%Re04Z)4d3=UnC]u?m8e2EspTk;&#H%9-Gene2chK4(^6p89i\<&`5[ZQ!"9a1H
%#P%0!.MtJCLH-s^?nP6kf:61^"iL-.*2l)M07mQ\_9I#?CGpPcaR:\<%QQ1^&.h9b(?H6"jVT3T,O,gH_\d7m2_t0ES\ZKJAr`-s
%i%=\CAbVDCB.hkl)34KK5(S&`#XR<)JP3$s7GplU_)/tK64(Ku>>cU5F&NokPR;:1Vt5b%<A4_Abu+$\Bi\bBX-/g%EXP1.q'-mF
%9*AfU!l08fnLhOB$qKdAW.)A'Pdfek&+[XrkKNZ6YtN+1B=j/T,7P=I*BFVZLkfF2=pEmZ8%tTe'HCK.a`9R)8.B@*P-HLKSC5AX
%PlM+%.tTs?WgVCbY,1;a+Rm!(?-W9,[>=@m%-oPWkea#Z?Ga6mrH8RahVf0\(V,ND!Q^"DJm?hdRfpCJOL_Le'Tug%2?&<JV5J9l
%#R?dE_ZFk2LYOa8Q3o62V>*C`_t,IJ7#ns>S:]^SJ)q`MJEF^Y^-ur4^H=<gpdU[c\ma5m@1W1hJ:>7K`Wes,NJY5YI#KbuJ4tdD
%V%OMnf:;=\V=<C4Ll[V`MGqijEQACJh6Jls$4"\FVA:G5Hh-d3RCq(cmlp5XaukT$Y(7r:nk:fg)3i!p:rLasH,Bg2(ct(Ng[Vls
%M*<',YLb)[T%/ShHT=$h,J\Gg_(8qhdi@0m$U/*bGc-^&!iSDZmo2'(krY.=V##ChcboE48_*L9BI^4cPY_&HrNV()HG]-];$dc2
%P4L-;Su)h+aQ9QNrSlhc@+HuiF=lmHh2MBK[X6]4gc!"L]JnbmR*@28&9ZS[!QKY@!UN8K6)2mH#7/=8:LM(Yn+6R%@27HgH.Srt
%2tH0''`"_ag"kCp/C6q*M^dCtRo.elp=8MJ4!7a@me#sE/h?ARIp5VF0%N_u(hq&H!QG-c"'fSrJ6SZQh%ir.gGYhNfCm]:E'"nD
%Unb^mRB3>M#53jnhD/^Rll-9QR#.C9#hB)oS*3DI"r-aag.$O>%m^BR;7'nt$grnGAQqVA*+Pe<Gf;Dj@/L.PP7>*fn$YY*N#tsW
%_(f=![)H"$[`p3FD>S(pZlP5]e03eE>[#oD1>s!IkKBr/!=H<nNK[2Q)B,P.5'%qB[LEU$`p5@S^:k>g^qQ`)L&G]=6Cer7$>$.&
%mZY<\<uYWFSKp)JY*e1+S[09Tk@opFnB^K+eW>1uF1/u'2rQihP9+U3lJ(N[e!2ZgiYWm@enl?;p>#s@CkpZ/OWq/,ph+Z^*`<@3
%S'Z4c*[J!2LFlnhko8j/@OE`1DQQbLa-b(B=Z]FGpO`I'q%,RR93A,;`A(cS\&D;Lqdtcq[sLn\`I:'h+Zj5l9NNhs/i`9^BQ8qZ
%$q=/UiF4t`Fh3qN4HUGHNYe%E(RL-u[r(?MCYM\g`pIGe+Zj#f9NS0ZpPc@>2cZ:3F$6qpOr=g/jWMMZ%ZiUsFN1!^Y])YNM=W6i
%eMGPQ0<k==H?Spl6K$L[F)HOq$8SBuP+p:r>1(!"Oq3OXT9$d0Ss%W**gb8ej_8/VPDB]+hGqt^b+;mL(=b%j<2a#<#c?(e6RdB&
%=.KF];Ts,-/Z*m.R%/aaEa]ef0aNNc0,^?h[Y9FKne@f8!32BmZf)Pe@)b^.$+E`;@6$TZa?*&XNo;o:\'48t#6"';a]/&;a=:Yf
%M3o@q"%[2SBqk)j0JS,L0$C@3KdSsFnc4]4Z@Rk$9H<*?6$f!E*;dp6%38M"UY4$LZ3RIoC6Rj`SqYcVWoG;gGe2*>(NIKr_rF(.
%N&HmC@s1VBK?rb$=g[)>m.!oNS'N\N;%!.:U0i$t*Uoo_ZK^C!YN/3%bRTltFF@t._b;047ttadqO"r/a6NL<'DAQ&Oh'(2EsN#!
%]Q9j+lf7q8^,FH\I9Gu$[r@J28*%]Zq!m_M(mh30M,d4l(CF\Ub6W.1"M"e(Y&9>Z)!$@3$P5)0N@JK"bM2B?SG1Pp5\0,PO`q?b
%OkK2WC&X&8pLUqD_D&CTVUnAHa=FPXeB9F!Tp51pdN\9gNpDW@q;A=9X't(AG[klT]^%Bt!@.((ieL^u<B@(<,'sZn5`qI#Ao8<N
%SK<\fjLuW.SlK6Ef4^;)=QIFTEoA^Ei+-T`6B++"OWt\$aONC.Ec<fJTRl/jO?@BB,aVXqrmW201!-Jkj<?!tM^l86,u:kZj<?4%
%EL8j&lJ=!8kbZ::2Au3"=amF;j@NM`X7PEKUn8T&Si+'[!TdH2#;r,Yjd$X+Eb-'#l!tYCWL*5;,!9"WEX%cU_o.n.9IQ6B^Ki/.
%@u5**Y^'\QUn&ruW,F'*]7eRYb\Mjd3&1LfiU&'>Hf$<6J"@sg1Q$:F6kg<4(LAA.&Ga2^)+s'\=2C@OlR<j*lRH"\Q#:@!J,l?)
%fG#K>IZ^_\4Jh^nHtK'93#^!^mTbQPl\Bb(d$C\p^DFGqF:MiqjgHm&)3a[P#Ic:sUmO@Vq6A%[$#gF$\S1bghc;R:=6b3U2V1k3
%V)Z+4K4jl(=4L(1X'n?%;b"MOdVWerqC\+Zdu"1#8`()hR'0#kC#pPq(ZX(-)L=R(n]=I:":\p/)$)(8<hYJ[3%c2,1AaD4;+?%H
%6HVhLd48cj74+mjKp#BSAsiBD6=of-bZf_Bm!%.F.$_i9h$ZhW#KRt<YVQ)qU/im>k0!%MmCY29Pp0=B5Aq7ZW03`'UY_/:Ap85_
%bH1*,QEfDeQ>nn+/b`hf\]3co0!fBA0(\t$GaTlFoJ1_CR%qh!13t_tm>^7pXh,eXB(e3Y3Ga9b!TqBX_Mjb+_i.kI`6<+]W0i?L
%h0klSNZ"$+o!KfsbQpVYN0QHHN!V2%AM-W2R1\X?F2<cclgC8\T/d$eT"/h.\Kuf=lmdj(*"Lk^2:=T$lL$\P;)=7VWoh/)ABrA(
%1BK^U7e)XX7c;[=gmg9t7Ws.q_)<MRE-#/Ch2FVFS$?B3ZC,XNi?[>DPj7\/k<PP_.14'4Mo_DuMOY8dEjriSGtF(B)1eg:>p%Le
%g.Q(%5=Xps!5"oJ3[<!]B5BPAkB<\$mbF/nr`_VuSe4WTR=Ro#H'(P!753'#0gtYm]0]EA*9leA1La?rCD?NegENk^_.Nm3q94a\
%F3>t[`pk>O4;@,L=r[,j@Ym>@iY;>I02BT)e,V>/7>mrXjgSGRn(d"->+.%r5kC;#gS?$,/<^dT2h$@2`h!fr7Nb:dThtKUBt]5?
%JL1fMk"!qJ*-pg/1r!la<m=#'I#&o6Vd:aFH1hCSbsk>_d;8d?-eM6P6;^2C[#-D\.+I))ZOo[ujrIthY:>Z(o=EE(BJ^+"H8pr)
%kGY0'Np(^E6HMa(nI^=/!kj]8L(f]hd3Kr"Pj.$S)g_;:;:69ea\3TtK@rh;;Dc[2'qdBR'Ut=6:W*X6:8KsKZR73H3NAr&:hfXU
%Z^GW1)Lj<.ei7&Om[/tPe^B,1`hg_-h+LBpi&uU)SgI$&oD;9nR`"!qR:]Y]U1nG#bpc`Cf\sWC0dr[M1ac<sE#Oj):*[i7Z.!E-
%KOh"$,2QRYoc62TF!gKmSlEg-F.a#fr!97C9994m"Z:9K5`?@kc:Sf\2,9QuW&_AT'K,,jc`#rL0EjtkZ]Jmj%8r8K]DE:iLJkIh
%(+hB_F9tkjdVEU9&uXkZ>4U264F1O7/Q]!ZM/$AC&ufK\Dr.e!k!_8&C,R3^0BoK_/D],p*sqM'?o@bB9Y2^Y]$*=>0)dC:Cc0f(
%]u4nJ,$@t\:/"mSeIWM<<u6$D9`\?@1'hZ^),@7F3EaU=XN(tQ"Z=pgCXum6euZ^kXVkQF;j5e6ep92gbmFm1>3:S*YViI7Bku:#
%ims(\hO=*R_)88HM<hEkG?<ZN&'3.'A#C2M,EgS7&$0Eq#\J;*&g_eI6H`&69jZlNRcu\Jp<d1kd,SnFTqnl;jsGO?QLOm#0EG)T
%fOaIS2BnPs,;L*P#4&#4Y3f5,J6?<Iq&P3Li!er7%N?e%:<oaKRlBV=@LHb+'Uu0V=mWDPpYS@CNK&jGh9Vt'rN;k7gH,Q_a@7kA
%CgP">:22&D2j)Brj'KON:kl9$F,2:bJUqD(ers>sD^(]E5[j@g\A+[Kf[FXnh;g+@Rk51,iG:\@?t;:^Cdcrpi&k5he@GBkSs)=a
%k%XWnTa>R(1=:!;<]&NHooUFYd`*?6dN4<lD`,OI&j2DPQ\d@N9E#fei8s-3Qi&Y#Z6#`5B?_Tq+(%!<`XWUfe17`jT4J6_S7Rho
%9H4)nqGZ8MjP.-GcirQLosrtr^H$b]M6Zk?s('S"8nc7MGVZ2B_BD^CTbUjLa5rq#379*?Qu*GoppLA']_R4F+nW:?f+5TP:#:$`
%^$')HlJcg9'(*bO$XH?2I(P?qi&1GsZ=,a]n1++TnIg1-HOZfe[>O.hb:=<OQajJQeBQ1r(?$6d\iS21XM!#sADM`>TVg92n\5JN
%0)khFmuR)6Da/.>r:KYhT:c..I4OCkq"XIPQe-`"4oa][YA`<JpZ:0$Dm(7S^OF->s8'LN^HR$jHi<[<?f,0SI/E$Wh\![s^;@pO
%T76XqqsXLeJ"]^7~>
%AI9_PrivateDataEnd
